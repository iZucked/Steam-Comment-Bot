<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (C) Minimax Labs Ltd., 2010 - 2018
    All rights reserved.

-->
<project name="LiNGO DocBook" default="Eclipse">

	<property name="docbook.xml.filename" value="docbook" />
	<property name="docbook.xml.language" value="en" />
	<property name="paper.type" value="A4" />


	<!-- Properties -->
	<property name="dir.classpath.xslt" value="${net.sourceforge.dep4e.resources}/xslt-classpath" />
	<property name="dir.docbook.xml" value="${basedir}/source/${docbook.xml.language}" />
	<property name="dir.docbook.xsl" value="${net.sourceforge.dep4e.resources}/docbook-xsl-ns" />
	<property name="dir.target" value="${basedir}/target/${docbook.xml.language}" />

	<property name="docbook.xml.file" value="${docbook.xml.filename}.xml" />

	<property name="docbook.xsl.catalog" value="${dir.docbook.xsl}/catalog.xml" />

	<property name="docbook.xsl.eclipse" value="${dir.docbook.xsl}/eclipse/eclipse3.xsl" />
	<property name="dir.assets.eclipse" value="${net.sourceforge.dep4e.resources}/assets" />

	<property name="docbook.xsl.epub3" value="${dir.docbook.xsl}/epub3/chunk.xsl" />
	<property name="dir.assets.epub3" value="${net.sourceforge.dep4e.resources}/assets" />

	<property name="docbook.xsl.html5" value="${dir.docbook.xsl}/xhtml5/onechunk.xsl" />
	<property name="dir.assets.html5" value="${net.sourceforge.dep4e.resources}/assets" />

	<property name="docbook.xsl.xsl-fo" value="${dir.docbook.xsl}/fo/docbook.xsl" />
	<property name="dir.assets.xsl-fo" value="${net.sourceforge.dep4e.resources}/assets" />

	<property name="doc-plugin" value="${basedir}/../com.mmxlabs.lingo.doc" />

	<property name="fop.user.configuration.file" value="${net.sourceforge.dep4e.resources}/fop-user-configuration.xml" />

	<!-- Classpath -->
	<path id="classpath.xslt">
		<fileset dir="${dir.classpath.xslt}">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<!-- Tasks -->
	<taskdef name="fop" classname="org.apache.fop.tools.anttasks.Fop" classpathref="classpath.xslt" />

	<!-- Targets -->
	<target name="All" depends="Clean, Eclipse, EPUB 3, HTML5, PDF" description="Generate all output formats" />
	<!--<target name="All" depends="Clean, Eclipse, PDF" description="Generate all output formats" />-->

	<target name="Clean" description="Delete the target directory">
		<delete dir="${basedir}/target" />
	</target>

	<target name="Eclipse" depends="Clean" description="Generate an Eclipse Help System Content Plugin">
		<xslt style="${basedir}/contexts.xsl" basedir="${dir.docbook.xml}" includes="**/${docbook.xml.file}" destdir="${doc-plugin}/" extension=".tmp" classpathref="classpath.xslt" force="true">
			<xmlcatalog refid="xdocs.catalog" />


			<sysproperty key="xml.parsers.SAXParserFactory" value="org.apache.xerces.jaxp.SAXParserFactoryImpl" />
			<sysproperty key="org.apache.xerces.xni.parser.XMLParserConfiguration" value="org.apache.xerces.parsers.XIncludeParserConfiguration" />
			<sysproperty key="javax.xml.transform.TransformerFactory" value="com.icl.saxon.TransformerFactoryImpl" />
			<sysproperty key="xslthl.config" value="file://${dir.docbook.xsl}/highlighting/xslthl-config.xml" />
			<param if="docbook.collection.glossary" name="glossary.collection" expression="${docbook.collection.glossary}" />
			<param if="docbook.collection.bibliography" name="bibliography.collection" expression="${docbook.collection.bibliography}" />
			<param name="base.dir" expression="${doc-plugin}/" />
			<param name="manifest.in.base.dir" expression="1" />
			<param name="suppress.navigation" expression="1" />
			<param name="toc.max.depth" expression="1" />
			<param name="use.extensions" expression="1" />
			<param name="graphicsize.extension" expression="0" />
			<param name="hyphenate" expression="true" />
			<param name="default.table.width" expression="100%" />
			<param name="admon.graphics" expression="1" />
			<param name="admon.textlabel" expression="1" />
			<param name="admon.graphics.extension" expression=".svg" />
			<param name="admon.graphics.path" expression="assets/images/" />
			<param name="callout.graphics" expression="1" />
			<param name="callout.graphics.extension" expression=".svg" />
			<param name="callout.graphics.path" expression="assets/images/callouts/" />
			
			<param name="line-stacking-strategy" expression="font-height" />

			<param name="eclipse.manifest" expression="0" />
			<param name="create.plugin.xml" expression="0" />
			<param name="generate.index:w
				" expression="1" />


			<!--<param name="toc.max.depth" expression="1" />-->
			<!--<param name="generate.toc" expression="appendix nop article nop chapter nop part nop section nop set nop" />-->
		</xslt>
		<delete file="${doc-plugin}/${docbook.xml.filename}.tmp" />
		<copy todir="${doc-plugin}/assets">
			<fileset dir="${dir.assets.eclipse}/">
				<include name="**/*" />
			</fileset>
		</copy>
		<copy todir="${doc-plugin}/" flatten="false">
			<fileset dir="${dir.docbook.xml}/">
				<include name="**/resources/**/*" />
			</fileset>
		</copy>


	</target>

	<xmlcatalog id="xdocs.catalog">

		<catalogpath>
			<fileset dir="${dir.docbook.xsl}" includes="**/*catalog.xml" />
		</catalogpath>


		<dtd publicID="-//stevo//DTD doc 1.0//EN" location="${docbook.xsl.catalog}" />
	</xmlcatalog>

	<target name="EPUB 3" depends="Clean" description="Generate an EPUB 3 eBook file">
		<xslt style="${docbook.xsl.epub3}" basedir="${dir.docbook.xml}" includes="**/${docbook.xml.file}" destdir="${dir.target}/epub" extension=".tmp" classpathref="classpath.xslt" force="true">
			<sysproperty key="xml.parsers.SAXParserFactory" value="org.apache.xerces.jaxp.SAXParserFactoryImpl" />
			<sysproperty key="org.apache.xerces.xni.parser.XMLParserConfiguration" value="org.apache.xerces.parsers.XIncludeParserConfiguration" />
			<sysproperty key="javax.xml.transform.TransformerFactory" value="com.icl.saxon.TransformerFactoryImpl" />
			<sysproperty key="xslthl.config" value="file://${dir.docbook.xsl}/highlighting/xslthl-config.xml" />
			<param if="docbook.collection.glossary" name="glossary.collection" expression="${docbook.collection.glossary}" />
			<param if="docbook.collection.bibliography" name="bibliography.collection" expression="${docbook.collection.bibliography}" />
			<param name="base.dir" expression="${dir.target}/epub/OEBPS" />
			<param name="generate.toc" expression="appendix nop article nop book nop chapter nop part nop section nop set nop" />
			<param name="use.extensions" expression="1" />
			<param name="graphicsize.extension" expression="0" />
			<param name="hyphenate" expression="true" />
			<param name="default.table.width" expression="100%" />
			<param name="admon.graphics" expression="1" />
			<param name="admon.textlabel" expression="1" />
			<param name="admon.graphics.extension" expression=".svg" />
			<param name="admon.graphics.path" expression="assets/images/" />
			<param name="callout.graphics" expression="1" />
			<param name="callout.graphics.extension" expression=".svg" />
			<param name="callout.graphics.path" expression="assets/images/callouts/" />
		</xslt>
		<delete file="${dir.target}/epub/${docbook.xml.filename}.tmp" />
		<copy todir="${dir.target}/epub/OEBPS/resources" flatten="true">
			<fileset dir="${dir.docbook.xml}/">
				<include name="**/resources/**/*" />
			</fileset>
		</copy>
		<copy todir="${dir.target}/epub/OEBPS/assets">
			<fileset dir="${dir.assets.epub3}/">
				<include name="**/*" />
			</fileset>
		</copy>
		<zip basedir="${dir.target}/epub/" destfile="${dir.target}/epub/mimetype.zip" createUnicodeExtraFields="never" compress="false" encoding="UTF-8" includes="mimetype" />
		<zip basedir="${dir.target}/epub/" destfile="${dir.target}/epub/epub.zip" createUnicodeExtraFields="never" compress="true" level="9" encoding="UTF-8" excludes="mimetype" includes="OEBPS/** META-INF/**" />
		<zip destfile="${dir.target}/${docbook.xml.filename}.epub" createUnicodeExtraFields="never" encoding="UTF-8" keepcompression="true" update="true">
			<zipfileset src="${dir.target}/epub/mimetype.zip" />
			<zipfileset src="${dir.target}/epub/epub.zip" />
		</zip>
		<delete dir="${dir.target}/epub" />
	</target>

	<target name="HTML5" depends="Clean" description="Generate a HTML5 file">
		<xslt style="${docbook.xsl.html5}" basedir="${dir.docbook.xml}" includes="**/${docbook.xml.file}" destdir="${dir.target}/html5" extension=".tmp" classpathref="classpath.xslt" force="true">
			<sysproperty key="xml.parsers.SAXParserFactory" value="org.apache.xerces.jaxp.SAXParserFactoryImpl" />
			<sysproperty key="org.apache.xerces.xni.parser.XMLParserConfiguration" value="org.apache.xerces.parsers.XIncludeParserConfiguration" />
			<sysproperty key="javax.xml.transform.TransformerFactory" value="com.icl.saxon.TransformerFactoryImpl" />
			<sysproperty key="xslthl.config" value="file://${dir.docbook.xsl}/highlighting/xslthl-config.xml" />
			<sysproperty key="xml.catalog.files" value="${docbook.xsl.catalog}" />
			<param if="docbook.collection.glossary" name="glossary.collection" expression="${docbook.collection.glossary}" />
			<param if="docbook.collection.bibliography" name="bibliography.collection" expression="${docbook.collection.bibliography}" />
			<param name="base.dir" expression="${dir.target}/html5" />
			<param name="docbook.css.link" expression="0" />
			<param name="docbook.css.source" expression="" />
			<param name="html.cleanup" expression="1" />
			<param name="html.stylesheet" expression="" />
			<param name="make.valid.html" expression="1" />
			<param name="make.clean.html" expression="0" />
			<param name="suppress.navigation" expression="1" />
			<param name="generate.toc" expression="appendix nop article nop chapter nop part nop section nop set nop" />
			<param name="use.extensions" expression="1" />
			<param name="graphicsize.extension" expression="0" />
			<param name="hyphenate" expression="true" />
			<param name="default.table.width" expression="100%" />
			<param name="admon.graphics" expression="1" />
			<param name="admon.textlabel" expression="1" />
			<param name="admon.graphics.extension" expression=".svg" />
			<param name="admon.graphics.path" expression="assets/images/" />
			<param name="callout.graphics" expression="1" />
			<param name="callout.graphics.extension" expression=".svg" />
			<param name="callout.graphics.path" expression="assets/images/callouts/" />
		</xslt>
		<delete file="${dir.target}/html5/${docbook.xml.filename}.tmp" />
		<copy todir="${dir.target}/html5/assets">
			<fileset dir="${dir.assets.html5}/">
				<include name="**/*" />
			</fileset>
		</copy>
		<copy todir="${dir.target}/html5/resources" flatten="true">
			<fileset dir="${dir.docbook.xml}">
				<include name="**/resources/**/*" />
			</fileset>
		</copy>
	</target>

	<target name="PDF" depends="XSL-FO" description="Generate a PDF file">
		<fop format="application/pdf" basedir="${dir.target}/xsl-fo" outdir="${dir.target}" force="true" messagelevel="verbose" throwexceptions="true" userconfig="${fop.user.configuration.file}">
			<fileset dir="${dir.target}">
				<include name="**/*.fo" />
			</fileset>
		</fop>
		<move todir="${dir.target}">
			<fileset dir="${dir.target}/xsl-fo">
				<include name="**/*.pdf" />
			</fileset>
		</move>
	</target>

	<target name="XSL-FO" depends="Clean" description="Generate a XSL-FO file">
		<delete dir="${dir.target}/xsl-fo" />
		<xslt style="${docbook.xsl.xsl-fo}" basedir="${dir.docbook.xml}" includes="**/${docbook.xml.file}" destdir="${dir.target}/xsl-fo" extension=".fo" classpathref="classpath.xslt" force="true">

			<sysproperty key="javax.xml.transform.TransformerFactory" value="com.icl.saxon.TransformerFactoryImpl" />
			<sysproperty key="org.apache.xerces.xni.parser.XMLParserConfiguration" value="org.apache.xerces.parsers.XIncludeParserConfiguration" />
			<sysproperty key="xslthl.config" value="file://${dir.docbook.xsl}/highlighting/xslthl-config.xml" />
			<sysproperty key="xml.parsers.SAXParserFactory" value="org.apache.xerces.jaxp.SAXParserFactoryImpl" />
			<sysproperty key="xml.catalog.files" value="${docbook.xsl.catalog}" />
			<sysproperty key="xml.catalog.prefer" value="system" />

			<param if="docbook.collection.glossary" name="glossary.collection" expression="${docbook.collection.glossary}" />
			<param if="docbook.collection.bibliography" name="bibliography.collection" expression="${docbook.collection.bibliography}" />

			<param name="keep.relative.image.uris" expression="1" />
			<param name="fop.extensions" expression="0" />
			<param name="fop1.extensions" expression="1" />
			<param name="use.extensions" expression="1" />
			<param name="graphicsize.extension" expression="0" />
			<param name="hyphenate" expression="true" />
			<param name="admon.graphics" expression="1" />
			<param name="admon.textlabel" expression="1" />
			<param name="admon.graphics.extension" expression=".svg" />
			<param name="admon.graphics.path" expression="assets/images/" />
			<param name="callout.graphics" expression="1" />
			<param name="callout.graphics.extension" expression=".svg" />
			<param name="callout.graphics.path" expression="assets/images/callouts/" />

			<param name="paper.type" expression="A4" />
			<param name="body.start.indent" expression="0pt" />
		</xslt>
		<copy todir="${dir.target}/xsl-fo/" flatten="false">
			<fileset dir="${dir.docbook.xml}/">
				<include name="**/resources/**/*" />
			</fileset>
		</copy>
		<copy todir="${dir.target}/xsl-fo/assets">
			<fileset dir="${dir.assets.xsl-fo}/">
				<include name="**/*" />
			</fileset>
		</copy>
	</target>

</project>

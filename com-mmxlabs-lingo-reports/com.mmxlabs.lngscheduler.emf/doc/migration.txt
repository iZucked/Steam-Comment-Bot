Using the COPE migrator
-----------------------
1. How it works

Briefly, the file lng.history contains a sequence of operations,
which applied in sequence transform the original model into the
current model version. These operations are grouped into releases,
and the migrator plugin contains the information needed to upgrade
model instances from one release to another.

When editing the model, it is probably best to think through what
you want to do and try to work out how to phrase it in terms of
COPE operations before making any edits, as all edits directly 
manipulate the history (you can edit the history by hand if it is
confused by something you do).

The list of COPE operations is visible from the "COPE operation
browser" view, where you can specify and apply an operation.

2. Things which can cause trouble
2.1 Copying & pasting

Copying and pasting parts of the model occasionally upsets the
history, and even if it doesn't upset it produces large numbers
of un-needed operations. It's probably better to create model
elements from scratch, even if copy-paste would be easier.

3. Releasing a new model version
3.1 Creating a release in the ecore model

 * Open the "COPE Operation Browser" view
 * Press the "Release" button in the view's toolbar, at the top
 * In the "Update Namespace URI" dialog, copy the old URI into
   the new URI field and then increment the new URI's version number
   (at the end of the URI).
 * Press OK

3.2 Updating the migrator plugin

 * Right click on the "History" element (the root element) in the
   history resource in the ecore file, and select "COPE -> Generate Migrator".
 
 * Navigate to the migrator plugin in the workspace, and back out
   of the deletions which the plugin will have made to earlier migrator releases
   (not sure why it does this, or how to stop it)
   
3.2 Updating other projects

 * Open lng.genmodel and rebuild the model & edit plugins
 * Open the plugin.xml for the emf.edit plugin, and replace all instances
   of the old namespace URI with the new namespace URI from step 3.1 (not sure
   why re-generating the edit plugin doesn't do this either). 
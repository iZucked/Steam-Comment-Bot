/**
 * Copyright (C) Minimax Labs Ltd., 2010 - 2016
 * All rights reserved.
 */
package com.mmxlabs.models.lng.analytics.provider;

import java.util.ArrayList;
import java.util.Collection;
import java.util.List;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;
import org.eclipse.emf.common.util.ResourceLocator;
import org.eclipse.emf.edit.domain.EditingDomain;
import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ChildCreationExtenderManager;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IChildCreationExtender;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

import com.mmxlabs.models.lng.analytics.AnalyticsPackage;
import com.mmxlabs.models.lng.analytics.util.AnalyticsAdapterFactory;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class AnalyticsItemProviderAdapterFactory extends AnalyticsAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable, IChildCreationExtender {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This helps manage the child creation extenders.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ChildCreationExtenderManager childCreationExtenderManager = new ChildCreationExtenderManager(AnalyticsEditPlugin.INSTANCE, AnalyticsPackage.eNS_URI);

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public AnalyticsItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.mmxlabs.models.lng.analytics.AnalyticsModel} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AnalyticsModelItemProvider analyticsModelItemProvider;

	/**
	 * This creates an adapter for a {@link com.mmxlabs.models.lng.analytics.AnalyticsModel}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAnalyticsModelAdapter() {
		if (analyticsModelItemProvider == null) {
			analyticsModelItemProvider = new AnalyticsModelItemProvider(this);
		}

		return analyticsModelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.mmxlabs.models.lng.analytics.UnitCostMatrix} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UnitCostMatrixItemProvider unitCostMatrixItemProvider;

	/**
	 * This creates an adapter for a {@link com.mmxlabs.models.lng.analytics.UnitCostMatrix}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUnitCostMatrixAdapter() {
		if (unitCostMatrixItemProvider == null) {
			unitCostMatrixItemProvider = new UnitCostMatrixItemProvider(this);
		}

		return unitCostMatrixItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.mmxlabs.models.lng.analytics.UnitCostLine} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UnitCostLineItemProvider unitCostLineItemProvider;

	/**
	 * This creates an adapter for a {@link com.mmxlabs.models.lng.analytics.UnitCostLine}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUnitCostLineAdapter() {
		if (unitCostLineItemProvider == null) {
			unitCostLineItemProvider = new UnitCostLineItemProvider(this);
		}

		return unitCostLineItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.mmxlabs.models.lng.analytics.Voyage} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VoyageItemProvider voyageItemProvider;

	/**
	 * This creates an adapter for a {@link com.mmxlabs.models.lng.analytics.Voyage}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVoyageAdapter() {
		if (voyageItemProvider == null) {
			voyageItemProvider = new VoyageItemProvider(this);
		}

		return voyageItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.mmxlabs.models.lng.analytics.Visit} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VisitItemProvider visitItemProvider;

	/**
	 * This creates an adapter for a {@link com.mmxlabs.models.lng.analytics.Visit}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVisitAdapter() {
		if (visitItemProvider == null) {
			visitItemProvider = new VisitItemProvider(this);
		}

		return visitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.mmxlabs.models.lng.analytics.CostComponent} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CostComponentItemProvider costComponentItemProvider;

	/**
	 * This creates an adapter for a {@link com.mmxlabs.models.lng.analytics.CostComponent}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCostComponentAdapter() {
		if (costComponentItemProvider == null) {
			costComponentItemProvider = new CostComponentItemProvider(this);
		}

		return costComponentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.mmxlabs.models.lng.analytics.FuelCost} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FuelCostItemProvider fuelCostItemProvider;

	/**
	 * This creates an adapter for a {@link com.mmxlabs.models.lng.analytics.FuelCost}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFuelCostAdapter() {
		if (fuelCostItemProvider == null) {
			fuelCostItemProvider = new FuelCostItemProvider(this);
		}

		return fuelCostItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.mmxlabs.models.lng.analytics.Journey} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected JourneyItemProvider journeyItemProvider;

	/**
	 * This creates an adapter for a {@link com.mmxlabs.models.lng.analytics.Journey}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createJourneyAdapter() {
		if (journeyItemProvider == null) {
			journeyItemProvider = new JourneyItemProvider(this);
		}

		return journeyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.mmxlabs.models.lng.analytics.ShippingCostPlan} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ShippingCostPlanItemProvider shippingCostPlanItemProvider;

	/**
	 * This creates an adapter for a {@link com.mmxlabs.models.lng.analytics.ShippingCostPlan}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createShippingCostPlanAdapter() {
		if (shippingCostPlanItemProvider == null) {
			shippingCostPlanItemProvider = new ShippingCostPlanItemProvider(this);
		}

		return shippingCostPlanItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.mmxlabs.models.lng.analytics.ShippingCostRow} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ShippingCostRowItemProvider shippingCostRowItemProvider;

	/**
	 * This creates an adapter for a {@link com.mmxlabs.models.lng.analytics.ShippingCostRow}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createShippingCostRowAdapter() {
		if (shippingCostRowItemProvider == null) {
			shippingCostRowItemProvider = new ShippingCostRowItemProvider(this);
		}

		return shippingCostRowItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.mmxlabs.models.lng.analytics.CargoSandbox} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CargoSandboxItemProvider cargoSandboxItemProvider;

	/**
	 * This creates an adapter for a {@link com.mmxlabs.models.lng.analytics.CargoSandbox}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCargoSandboxAdapter() {
		if (cargoSandboxItemProvider == null) {
			cargoSandboxItemProvider = new CargoSandboxItemProvider(this);
		}

		return cargoSandboxItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.mmxlabs.models.lng.analytics.ProvisionalCargo} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ProvisionalCargoItemProvider provisionalCargoItemProvider;

	/**
	 * This creates an adapter for a {@link com.mmxlabs.models.lng.analytics.ProvisionalCargo}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createProvisionalCargoAdapter() {
		if (provisionalCargoItemProvider == null) {
			provisionalCargoItemProvider = new ProvisionalCargoItemProvider(this);
		}

		return provisionalCargoItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.mmxlabs.models.lng.analytics.BuyOpportunity} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BuyOpportunityItemProvider buyOpportunityItemProvider;

	/**
	 * This creates an adapter for a {@link com.mmxlabs.models.lng.analytics.BuyOpportunity}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBuyOpportunityAdapter() {
		if (buyOpportunityItemProvider == null) {
			buyOpportunityItemProvider = new BuyOpportunityItemProvider(this);
		}

		return buyOpportunityItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.mmxlabs.models.lng.analytics.SellOpportunity} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SellOpportunityItemProvider sellOpportunityItemProvider;

	/**
	 * This creates an adapter for a {@link com.mmxlabs.models.lng.analytics.SellOpportunity}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSellOpportunityAdapter() {
		if (sellOpportunityItemProvider == null) {
			sellOpportunityItemProvider = new SellOpportunityItemProvider(this);
		}

		return sellOpportunityItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.mmxlabs.models.lng.analytics.BuyMarket} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BuyMarketItemProvider buyMarketItemProvider;

	/**
	 * This creates an adapter for a {@link com.mmxlabs.models.lng.analytics.BuyMarket}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBuyMarketAdapter() {
		if (buyMarketItemProvider == null) {
			buyMarketItemProvider = new BuyMarketItemProvider(this);
		}

		return buyMarketItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.mmxlabs.models.lng.analytics.SellMarket} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SellMarketItemProvider sellMarketItemProvider;

	/**
	 * This creates an adapter for a {@link com.mmxlabs.models.lng.analytics.SellMarket}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSellMarketAdapter() {
		if (sellMarketItemProvider == null) {
			sellMarketItemProvider = new SellMarketItemProvider(this);
		}

		return sellMarketItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.mmxlabs.models.lng.analytics.BuyReference} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BuyReferenceItemProvider buyReferenceItemProvider;

	/**
	 * This creates an adapter for a {@link com.mmxlabs.models.lng.analytics.BuyReference}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBuyReferenceAdapter() {
		if (buyReferenceItemProvider == null) {
			buyReferenceItemProvider = new BuyReferenceItemProvider(this);
		}

		return buyReferenceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.mmxlabs.models.lng.analytics.SellReference} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SellReferenceItemProvider sellReferenceItemProvider;

	/**
	 * This creates an adapter for a {@link com.mmxlabs.models.lng.analytics.SellReference}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSellReferenceAdapter() {
		if (sellReferenceItemProvider == null) {
			sellReferenceItemProvider = new SellReferenceItemProvider(this);
		}

		return sellReferenceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.mmxlabs.models.lng.analytics.BaseCaseRow} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BaseCaseRowItemProvider baseCaseRowItemProvider;

	/**
	 * This creates an adapter for a {@link com.mmxlabs.models.lng.analytics.BaseCaseRow}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBaseCaseRowAdapter() {
		if (baseCaseRowItemProvider == null) {
			baseCaseRowItemProvider = new BaseCaseRowItemProvider(this);
		}

		return baseCaseRowItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.mmxlabs.models.lng.analytics.PartialCaseRow} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PartialCaseRowItemProvider partialCaseRowItemProvider;

	/**
	 * This creates an adapter for a {@link com.mmxlabs.models.lng.analytics.PartialCaseRow}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPartialCaseRowAdapter() {
		if (partialCaseRowItemProvider == null) {
			partialCaseRowItemProvider = new PartialCaseRowItemProvider(this);
		}

		return partialCaseRowItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.mmxlabs.models.lng.analytics.ShippingOption} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ShippingOptionItemProvider shippingOptionItemProvider;

	/**
	 * This creates an adapter for a {@link com.mmxlabs.models.lng.analytics.ShippingOption}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createShippingOptionAdapter() {
		if (shippingOptionItemProvider == null) {
			shippingOptionItemProvider = new ShippingOptionItemProvider(this);
		}

		return shippingOptionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.mmxlabs.models.lng.analytics.FleetShippingOption} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FleetShippingOptionItemProvider fleetShippingOptionItemProvider;

	/**
	 * This creates an adapter for a {@link com.mmxlabs.models.lng.analytics.FleetShippingOption}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFleetShippingOptionAdapter() {
		if (fleetShippingOptionItemProvider == null) {
			fleetShippingOptionItemProvider = new FleetShippingOptionItemProvider(this);
		}

		return fleetShippingOptionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.mmxlabs.models.lng.analytics.OptionalAvailabilityShippingOption} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OptionalAvailabilityShippingOptionItemProvider optionalAvailabilityShippingOptionItemProvider;

	/**
	 * This creates an adapter for a {@link com.mmxlabs.models.lng.analytics.OptionalAvailabilityShippingOption}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOptionalAvailabilityShippingOptionAdapter() {
		if (optionalAvailabilityShippingOptionItemProvider == null) {
			optionalAvailabilityShippingOptionItemProvider = new OptionalAvailabilityShippingOptionItemProvider(this);
		}

		return optionalAvailabilityShippingOptionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.mmxlabs.models.lng.analytics.RoundTripShippingOption} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RoundTripShippingOptionItemProvider roundTripShippingOptionItemProvider;

	/**
	 * This creates an adapter for a {@link com.mmxlabs.models.lng.analytics.RoundTripShippingOption}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRoundTripShippingOptionAdapter() {
		if (roundTripShippingOptionItemProvider == null) {
			roundTripShippingOptionItemProvider = new RoundTripShippingOptionItemProvider(this);
		}

		return roundTripShippingOptionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.mmxlabs.models.lng.analytics.NominatedShippingOption} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NominatedShippingOptionItemProvider nominatedShippingOptionItemProvider;

	/**
	 * This creates an adapter for a {@link com.mmxlabs.models.lng.analytics.NominatedShippingOption}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNominatedShippingOptionAdapter() {
		if (nominatedShippingOptionItemProvider == null) {
			nominatedShippingOptionItemProvider = new NominatedShippingOptionItemProvider(this);
		}

		return nominatedShippingOptionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.mmxlabs.models.lng.analytics.AnalysisResultRow} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AnalysisResultRowItemProvider analysisResultRowItemProvider;

	/**
	 * This creates an adapter for a {@link com.mmxlabs.models.lng.analytics.AnalysisResultRow}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAnalysisResultRowAdapter() {
		if (analysisResultRowItemProvider == null) {
			analysisResultRowItemProvider = new AnalysisResultRowItemProvider(this);
		}

		return analysisResultRowItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.mmxlabs.models.lng.analytics.ResultContainer} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ResultContainerItemProvider resultContainerItemProvider;

	/**
	 * This creates an adapter for a {@link com.mmxlabs.models.lng.analytics.ResultContainer}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createResultContainerAdapter() {
		if (resultContainerItemProvider == null) {
			resultContainerItemProvider = new ResultContainerItemProvider(this);
		}

		return resultContainerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.mmxlabs.models.lng.analytics.AnalysisResultDetail} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AnalysisResultDetailItemProvider analysisResultDetailItemProvider;

	/**
	 * This creates an adapter for a {@link com.mmxlabs.models.lng.analytics.AnalysisResultDetail}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAnalysisResultDetailAdapter() {
		if (analysisResultDetailItemProvider == null) {
			analysisResultDetailItemProvider = new AnalysisResultDetailItemProvider(this);
		}

		return analysisResultDetailItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.mmxlabs.models.lng.analytics.ProfitAndLossResult} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ProfitAndLossResultItemProvider profitAndLossResultItemProvider;

	/**
	 * This creates an adapter for a {@link com.mmxlabs.models.lng.analytics.ProfitAndLossResult}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createProfitAndLossResultAdapter() {
		if (profitAndLossResultItemProvider == null) {
			profitAndLossResultItemProvider = new ProfitAndLossResultItemProvider(this);
		}

		return profitAndLossResultItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.mmxlabs.models.lng.analytics.BreakEvenResult} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BreakEvenResultItemProvider breakEvenResultItemProvider;

	/**
	 * This creates an adapter for a {@link com.mmxlabs.models.lng.analytics.BreakEvenResult}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBreakEvenResultAdapter() {
		if (breakEvenResultItemProvider == null) {
			breakEvenResultItemProvider = new BreakEvenResultItemProvider(this);
		}

		return breakEvenResultItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.mmxlabs.models.lng.analytics.OptionAnalysisModel} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OptionAnalysisModelItemProvider optionAnalysisModelItemProvider;

	/**
	 * This creates an adapter for a {@link com.mmxlabs.models.lng.analytics.OptionAnalysisModel}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOptionAnalysisModelAdapter() {
		if (optionAnalysisModelItemProvider == null) {
			optionAnalysisModelItemProvider = new OptionAnalysisModelItemProvider(this);
		}

		return optionAnalysisModelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.mmxlabs.models.lng.analytics.ResultSet} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ResultSetItemProvider resultSetItemProvider;

	/**
	 * This creates an adapter for a {@link com.mmxlabs.models.lng.analytics.ResultSet}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createResultSetAdapter() {
		if (resultSetItemProvider == null) {
			resultSetItemProvider = new ResultSetItemProvider(this);
		}

		return resultSetItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.mmxlabs.models.lng.analytics.BaseCase} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BaseCaseItemProvider baseCaseItemProvider;

	/**
	 * This creates an adapter for a {@link com.mmxlabs.models.lng.analytics.BaseCase}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBaseCaseAdapter() {
		if (baseCaseItemProvider == null) {
			baseCaseItemProvider = new BaseCaseItemProvider(this);
		}

		return baseCaseItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.mmxlabs.models.lng.analytics.PartialCase} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PartialCaseItemProvider partialCaseItemProvider;

	/**
	 * This creates an adapter for a {@link com.mmxlabs.models.lng.analytics.PartialCase}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPartialCaseAdapter() {
		if (partialCaseItemProvider == null) {
			partialCaseItemProvider = new PartialCaseItemProvider(this);
		}

		return partialCaseItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public List<IChildCreationExtender> getChildCreationExtenders() {
		return childCreationExtenderManager.getChildCreationExtenders();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Collection<?> getNewChildDescriptors(Object object, EditingDomain editingDomain) {
		return childCreationExtenderManager.getNewChildDescriptors(object, editingDomain);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public ResourceLocator getResourceLocator() {
		return childCreationExtenderManager;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void dispose() {
		if (analyticsModelItemProvider != null) analyticsModelItemProvider.dispose();
		if (unitCostMatrixItemProvider != null) unitCostMatrixItemProvider.dispose();
		if (unitCostLineItemProvider != null) unitCostLineItemProvider.dispose();
		if (voyageItemProvider != null) voyageItemProvider.dispose();
		if (visitItemProvider != null) visitItemProvider.dispose();
		if (costComponentItemProvider != null) costComponentItemProvider.dispose();
		if (fuelCostItemProvider != null) fuelCostItemProvider.dispose();
		if (journeyItemProvider != null) journeyItemProvider.dispose();
		if (shippingCostPlanItemProvider != null) shippingCostPlanItemProvider.dispose();
		if (shippingCostRowItemProvider != null) shippingCostRowItemProvider.dispose();
		if (cargoSandboxItemProvider != null) cargoSandboxItemProvider.dispose();
		if (provisionalCargoItemProvider != null) provisionalCargoItemProvider.dispose();
		if (buyOpportunityItemProvider != null) buyOpportunityItemProvider.dispose();
		if (sellOpportunityItemProvider != null) sellOpportunityItemProvider.dispose();
		if (buyMarketItemProvider != null) buyMarketItemProvider.dispose();
		if (sellMarketItemProvider != null) sellMarketItemProvider.dispose();
		if (buyReferenceItemProvider != null) buyReferenceItemProvider.dispose();
		if (sellReferenceItemProvider != null) sellReferenceItemProvider.dispose();
		if (baseCaseRowItemProvider != null) baseCaseRowItemProvider.dispose();
		if (partialCaseRowItemProvider != null) partialCaseRowItemProvider.dispose();
		if (shippingOptionItemProvider != null) shippingOptionItemProvider.dispose();
		if (fleetShippingOptionItemProvider != null) fleetShippingOptionItemProvider.dispose();
		if (optionalAvailabilityShippingOptionItemProvider != null) optionalAvailabilityShippingOptionItemProvider.dispose();
		if (roundTripShippingOptionItemProvider != null) roundTripShippingOptionItemProvider.dispose();
		if (nominatedShippingOptionItemProvider != null) nominatedShippingOptionItemProvider.dispose();
		if (analysisResultRowItemProvider != null) analysisResultRowItemProvider.dispose();
		if (resultContainerItemProvider != null) resultContainerItemProvider.dispose();
		if (analysisResultDetailItemProvider != null) analysisResultDetailItemProvider.dispose();
		if (profitAndLossResultItemProvider != null) profitAndLossResultItemProvider.dispose();
		if (breakEvenResultItemProvider != null) breakEvenResultItemProvider.dispose();
		if (optionAnalysisModelItemProvider != null) optionAnalysisModelItemProvider.dispose();
		if (resultSetItemProvider != null) resultSetItemProvider.dispose();
		if (baseCaseItemProvider != null) baseCaseItemProvider.dispose();
		if (partialCaseItemProvider != null) partialCaseItemProvider.dispose();
	}

}

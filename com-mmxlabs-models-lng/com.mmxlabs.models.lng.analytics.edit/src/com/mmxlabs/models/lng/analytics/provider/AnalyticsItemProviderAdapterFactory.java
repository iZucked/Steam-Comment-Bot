/**
 * Copyright (C) Minimax Labs Ltd., 2010 - 2020
 * All rights reserved.
 */
package com.mmxlabs.models.lng.analytics.provider;

import java.util.ArrayList;
import java.util.Collection;
import java.util.List;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;
import org.eclipse.emf.common.util.ResourceLocator;
import org.eclipse.emf.edit.domain.EditingDomain;
import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ChildCreationExtenderManager;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IChildCreationExtender;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

import com.mmxlabs.models.lng.analytics.AnalyticsPackage;
import com.mmxlabs.models.lng.analytics.util.AnalyticsAdapterFactory;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class AnalyticsItemProviderAdapterFactory extends AnalyticsAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable, IChildCreationExtender {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This helps manage the child creation extenders.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ChildCreationExtenderManager childCreationExtenderManager = new ChildCreationExtenderManager(AnalyticsEditPlugin.INSTANCE, AnalyticsPackage.eNS_URI);

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public AnalyticsItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.mmxlabs.models.lng.analytics.AnalyticsModel} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AnalyticsModelItemProvider analyticsModelItemProvider;

	/**
	 * This creates an adapter for a {@link com.mmxlabs.models.lng.analytics.AnalyticsModel}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAnalyticsModelAdapter() {
		if (analyticsModelItemProvider == null) {
			analyticsModelItemProvider = new AnalyticsModelItemProvider(this);
		}

		return analyticsModelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.mmxlabs.models.lng.analytics.OpenSell} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OpenSellItemProvider openSellItemProvider;

	/**
	 * This creates an adapter for a {@link com.mmxlabs.models.lng.analytics.OpenSell}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOpenSellAdapter() {
		if (openSellItemProvider == null) {
			openSellItemProvider = new OpenSellItemProvider(this);
		}

		return openSellItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.mmxlabs.models.lng.analytics.OpenBuy} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OpenBuyItemProvider openBuyItemProvider;

	/**
	 * This creates an adapter for a {@link com.mmxlabs.models.lng.analytics.OpenBuy}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOpenBuyAdapter() {
		if (openBuyItemProvider == null) {
			openBuyItemProvider = new OpenBuyItemProvider(this);
		}

		return openBuyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.mmxlabs.models.lng.analytics.BuyOpportunity} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BuyOpportunityItemProvider buyOpportunityItemProvider;

	/**
	 * This creates an adapter for a {@link com.mmxlabs.models.lng.analytics.BuyOpportunity}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBuyOpportunityAdapter() {
		if (buyOpportunityItemProvider == null) {
			buyOpportunityItemProvider = new BuyOpportunityItemProvider(this);
		}

		return buyOpportunityItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.mmxlabs.models.lng.analytics.SellOpportunity} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SellOpportunityItemProvider sellOpportunityItemProvider;

	/**
	 * This creates an adapter for a {@link com.mmxlabs.models.lng.analytics.SellOpportunity}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSellOpportunityAdapter() {
		if (sellOpportunityItemProvider == null) {
			sellOpportunityItemProvider = new SellOpportunityItemProvider(this);
		}

		return sellOpportunityItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.mmxlabs.models.lng.analytics.BuyMarket} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BuyMarketItemProvider buyMarketItemProvider;

	/**
	 * This creates an adapter for a {@link com.mmxlabs.models.lng.analytics.BuyMarket}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBuyMarketAdapter() {
		if (buyMarketItemProvider == null) {
			buyMarketItemProvider = new BuyMarketItemProvider(this);
		}

		return buyMarketItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.mmxlabs.models.lng.analytics.SellMarket} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SellMarketItemProvider sellMarketItemProvider;

	/**
	 * This creates an adapter for a {@link com.mmxlabs.models.lng.analytics.SellMarket}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSellMarketAdapter() {
		if (sellMarketItemProvider == null) {
			sellMarketItemProvider = new SellMarketItemProvider(this);
		}

		return sellMarketItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.mmxlabs.models.lng.analytics.BuyReference} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BuyReferenceItemProvider buyReferenceItemProvider;

	/**
	 * This creates an adapter for a {@link com.mmxlabs.models.lng.analytics.BuyReference}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBuyReferenceAdapter() {
		if (buyReferenceItemProvider == null) {
			buyReferenceItemProvider = new BuyReferenceItemProvider(this);
		}

		return buyReferenceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.mmxlabs.models.lng.analytics.SellReference} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SellReferenceItemProvider sellReferenceItemProvider;

	/**
	 * This creates an adapter for a {@link com.mmxlabs.models.lng.analytics.SellReference}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSellReferenceAdapter() {
		if (sellReferenceItemProvider == null) {
			sellReferenceItemProvider = new SellReferenceItemProvider(this);
		}

		return sellReferenceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.mmxlabs.models.lng.analytics.VesselEventOption} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VesselEventOptionItemProvider vesselEventOptionItemProvider;

	/**
	 * This creates an adapter for a {@link com.mmxlabs.models.lng.analytics.VesselEventOption}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVesselEventOptionAdapter() {
		if (vesselEventOptionItemProvider == null) {
			vesselEventOptionItemProvider = new VesselEventOptionItemProvider(this);
		}

		return vesselEventOptionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.mmxlabs.models.lng.analytics.VesselEventReference} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VesselEventReferenceItemProvider vesselEventReferenceItemProvider;

	/**
	 * This creates an adapter for a {@link com.mmxlabs.models.lng.analytics.VesselEventReference}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVesselEventReferenceAdapter() {
		if (vesselEventReferenceItemProvider == null) {
			vesselEventReferenceItemProvider = new VesselEventReferenceItemProvider(this);
		}

		return vesselEventReferenceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.mmxlabs.models.lng.analytics.CharterOutOpportunity} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CharterOutOpportunityItemProvider charterOutOpportunityItemProvider;

	/**
	 * This creates an adapter for a {@link com.mmxlabs.models.lng.analytics.CharterOutOpportunity}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCharterOutOpportunityAdapter() {
		if (charterOutOpportunityItemProvider == null) {
			charterOutOpportunityItemProvider = new CharterOutOpportunityItemProvider(this);
		}

		return charterOutOpportunityItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.mmxlabs.models.lng.analytics.BaseCaseRow} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BaseCaseRowItemProvider baseCaseRowItemProvider;

	/**
	 * This creates an adapter for a {@link com.mmxlabs.models.lng.analytics.BaseCaseRow}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBaseCaseRowAdapter() {
		if (baseCaseRowItemProvider == null) {
			baseCaseRowItemProvider = new BaseCaseRowItemProvider(this);
		}

		return baseCaseRowItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.mmxlabs.models.lng.analytics.PartialCaseRow} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PartialCaseRowItemProvider partialCaseRowItemProvider;

	/**
	 * This creates an adapter for a {@link com.mmxlabs.models.lng.analytics.PartialCaseRow}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPartialCaseRowAdapter() {
		if (partialCaseRowItemProvider == null) {
			partialCaseRowItemProvider = new PartialCaseRowItemProvider(this);
		}

		return partialCaseRowItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.mmxlabs.models.lng.analytics.ShippingOption} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ShippingOptionItemProvider shippingOptionItemProvider;

	/**
	 * This creates an adapter for a {@link com.mmxlabs.models.lng.analytics.ShippingOption}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createShippingOptionAdapter() {
		if (shippingOptionItemProvider == null) {
			shippingOptionItemProvider = new ShippingOptionItemProvider(this);
		}

		return shippingOptionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.mmxlabs.models.lng.analytics.SimpleVesselCharterOption} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SimpleVesselCharterOptionItemProvider simpleVesselCharterOptionItemProvider;

	/**
	 * This creates an adapter for a {@link com.mmxlabs.models.lng.analytics.SimpleVesselCharterOption}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSimpleVesselCharterOptionAdapter() {
		if (simpleVesselCharterOptionItemProvider == null) {
			simpleVesselCharterOptionItemProvider = new SimpleVesselCharterOptionItemProvider(this);
		}

		return simpleVesselCharterOptionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.mmxlabs.models.lng.analytics.OptionalSimpleVesselCharterOption} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OptionalSimpleVesselCharterOptionItemProvider optionalSimpleVesselCharterOptionItemProvider;

	/**
	 * This creates an adapter for a {@link com.mmxlabs.models.lng.analytics.OptionalSimpleVesselCharterOption}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOptionalSimpleVesselCharterOptionAdapter() {
		if (optionalSimpleVesselCharterOptionItemProvider == null) {
			optionalSimpleVesselCharterOptionItemProvider = new OptionalSimpleVesselCharterOptionItemProvider(this);
		}

		return optionalSimpleVesselCharterOptionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.mmxlabs.models.lng.analytics.RoundTripShippingOption} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RoundTripShippingOptionItemProvider roundTripShippingOptionItemProvider;

	/**
	 * This creates an adapter for a {@link com.mmxlabs.models.lng.analytics.RoundTripShippingOption}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRoundTripShippingOptionAdapter() {
		if (roundTripShippingOptionItemProvider == null) {
			roundTripShippingOptionItemProvider = new RoundTripShippingOptionItemProvider(this);
		}

		return roundTripShippingOptionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.mmxlabs.models.lng.analytics.NominatedShippingOption} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NominatedShippingOptionItemProvider nominatedShippingOptionItemProvider;

	/**
	 * This creates an adapter for a {@link com.mmxlabs.models.lng.analytics.NominatedShippingOption}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNominatedShippingOptionAdapter() {
		if (nominatedShippingOptionItemProvider == null) {
			nominatedShippingOptionItemProvider = new NominatedShippingOptionItemProvider(this);
		}

		return nominatedShippingOptionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.mmxlabs.models.lng.analytics.FullVesselCharterOption} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FullVesselCharterOptionItemProvider fullVesselCharterOptionItemProvider;

	/**
	 * This creates an adapter for a {@link com.mmxlabs.models.lng.analytics.FullVesselCharterOption}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFullVesselCharterOptionAdapter() {
		if (fullVesselCharterOptionItemProvider == null) {
			fullVesselCharterOptionItemProvider = new FullVesselCharterOptionItemProvider(this);
		}

		return fullVesselCharterOptionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.mmxlabs.models.lng.analytics.ExistingVesselCharterOption} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ExistingVesselCharterOptionItemProvider existingVesselCharterOptionItemProvider;

	/**
	 * This creates an adapter for a {@link com.mmxlabs.models.lng.analytics.ExistingVesselCharterOption}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createExistingVesselCharterOptionAdapter() {
		if (existingVesselCharterOptionItemProvider == null) {
			existingVesselCharterOptionItemProvider = new ExistingVesselCharterOptionItemProvider(this);
		}

		return existingVesselCharterOptionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.mmxlabs.models.lng.analytics.AnalysisResultDetail} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AnalysisResultDetailItemProvider analysisResultDetailItemProvider;

	/**
	 * This creates an adapter for a {@link com.mmxlabs.models.lng.analytics.AnalysisResultDetail}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAnalysisResultDetailAdapter() {
		if (analysisResultDetailItemProvider == null) {
			analysisResultDetailItemProvider = new AnalysisResultDetailItemProvider(this);
		}

		return analysisResultDetailItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.mmxlabs.models.lng.analytics.ProfitAndLossResult} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ProfitAndLossResultItemProvider profitAndLossResultItemProvider;

	/**
	 * This creates an adapter for a {@link com.mmxlabs.models.lng.analytics.ProfitAndLossResult}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createProfitAndLossResultAdapter() {
		if (profitAndLossResultItemProvider == null) {
			profitAndLossResultItemProvider = new ProfitAndLossResultItemProvider(this);
		}

		return profitAndLossResultItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.mmxlabs.models.lng.analytics.BreakEvenResult} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BreakEvenResultItemProvider breakEvenResultItemProvider;

	/**
	 * This creates an adapter for a {@link com.mmxlabs.models.lng.analytics.BreakEvenResult}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBreakEvenResultAdapter() {
		if (breakEvenResultItemProvider == null) {
			breakEvenResultItemProvider = new BreakEvenResultItemProvider(this);
		}

		return breakEvenResultItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.mmxlabs.models.lng.analytics.OptionAnalysisModel} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OptionAnalysisModelItemProvider optionAnalysisModelItemProvider;

	/**
	 * This creates an adapter for a {@link com.mmxlabs.models.lng.analytics.OptionAnalysisModel}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOptionAnalysisModelAdapter() {
		if (optionAnalysisModelItemProvider == null) {
			optionAnalysisModelItemProvider = new OptionAnalysisModelItemProvider(this);
		}

		return optionAnalysisModelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.mmxlabs.models.lng.analytics.SandboxResult} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SandboxResultItemProvider sandboxResultItemProvider;

	/**
	 * This creates an adapter for a {@link com.mmxlabs.models.lng.analytics.SandboxResult}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSandboxResultAdapter() {
		if (sandboxResultItemProvider == null) {
			sandboxResultItemProvider = new SandboxResultItemProvider(this);
		}

		return sandboxResultItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.mmxlabs.models.lng.analytics.BaseCase} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BaseCaseItemProvider baseCaseItemProvider;

	/**
	 * This creates an adapter for a {@link com.mmxlabs.models.lng.analytics.BaseCase}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBaseCaseAdapter() {
		if (baseCaseItemProvider == null) {
			baseCaseItemProvider = new BaseCaseItemProvider(this);
		}

		return baseCaseItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.mmxlabs.models.lng.analytics.PartialCase} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PartialCaseItemProvider partialCaseItemProvider;

	/**
	 * This creates an adapter for a {@link com.mmxlabs.models.lng.analytics.PartialCase}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPartialCaseAdapter() {
		if (partialCaseItemProvider == null) {
			partialCaseItemProvider = new PartialCaseItemProvider(this);
		}

		return partialCaseItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.mmxlabs.models.lng.analytics.ExistingCharterMarketOption} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ExistingCharterMarketOptionItemProvider existingCharterMarketOptionItemProvider;

	/**
	 * This creates an adapter for a {@link com.mmxlabs.models.lng.analytics.ExistingCharterMarketOption}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createExistingCharterMarketOptionAdapter() {
		if (existingCharterMarketOptionItemProvider == null) {
			existingCharterMarketOptionItemProvider = new ExistingCharterMarketOptionItemProvider(this);
		}

		return existingCharterMarketOptionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.mmxlabs.models.lng.analytics.ActionableSetPlan} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ActionableSetPlanItemProvider actionableSetPlanItemProvider;

	/**
	 * This creates an adapter for a {@link com.mmxlabs.models.lng.analytics.ActionableSetPlan}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createActionableSetPlanAdapter() {
		if (actionableSetPlanItemProvider == null) {
			actionableSetPlanItemProvider = new ActionableSetPlanItemProvider(this);
		}

		return actionableSetPlanItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.mmxlabs.models.lng.analytics.SlotInsertionOptions} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SlotInsertionOptionsItemProvider slotInsertionOptionsItemProvider;

	/**
	 * This creates an adapter for a {@link com.mmxlabs.models.lng.analytics.SlotInsertionOptions}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSlotInsertionOptionsAdapter() {
		if (slotInsertionOptionsItemProvider == null) {
			slotInsertionOptionsItemProvider = new SlotInsertionOptionsItemProvider(this);
		}

		return slotInsertionOptionsItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.mmxlabs.models.lng.analytics.ChangeDescription} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ChangeDescriptionItemProvider changeDescriptionItemProvider;

	/**
	 * This creates an adapter for a {@link com.mmxlabs.models.lng.analytics.ChangeDescription}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createChangeDescriptionAdapter() {
		if (changeDescriptionItemProvider == null) {
			changeDescriptionItemProvider = new ChangeDescriptionItemProvider(this);
		}

		return changeDescriptionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.mmxlabs.models.lng.analytics.OpenSlotChange} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OpenSlotChangeItemProvider openSlotChangeItemProvider;

	/**
	 * This creates an adapter for a {@link com.mmxlabs.models.lng.analytics.OpenSlotChange}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOpenSlotChangeAdapter() {
		if (openSlotChangeItemProvider == null) {
			openSlotChangeItemProvider = new OpenSlotChangeItemProvider(this);
		}

		return openSlotChangeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.mmxlabs.models.lng.analytics.CargoChange} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CargoChangeItemProvider cargoChangeItemProvider;

	/**
	 * This creates an adapter for a {@link com.mmxlabs.models.lng.analytics.CargoChange}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCargoChangeAdapter() {
		if (cargoChangeItemProvider == null) {
			cargoChangeItemProvider = new CargoChangeItemProvider(this);
		}

		return cargoChangeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.mmxlabs.models.lng.analytics.VesselEventChange} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VesselEventChangeItemProvider vesselEventChangeItemProvider;

	/**
	 * This creates an adapter for a {@link com.mmxlabs.models.lng.analytics.VesselEventChange}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVesselEventChangeAdapter() {
		if (vesselEventChangeItemProvider == null) {
			vesselEventChangeItemProvider = new VesselEventChangeItemProvider(this);
		}

		return vesselEventChangeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.mmxlabs.models.lng.analytics.VesselEventDescriptor} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VesselEventDescriptorItemProvider vesselEventDescriptorItemProvider;

	/**
	 * This creates an adapter for a {@link com.mmxlabs.models.lng.analytics.VesselEventDescriptor}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVesselEventDescriptorAdapter() {
		if (vesselEventDescriptorItemProvider == null) {
			vesselEventDescriptorItemProvider = new VesselEventDescriptorItemProvider(this);
		}

		return vesselEventDescriptorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.mmxlabs.models.lng.analytics.RealSlotDescriptor} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RealSlotDescriptorItemProvider realSlotDescriptorItemProvider;

	/**
	 * This creates an adapter for a {@link com.mmxlabs.models.lng.analytics.RealSlotDescriptor}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRealSlotDescriptorAdapter() {
		if (realSlotDescriptorItemProvider == null) {
			realSlotDescriptorItemProvider = new RealSlotDescriptorItemProvider(this);
		}

		return realSlotDescriptorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.mmxlabs.models.lng.analytics.SpotMarketSlotDescriptor} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SpotMarketSlotDescriptorItemProvider spotMarketSlotDescriptorItemProvider;

	/**
	 * This creates an adapter for a {@link com.mmxlabs.models.lng.analytics.SpotMarketSlotDescriptor}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSpotMarketSlotDescriptorAdapter() {
		if (spotMarketSlotDescriptorItemProvider == null) {
			spotMarketSlotDescriptorItemProvider = new SpotMarketSlotDescriptorItemProvider(this);
		}

		return spotMarketSlotDescriptorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.mmxlabs.models.lng.analytics.VesselAllocationDescriptor} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VesselAllocationDescriptorItemProvider vesselAllocationDescriptorItemProvider;

	/**
	 * This creates an adapter for a {@link com.mmxlabs.models.lng.analytics.VesselAllocationDescriptor}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVesselAllocationDescriptorAdapter() {
		if (vesselAllocationDescriptorItemProvider == null) {
			vesselAllocationDescriptorItemProvider = new VesselAllocationDescriptorItemProvider(this);
		}

		return vesselAllocationDescriptorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.mmxlabs.models.lng.analytics.MarketVesselAllocationDescriptor} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MarketVesselAllocationDescriptorItemProvider marketVesselAllocationDescriptorItemProvider;

	/**
	 * This creates an adapter for a {@link com.mmxlabs.models.lng.analytics.MarketVesselAllocationDescriptor}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMarketVesselAllocationDescriptorAdapter() {
		if (marketVesselAllocationDescriptorItemProvider == null) {
			marketVesselAllocationDescriptorItemProvider = new MarketVesselAllocationDescriptorItemProvider(this);
		}

		return marketVesselAllocationDescriptorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.mmxlabs.models.lng.analytics.FleetVesselAllocationDescriptor} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FleetVesselAllocationDescriptorItemProvider fleetVesselAllocationDescriptorItemProvider;

	/**
	 * This creates an adapter for a {@link com.mmxlabs.models.lng.analytics.FleetVesselAllocationDescriptor}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFleetVesselAllocationDescriptorAdapter() {
		if (fleetVesselAllocationDescriptorItemProvider == null) {
			fleetVesselAllocationDescriptorItemProvider = new FleetVesselAllocationDescriptorItemProvider(this);
		}

		return fleetVesselAllocationDescriptorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.mmxlabs.models.lng.analytics.PositionDescriptor} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PositionDescriptorItemProvider positionDescriptorItemProvider;

	/**
	 * This creates an adapter for a {@link com.mmxlabs.models.lng.analytics.PositionDescriptor}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPositionDescriptorAdapter() {
		if (positionDescriptorItemProvider == null) {
			positionDescriptorItemProvider = new PositionDescriptorItemProvider(this);
		}

		return positionDescriptorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.mmxlabs.models.lng.analytics.ViabilityModel} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ViabilityModelItemProvider viabilityModelItemProvider;

	/**
	 * This creates an adapter for a {@link com.mmxlabs.models.lng.analytics.ViabilityModel}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createViabilityModelAdapter() {
		if (viabilityModelItemProvider == null) {
			viabilityModelItemProvider = new ViabilityModelItemProvider(this);
		}

		return viabilityModelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.mmxlabs.models.lng.analytics.ViabilityRow} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ViabilityRowItemProvider viabilityRowItemProvider;

	/**
	 * This creates an adapter for a {@link com.mmxlabs.models.lng.analytics.ViabilityRow}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createViabilityRowAdapter() {
		if (viabilityRowItemProvider == null) {
			viabilityRowItemProvider = new ViabilityRowItemProvider(this);
		}

		return viabilityRowItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.mmxlabs.models.lng.analytics.ViabilityResult} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ViabilityResultItemProvider viabilityResultItemProvider;

	/**
	 * This creates an adapter for a {@link com.mmxlabs.models.lng.analytics.ViabilityResult}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createViabilityResultAdapter() {
		if (viabilityResultItemProvider == null) {
			viabilityResultItemProvider = new ViabilityResultItemProvider(this);
		}

		return viabilityResultItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.mmxlabs.models.lng.analytics.MTMModel} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MTMModelItemProvider mtmModelItemProvider;

	/**
	 * This creates an adapter for a {@link com.mmxlabs.models.lng.analytics.MTMModel}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMTMModelAdapter() {
		if (mtmModelItemProvider == null) {
			mtmModelItemProvider = new MTMModelItemProvider(this);
		}

		return mtmModelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.mmxlabs.models.lng.analytics.MTMResult} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MTMResultItemProvider mtmResultItemProvider;

	/**
	 * This creates an adapter for a {@link com.mmxlabs.models.lng.analytics.MTMResult}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMTMResultAdapter() {
		if (mtmResultItemProvider == null) {
			mtmResultItemProvider = new MTMResultItemProvider(this);
		}

		return mtmResultItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.mmxlabs.models.lng.analytics.MTMRow} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MTMRowItemProvider mtmRowItemProvider;

	/**
	 * This creates an adapter for a {@link com.mmxlabs.models.lng.analytics.MTMRow}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMTMRowAdapter() {
		if (mtmRowItemProvider == null) {
			mtmRowItemProvider = new MTMRowItemProvider(this);
		}

		return mtmRowItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.mmxlabs.models.lng.analytics.BreakEvenAnalysisModel} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BreakEvenAnalysisModelItemProvider breakEvenAnalysisModelItemProvider;

	/**
	 * This creates an adapter for a {@link com.mmxlabs.models.lng.analytics.BreakEvenAnalysisModel}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBreakEvenAnalysisModelAdapter() {
		if (breakEvenAnalysisModelItemProvider == null) {
			breakEvenAnalysisModelItemProvider = new BreakEvenAnalysisModelItemProvider(this);
		}

		return breakEvenAnalysisModelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.mmxlabs.models.lng.analytics.BreakEvenAnalysisRow} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BreakEvenAnalysisRowItemProvider breakEvenAnalysisRowItemProvider;

	/**
	 * This creates an adapter for a {@link com.mmxlabs.models.lng.analytics.BreakEvenAnalysisRow}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBreakEvenAnalysisRowAdapter() {
		if (breakEvenAnalysisRowItemProvider == null) {
			breakEvenAnalysisRowItemProvider = new BreakEvenAnalysisRowItemProvider(this);
		}

		return breakEvenAnalysisRowItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.mmxlabs.models.lng.analytics.BreakEvenAnalysisResultSet} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BreakEvenAnalysisResultSetItemProvider breakEvenAnalysisResultSetItemProvider;

	/**
	 * This creates an adapter for a {@link com.mmxlabs.models.lng.analytics.BreakEvenAnalysisResultSet}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBreakEvenAnalysisResultSetAdapter() {
		if (breakEvenAnalysisResultSetItemProvider == null) {
			breakEvenAnalysisResultSetItemProvider = new BreakEvenAnalysisResultSetItemProvider(this);
		}

		return breakEvenAnalysisResultSetItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.mmxlabs.models.lng.analytics.BreakEvenAnalysisResult} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BreakEvenAnalysisResultItemProvider breakEvenAnalysisResultItemProvider;

	/**
	 * This creates an adapter for a {@link com.mmxlabs.models.lng.analytics.BreakEvenAnalysisResult}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBreakEvenAnalysisResultAdapter() {
		if (breakEvenAnalysisResultItemProvider == null) {
			breakEvenAnalysisResultItemProvider = new BreakEvenAnalysisResultItemProvider(this);
		}

		return breakEvenAnalysisResultItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.mmxlabs.models.lng.analytics.SolutionOption} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SolutionOptionItemProvider solutionOptionItemProvider;

	/**
	 * This creates an adapter for a {@link com.mmxlabs.models.lng.analytics.SolutionOption}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSolutionOptionAdapter() {
		if (solutionOptionItemProvider == null) {
			solutionOptionItemProvider = new SolutionOptionItemProvider(this);
		}

		return solutionOptionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.mmxlabs.models.lng.analytics.OptimisationResult} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OptimisationResultItemProvider optimisationResultItemProvider;

	/**
	 * This creates an adapter for a {@link com.mmxlabs.models.lng.analytics.OptimisationResult}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOptimisationResultAdapter() {
		if (optimisationResultItemProvider == null) {
			optimisationResultItemProvider = new OptimisationResultItemProvider(this);
		}

		return optimisationResultItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.mmxlabs.models.lng.analytics.DualModeSolutionOption} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DualModeSolutionOptionItemProvider dualModeSolutionOptionItemProvider;

	/**
	 * This creates an adapter for a {@link com.mmxlabs.models.lng.analytics.DualModeSolutionOption}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDualModeSolutionOptionAdapter() {
		if (dualModeSolutionOptionItemProvider == null) {
			dualModeSolutionOptionItemProvider = new DualModeSolutionOptionItemProvider(this);
		}

		return dualModeSolutionOptionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.mmxlabs.models.lng.analytics.SolutionOptionMicroCase} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SolutionOptionMicroCaseItemProvider solutionOptionMicroCaseItemProvider;

	/**
	 * This creates an adapter for a {@link com.mmxlabs.models.lng.analytics.SolutionOptionMicroCase}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSolutionOptionMicroCaseAdapter() {
		if (solutionOptionMicroCaseItemProvider == null) {
			solutionOptionMicroCaseItemProvider = new SolutionOptionMicroCaseItemProvider(this);
		}

		return solutionOptionMicroCaseItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public List<IChildCreationExtender> getChildCreationExtenders() {
		return childCreationExtenderManager.getChildCreationExtenders();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Collection<?> getNewChildDescriptors(Object object, EditingDomain editingDomain) {
		return childCreationExtenderManager.getNewChildDescriptors(object, editingDomain);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public ResourceLocator getResourceLocator() {
		return childCreationExtenderManager;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void dispose() {
		if (analyticsModelItemProvider != null) analyticsModelItemProvider.dispose();
		if (openSellItemProvider != null) openSellItemProvider.dispose();
		if (openBuyItemProvider != null) openBuyItemProvider.dispose();
		if (buyOpportunityItemProvider != null) buyOpportunityItemProvider.dispose();
		if (sellOpportunityItemProvider != null) sellOpportunityItemProvider.dispose();
		if (buyMarketItemProvider != null) buyMarketItemProvider.dispose();
		if (sellMarketItemProvider != null) sellMarketItemProvider.dispose();
		if (buyReferenceItemProvider != null) buyReferenceItemProvider.dispose();
		if (sellReferenceItemProvider != null) sellReferenceItemProvider.dispose();
		if (vesselEventOptionItemProvider != null) vesselEventOptionItemProvider.dispose();
		if (vesselEventReferenceItemProvider != null) vesselEventReferenceItemProvider.dispose();
		if (charterOutOpportunityItemProvider != null) charterOutOpportunityItemProvider.dispose();
		if (baseCaseRowItemProvider != null) baseCaseRowItemProvider.dispose();
		if (partialCaseRowItemProvider != null) partialCaseRowItemProvider.dispose();
		if (shippingOptionItemProvider != null) shippingOptionItemProvider.dispose();
		if (simpleVesselCharterOptionItemProvider != null) simpleVesselCharterOptionItemProvider.dispose();
		if (optionalSimpleVesselCharterOptionItemProvider != null) optionalSimpleVesselCharterOptionItemProvider.dispose();
		if (roundTripShippingOptionItemProvider != null) roundTripShippingOptionItemProvider.dispose();
		if (nominatedShippingOptionItemProvider != null) nominatedShippingOptionItemProvider.dispose();
		if (fullVesselCharterOptionItemProvider != null) fullVesselCharterOptionItemProvider.dispose();
		if (existingVesselCharterOptionItemProvider != null) existingVesselCharterOptionItemProvider.dispose();
		if (analysisResultDetailItemProvider != null) analysisResultDetailItemProvider.dispose();
		if (profitAndLossResultItemProvider != null) profitAndLossResultItemProvider.dispose();
		if (breakEvenResultItemProvider != null) breakEvenResultItemProvider.dispose();
		if (optionAnalysisModelItemProvider != null) optionAnalysisModelItemProvider.dispose();
		if (sandboxResultItemProvider != null) sandboxResultItemProvider.dispose();
		if (baseCaseItemProvider != null) baseCaseItemProvider.dispose();
		if (partialCaseItemProvider != null) partialCaseItemProvider.dispose();
		if (existingCharterMarketOptionItemProvider != null) existingCharterMarketOptionItemProvider.dispose();
		if (actionableSetPlanItemProvider != null) actionableSetPlanItemProvider.dispose();
		if (slotInsertionOptionsItemProvider != null) slotInsertionOptionsItemProvider.dispose();
		if (solutionOptionItemProvider != null) solutionOptionItemProvider.dispose();
		if (optimisationResultItemProvider != null) optimisationResultItemProvider.dispose();
		if (dualModeSolutionOptionItemProvider != null) dualModeSolutionOptionItemProvider.dispose();
		if (solutionOptionMicroCaseItemProvider != null) solutionOptionMicroCaseItemProvider.dispose();
		if (changeDescriptionItemProvider != null) changeDescriptionItemProvider.dispose();
		if (openSlotChangeItemProvider != null) openSlotChangeItemProvider.dispose();
		if (cargoChangeItemProvider != null) cargoChangeItemProvider.dispose();
		if (vesselEventChangeItemProvider != null) vesselEventChangeItemProvider.dispose();
		if (vesselEventDescriptorItemProvider != null) vesselEventDescriptorItemProvider.dispose();
		if (realSlotDescriptorItemProvider != null) realSlotDescriptorItemProvider.dispose();
		if (spotMarketSlotDescriptorItemProvider != null) spotMarketSlotDescriptorItemProvider.dispose();
		if (vesselAllocationDescriptorItemProvider != null) vesselAllocationDescriptorItemProvider.dispose();
		if (marketVesselAllocationDescriptorItemProvider != null) marketVesselAllocationDescriptorItemProvider.dispose();
		if (fleetVesselAllocationDescriptorItemProvider != null) fleetVesselAllocationDescriptorItemProvider.dispose();
		if (positionDescriptorItemProvider != null) positionDescriptorItemProvider.dispose();
		if (viabilityModelItemProvider != null) viabilityModelItemProvider.dispose();
		if (viabilityRowItemProvider != null) viabilityRowItemProvider.dispose();
		if (viabilityResultItemProvider != null) viabilityResultItemProvider.dispose();
		if (mtmModelItemProvider != null) mtmModelItemProvider.dispose();
		if (mtmResultItemProvider != null) mtmResultItemProvider.dispose();
		if (mtmRowItemProvider != null) mtmRowItemProvider.dispose();
		if (breakEvenAnalysisModelItemProvider != null) breakEvenAnalysisModelItemProvider.dispose();
		if (breakEvenAnalysisRowItemProvider != null) breakEvenAnalysisRowItemProvider.dispose();
		if (breakEvenAnalysisResultSetItemProvider != null) breakEvenAnalysisResultSetItemProvider.dispose();
		if (breakEvenAnalysisResultItemProvider != null) breakEvenAnalysisResultItemProvider.dispose();
	}

}

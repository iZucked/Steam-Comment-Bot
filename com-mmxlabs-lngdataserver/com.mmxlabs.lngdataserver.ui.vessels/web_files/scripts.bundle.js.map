{"version":3,"sources":["/Users/josephpallamidessi/com-mmxlabs-lngdataserver-web-navigator/~/chart.js/dist/Chart.bundle.js","/Users/josephpallamidessi/com-mmxlabs-lngdataserver-web-navigator/~/script-loader/addScript.js","/Users/josephpallamidessi/com-mmxlabs-lngdataserver-web-navigator/~/chart.js/dist/Chart.bundle.js?4816"],"names":[],"mappings":"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","file":"scripts.bundle.js","sourcesContent":["module.exports = \"/*!\\n * Chart.js\\n * http://chartjs.org/\\n * Version: 2.7.0\\n *\\n * Copyright 2017 Nick Downie\\n * Released under the MIT license\\n * https://github.com/chartjs/Chart.js/blob/master/LICENSE.md\\n */\\n(function(f){if(typeof exports===\\\"object\\\"&&typeof module!==\\\"undefined\\\"){module.exports=f()}else if(typeof define===\\\"function\\\"&&define.amd){define([],f)}else{var g;if(typeof window!==\\\"undefined\\\"){g=window}else if(typeof global!==\\\"undefined\\\"){g=global}else if(typeof self!==\\\"undefined\\\"){g=self}else{g=this}g.Chart = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\\\"function\\\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\\\"Cannot find module '\\\"+o+\\\"'\\\");throw f.code=\\\"MODULE_NOT_FOUND\\\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\\\"function\\\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\\n/* MIT license */\\nvar colorNames = require(5);\\n\\nmodule.exports = {\\n   getRgba: getRgba,\\n   getHsla: getHsla,\\n   getRgb: getRgb,\\n   getHsl: getHsl,\\n   getHwb: getHwb,\\n   getAlpha: getAlpha,\\n\\n   hexString: hexString,\\n   rgbString: rgbString,\\n   rgbaString: rgbaString,\\n   percentString: percentString,\\n   percentaString: percentaString,\\n   hslString: hslString,\\n   hslaString: hslaString,\\n   hwbString: hwbString,\\n   keyword: keyword\\n}\\n\\nfunction getRgba(string) {\\n   if (!string) {\\n      return;\\n   }\\n   var abbr =  /^#([a-fA-F0-9]{3})$/i,\\n       hex =  /^#([a-fA-F0-9]{6})$/i,\\n       rgba = /^rgba?\\\\(\\\\s*([+-]?\\\\d+)\\\\s*,\\\\s*([+-]?\\\\d+)\\\\s*,\\\\s*([+-]?\\\\d+)\\\\s*(?:,\\\\s*([+-]?[\\\\d\\\\.]+)\\\\s*)?\\\\)$/i,\\n       per = /^rgba?\\\\(\\\\s*([+-]?[\\\\d\\\\.]+)\\\\%\\\\s*,\\\\s*([+-]?[\\\\d\\\\.]+)\\\\%\\\\s*,\\\\s*([+-]?[\\\\d\\\\.]+)\\\\%\\\\s*(?:,\\\\s*([+-]?[\\\\d\\\\.]+)\\\\s*)?\\\\)$/i,\\n       keyword = /(\\\\w+)/;\\n\\n   var rgb = [0, 0, 0],\\n       a = 1,\\n       match = string.match(abbr);\\n   if (match) {\\n      match = match[1];\\n      for (var i = 0; i < rgb.length; i++) {\\n         rgb[i] = parseInt(match[i] + match[i], 16);\\n      }\\n   }\\n   else if (match = string.match(hex)) {\\n      match = match[1];\\n      for (var i = 0; i < rgb.length; i++) {\\n         rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\\n      }\\n   }\\n   else if (match = string.match(rgba)) {\\n      for (var i = 0; i < rgb.length; i++) {\\n         rgb[i] = parseInt(match[i + 1]);\\n      }\\n      a = parseFloat(match[4]);\\n   }\\n   else if (match = string.match(per)) {\\n      for (var i = 0; i < rgb.length; i++) {\\n         rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\\n      }\\n      a = parseFloat(match[4]);\\n   }\\n   else if (match = string.match(keyword)) {\\n      if (match[1] == \\\"transparent\\\") {\\n         return [0, 0, 0, 0];\\n      }\\n      rgb = colorNames[match[1]];\\n      if (!rgb) {\\n         return;\\n      }\\n   }\\n\\n   for (var i = 0; i < rgb.length; i++) {\\n      rgb[i] = scale(rgb[i], 0, 255);\\n   }\\n   if (!a && a != 0) {\\n      a = 1;\\n   }\\n   else {\\n      a = scale(a, 0, 1);\\n   }\\n   rgb[3] = a;\\n   return rgb;\\n}\\n\\nfunction getHsla(string) {\\n   if (!string) {\\n      return;\\n   }\\n   var hsl = /^hsla?\\\\(\\\\s*([+-]?\\\\d+)(?:deg)?\\\\s*,\\\\s*([+-]?[\\\\d\\\\.]+)%\\\\s*,\\\\s*([+-]?[\\\\d\\\\.]+)%\\\\s*(?:,\\\\s*([+-]?[\\\\d\\\\.]+)\\\\s*)?\\\\)/;\\n   var match = string.match(hsl);\\n   if (match) {\\n      var alpha = parseFloat(match[4]);\\n      var h = scale(parseInt(match[1]), 0, 360),\\n          s = scale(parseFloat(match[2]), 0, 100),\\n          l = scale(parseFloat(match[3]), 0, 100),\\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\\n      return [h, s, l, a];\\n   }\\n}\\n\\nfunction getHwb(string) {\\n   if (!string) {\\n      return;\\n   }\\n   var hwb = /^hwb\\\\(\\\\s*([+-]?\\\\d+)(?:deg)?\\\\s*,\\\\s*([+-]?[\\\\d\\\\.]+)%\\\\s*,\\\\s*([+-]?[\\\\d\\\\.]+)%\\\\s*(?:,\\\\s*([+-]?[\\\\d\\\\.]+)\\\\s*)?\\\\)/;\\n   var match = string.match(hwb);\\n   if (match) {\\n    var alpha = parseFloat(match[4]);\\n      var h = scale(parseInt(match[1]), 0, 360),\\n          w = scale(parseFloat(match[2]), 0, 100),\\n          b = scale(parseFloat(match[3]), 0, 100),\\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\\n      return [h, w, b, a];\\n   }\\n}\\n\\nfunction getRgb(string) {\\n   var rgba = getRgba(string);\\n   return rgba && rgba.slice(0, 3);\\n}\\n\\nfunction getHsl(string) {\\n  var hsla = getHsla(string);\\n  return hsla && hsla.slice(0, 3);\\n}\\n\\nfunction getAlpha(string) {\\n   var vals = getRgba(string);\\n   if (vals) {\\n      return vals[3];\\n   }\\n   else if (vals = getHsla(string)) {\\n      return vals[3];\\n   }\\n   else if (vals = getHwb(string)) {\\n      return vals[3];\\n   }\\n}\\n\\n// generators\\nfunction hexString(rgb) {\\n   return \\\"#\\\" + hexDouble(rgb[0]) + hexDouble(rgb[1])\\n              + hexDouble(rgb[2]);\\n}\\n\\nfunction rgbString(rgba, alpha) {\\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\\n      return rgbaString(rgba, alpha);\\n   }\\n   return \\\"rgb(\\\" + rgba[0] + \\\", \\\" + rgba[1] + \\\", \\\" + rgba[2] + \\\")\\\";\\n}\\n\\nfunction rgbaString(rgba, alpha) {\\n   if (alpha === undefined) {\\n      alpha = (rgba[3] !== undefined ? rgba[3] : 1);\\n   }\\n   return \\\"rgba(\\\" + rgba[0] + \\\", \\\" + rgba[1] + \\\", \\\" + rgba[2]\\n           + \\\", \\\" + alpha + \\\")\\\";\\n}\\n\\nfunction percentString(rgba, alpha) {\\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\\n      return percentaString(rgba, alpha);\\n   }\\n   var r = Math.round(rgba[0]/255 * 100),\\n       g = Math.round(rgba[1]/255 * 100),\\n       b = Math.round(rgba[2]/255 * 100);\\n\\n   return \\\"rgb(\\\" + r + \\\"%, \\\" + g + \\\"%, \\\" + b + \\\"%)\\\";\\n}\\n\\nfunction percentaString(rgba, alpha) {\\n   var r = Math.round(rgba[0]/255 * 100),\\n       g = Math.round(rgba[1]/255 * 100),\\n       b = Math.round(rgba[2]/255 * 100);\\n   return \\\"rgba(\\\" + r + \\\"%, \\\" + g + \\\"%, \\\" + b + \\\"%, \\\" + (alpha || rgba[3] || 1) + \\\")\\\";\\n}\\n\\nfunction hslString(hsla, alpha) {\\n   if (alpha < 1 || (hsla[3] && hsla[3] < 1)) {\\n      return hslaString(hsla, alpha);\\n   }\\n   return \\\"hsl(\\\" + hsla[0] + \\\", \\\" + hsla[1] + \\\"%, \\\" + hsla[2] + \\\"%)\\\";\\n}\\n\\nfunction hslaString(hsla, alpha) {\\n   if (alpha === undefined) {\\n      alpha = (hsla[3] !== undefined ? hsla[3] : 1);\\n   }\\n   return \\\"hsla(\\\" + hsla[0] + \\\", \\\" + hsla[1] + \\\"%, \\\" + hsla[2] + \\\"%, \\\"\\n           + alpha + \\\")\\\";\\n}\\n\\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\\n// (hwb have alpha optional & 1 is default value)\\nfunction hwbString(hwb, alpha) {\\n   if (alpha === undefined) {\\n      alpha = (hwb[3] !== undefined ? hwb[3] : 1);\\n   }\\n   return \\\"hwb(\\\" + hwb[0] + \\\", \\\" + hwb[1] + \\\"%, \\\" + hwb[2] + \\\"%\\\"\\n           + (alpha !== undefined && alpha !== 1 ? \\\", \\\" + alpha : \\\"\\\") + \\\")\\\";\\n}\\n\\nfunction keyword(rgb) {\\n  return reverseNames[rgb.slice(0, 3)];\\n}\\n\\n// helpers\\nfunction scale(num, min, max) {\\n   return Math.min(Math.max(min, num), max);\\n}\\n\\nfunction hexDouble(num) {\\n  var str = num.toString(16).toUpperCase();\\n  return (str.length < 2) ? \\\"0\\\" + str : str;\\n}\\n\\n\\n//create a list of reverse color names\\nvar reverseNames = {};\\nfor (var name in colorNames) {\\n   reverseNames[colorNames[name]] = name;\\n}\\n\\n},{\\\"5\\\":5}],2:[function(require,module,exports){\\n/* MIT license */\\nvar convert = require(4);\\nvar string = require(1);\\n\\nvar Color = function (obj) {\\n\\tif (obj instanceof Color) {\\n\\t\\treturn obj;\\n\\t}\\n\\tif (!(this instanceof Color)) {\\n\\t\\treturn new Color(obj);\\n\\t}\\n\\n\\tthis.valid = false;\\n\\tthis.values = {\\n\\t\\trgb: [0, 0, 0],\\n\\t\\thsl: [0, 0, 0],\\n\\t\\thsv: [0, 0, 0],\\n\\t\\thwb: [0, 0, 0],\\n\\t\\tcmyk: [0, 0, 0, 0],\\n\\t\\talpha: 1\\n\\t};\\n\\n\\t// parse Color() argument\\n\\tvar vals;\\n\\tif (typeof obj === 'string') {\\n\\t\\tvals = string.getRgba(obj);\\n\\t\\tif (vals) {\\n\\t\\t\\tthis.setValues('rgb', vals);\\n\\t\\t} else if (vals = string.getHsla(obj)) {\\n\\t\\t\\tthis.setValues('hsl', vals);\\n\\t\\t} else if (vals = string.getHwb(obj)) {\\n\\t\\t\\tthis.setValues('hwb', vals);\\n\\t\\t}\\n\\t} else if (typeof obj === 'object') {\\n\\t\\tvals = obj;\\n\\t\\tif (vals.r !== undefined || vals.red !== undefined) {\\n\\t\\t\\tthis.setValues('rgb', vals);\\n\\t\\t} else if (vals.l !== undefined || vals.lightness !== undefined) {\\n\\t\\t\\tthis.setValues('hsl', vals);\\n\\t\\t} else if (vals.v !== undefined || vals.value !== undefined) {\\n\\t\\t\\tthis.setValues('hsv', vals);\\n\\t\\t} else if (vals.w !== undefined || vals.whiteness !== undefined) {\\n\\t\\t\\tthis.setValues('hwb', vals);\\n\\t\\t} else if (vals.c !== undefined || vals.cyan !== undefined) {\\n\\t\\t\\tthis.setValues('cmyk', vals);\\n\\t\\t}\\n\\t}\\n};\\n\\nColor.prototype = {\\n\\tisValid: function () {\\n\\t\\treturn this.valid;\\n\\t},\\n\\trgb: function () {\\n\\t\\treturn this.setSpace('rgb', arguments);\\n\\t},\\n\\thsl: function () {\\n\\t\\treturn this.setSpace('hsl', arguments);\\n\\t},\\n\\thsv: function () {\\n\\t\\treturn this.setSpace('hsv', arguments);\\n\\t},\\n\\thwb: function () {\\n\\t\\treturn this.setSpace('hwb', arguments);\\n\\t},\\n\\tcmyk: function () {\\n\\t\\treturn this.setSpace('cmyk', arguments);\\n\\t},\\n\\n\\trgbArray: function () {\\n\\t\\treturn this.values.rgb;\\n\\t},\\n\\thslArray: function () {\\n\\t\\treturn this.values.hsl;\\n\\t},\\n\\thsvArray: function () {\\n\\t\\treturn this.values.hsv;\\n\\t},\\n\\thwbArray: function () {\\n\\t\\tvar values = this.values;\\n\\t\\tif (values.alpha !== 1) {\\n\\t\\t\\treturn values.hwb.concat([values.alpha]);\\n\\t\\t}\\n\\t\\treturn values.hwb;\\n\\t},\\n\\tcmykArray: function () {\\n\\t\\treturn this.values.cmyk;\\n\\t},\\n\\trgbaArray: function () {\\n\\t\\tvar values = this.values;\\n\\t\\treturn values.rgb.concat([values.alpha]);\\n\\t},\\n\\thslaArray: function () {\\n\\t\\tvar values = this.values;\\n\\t\\treturn values.hsl.concat([values.alpha]);\\n\\t},\\n\\talpha: function (val) {\\n\\t\\tif (val === undefined) {\\n\\t\\t\\treturn this.values.alpha;\\n\\t\\t}\\n\\t\\tthis.setValues('alpha', val);\\n\\t\\treturn this;\\n\\t},\\n\\n\\tred: function (val) {\\n\\t\\treturn this.setChannel('rgb', 0, val);\\n\\t},\\n\\tgreen: function (val) {\\n\\t\\treturn this.setChannel('rgb', 1, val);\\n\\t},\\n\\tblue: function (val) {\\n\\t\\treturn this.setChannel('rgb', 2, val);\\n\\t},\\n\\thue: function (val) {\\n\\t\\tif (val) {\\n\\t\\t\\tval %= 360;\\n\\t\\t\\tval = val < 0 ? 360 + val : val;\\n\\t\\t}\\n\\t\\treturn this.setChannel('hsl', 0, val);\\n\\t},\\n\\tsaturation: function (val) {\\n\\t\\treturn this.setChannel('hsl', 1, val);\\n\\t},\\n\\tlightness: function (val) {\\n\\t\\treturn this.setChannel('hsl', 2, val);\\n\\t},\\n\\tsaturationv: function (val) {\\n\\t\\treturn this.setChannel('hsv', 1, val);\\n\\t},\\n\\twhiteness: function (val) {\\n\\t\\treturn this.setChannel('hwb', 1, val);\\n\\t},\\n\\tblackness: function (val) {\\n\\t\\treturn this.setChannel('hwb', 2, val);\\n\\t},\\n\\tvalue: function (val) {\\n\\t\\treturn this.setChannel('hsv', 2, val);\\n\\t},\\n\\tcyan: function (val) {\\n\\t\\treturn this.setChannel('cmyk', 0, val);\\n\\t},\\n\\tmagenta: function (val) {\\n\\t\\treturn this.setChannel('cmyk', 1, val);\\n\\t},\\n\\tyellow: function (val) {\\n\\t\\treturn this.setChannel('cmyk', 2, val);\\n\\t},\\n\\tblack: function (val) {\\n\\t\\treturn this.setChannel('cmyk', 3, val);\\n\\t},\\n\\n\\thexString: function () {\\n\\t\\treturn string.hexString(this.values.rgb);\\n\\t},\\n\\trgbString: function () {\\n\\t\\treturn string.rgbString(this.values.rgb, this.values.alpha);\\n\\t},\\n\\trgbaString: function () {\\n\\t\\treturn string.rgbaString(this.values.rgb, this.values.alpha);\\n\\t},\\n\\tpercentString: function () {\\n\\t\\treturn string.percentString(this.values.rgb, this.values.alpha);\\n\\t},\\n\\thslString: function () {\\n\\t\\treturn string.hslString(this.values.hsl, this.values.alpha);\\n\\t},\\n\\thslaString: function () {\\n\\t\\treturn string.hslaString(this.values.hsl, this.values.alpha);\\n\\t},\\n\\thwbString: function () {\\n\\t\\treturn string.hwbString(this.values.hwb, this.values.alpha);\\n\\t},\\n\\tkeyword: function () {\\n\\t\\treturn string.keyword(this.values.rgb, this.values.alpha);\\n\\t},\\n\\n\\trgbNumber: function () {\\n\\t\\tvar rgb = this.values.rgb;\\n\\t\\treturn (rgb[0] << 16) | (rgb[1] << 8) | rgb[2];\\n\\t},\\n\\n\\tluminosity: function () {\\n\\t\\t// http://www.w3.org/TR/WCAG20/#relativeluminancedef\\n\\t\\tvar rgb = this.values.rgb;\\n\\t\\tvar lum = [];\\n\\t\\tfor (var i = 0; i < rgb.length; i++) {\\n\\t\\t\\tvar chan = rgb[i] / 255;\\n\\t\\t\\tlum[i] = (chan <= 0.03928) ? chan / 12.92 : Math.pow(((chan + 0.055) / 1.055), 2.4);\\n\\t\\t}\\n\\t\\treturn 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\\n\\t},\\n\\n\\tcontrast: function (color2) {\\n\\t\\t// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\\n\\t\\tvar lum1 = this.luminosity();\\n\\t\\tvar lum2 = color2.luminosity();\\n\\t\\tif (lum1 > lum2) {\\n\\t\\t\\treturn (lum1 + 0.05) / (lum2 + 0.05);\\n\\t\\t}\\n\\t\\treturn (lum2 + 0.05) / (lum1 + 0.05);\\n\\t},\\n\\n\\tlevel: function (color2) {\\n\\t\\tvar contrastRatio = this.contrast(color2);\\n\\t\\tif (contrastRatio >= 7.1) {\\n\\t\\t\\treturn 'AAA';\\n\\t\\t}\\n\\n\\t\\treturn (contrastRatio >= 4.5) ? 'AA' : '';\\n\\t},\\n\\n\\tdark: function () {\\n\\t\\t// YIQ equation from http://24ways.org/2010/calculating-color-contrast\\n\\t\\tvar rgb = this.values.rgb;\\n\\t\\tvar yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\\n\\t\\treturn yiq < 128;\\n\\t},\\n\\n\\tlight: function () {\\n\\t\\treturn !this.dark();\\n\\t},\\n\\n\\tnegate: function () {\\n\\t\\tvar rgb = [];\\n\\t\\tfor (var i = 0; i < 3; i++) {\\n\\t\\t\\trgb[i] = 255 - this.values.rgb[i];\\n\\t\\t}\\n\\t\\tthis.setValues('rgb', rgb);\\n\\t\\treturn this;\\n\\t},\\n\\n\\tlighten: function (ratio) {\\n\\t\\tvar hsl = this.values.hsl;\\n\\t\\thsl[2] += hsl[2] * ratio;\\n\\t\\tthis.setValues('hsl', hsl);\\n\\t\\treturn this;\\n\\t},\\n\\n\\tdarken: function (ratio) {\\n\\t\\tvar hsl = this.values.hsl;\\n\\t\\thsl[2] -= hsl[2] * ratio;\\n\\t\\tthis.setValues('hsl', hsl);\\n\\t\\treturn this;\\n\\t},\\n\\n\\tsaturate: function (ratio) {\\n\\t\\tvar hsl = this.values.hsl;\\n\\t\\thsl[1] += hsl[1] * ratio;\\n\\t\\tthis.setValues('hsl', hsl);\\n\\t\\treturn this;\\n\\t},\\n\\n\\tdesaturate: function (ratio) {\\n\\t\\tvar hsl = this.values.hsl;\\n\\t\\thsl[1] -= hsl[1] * ratio;\\n\\t\\tthis.setValues('hsl', hsl);\\n\\t\\treturn this;\\n\\t},\\n\\n\\twhiten: function (ratio) {\\n\\t\\tvar hwb = this.values.hwb;\\n\\t\\thwb[1] += hwb[1] * ratio;\\n\\t\\tthis.setValues('hwb', hwb);\\n\\t\\treturn this;\\n\\t},\\n\\n\\tblacken: function (ratio) {\\n\\t\\tvar hwb = this.values.hwb;\\n\\t\\thwb[2] += hwb[2] * ratio;\\n\\t\\tthis.setValues('hwb', hwb);\\n\\t\\treturn this;\\n\\t},\\n\\n\\tgreyscale: function () {\\n\\t\\tvar rgb = this.values.rgb;\\n\\t\\t// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\\n\\t\\tvar val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\\n\\t\\tthis.setValues('rgb', [val, val, val]);\\n\\t\\treturn this;\\n\\t},\\n\\n\\tclearer: function (ratio) {\\n\\t\\tvar alpha = this.values.alpha;\\n\\t\\tthis.setValues('alpha', alpha - (alpha * ratio));\\n\\t\\treturn this;\\n\\t},\\n\\n\\topaquer: function (ratio) {\\n\\t\\tvar alpha = this.values.alpha;\\n\\t\\tthis.setValues('alpha', alpha + (alpha * ratio));\\n\\t\\treturn this;\\n\\t},\\n\\n\\trotate: function (degrees) {\\n\\t\\tvar hsl = this.values.hsl;\\n\\t\\tvar hue = (hsl[0] + degrees) % 360;\\n\\t\\thsl[0] = hue < 0 ? 360 + hue : hue;\\n\\t\\tthis.setValues('hsl', hsl);\\n\\t\\treturn this;\\n\\t},\\n\\n\\t/**\\n\\t * Ported from sass implementation in C\\n\\t * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\\n\\t */\\n\\tmix: function (mixinColor, weight) {\\n\\t\\tvar color1 = this;\\n\\t\\tvar color2 = mixinColor;\\n\\t\\tvar p = weight === undefined ? 0.5 : weight;\\n\\n\\t\\tvar w = 2 * p - 1;\\n\\t\\tvar a = color1.alpha() - color2.alpha();\\n\\n\\t\\tvar w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\\n\\t\\tvar w2 = 1 - w1;\\n\\n\\t\\treturn this\\n\\t\\t\\t.rgb(\\n\\t\\t\\t\\tw1 * color1.red() + w2 * color2.red(),\\n\\t\\t\\t\\tw1 * color1.green() + w2 * color2.green(),\\n\\t\\t\\t\\tw1 * color1.blue() + w2 * color2.blue()\\n\\t\\t\\t)\\n\\t\\t\\t.alpha(color1.alpha() * p + color2.alpha() * (1 - p));\\n\\t},\\n\\n\\ttoJSON: function () {\\n\\t\\treturn this.rgb();\\n\\t},\\n\\n\\tclone: function () {\\n\\t\\t// NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\\n\\t\\t// making the final build way to big to embed in Chart.js. So let's do it manually,\\n\\t\\t// assuming that values to clone are 1 dimension arrays containing only numbers,\\n\\t\\t// except 'alpha' which is a number.\\n\\t\\tvar result = new Color();\\n\\t\\tvar source = this.values;\\n\\t\\tvar target = result.values;\\n\\t\\tvar value, type;\\n\\n\\t\\tfor (var prop in source) {\\n\\t\\t\\tif (source.hasOwnProperty(prop)) {\\n\\t\\t\\t\\tvalue = source[prop];\\n\\t\\t\\t\\ttype = ({}).toString.call(value);\\n\\t\\t\\t\\tif (type === '[object Array]') {\\n\\t\\t\\t\\t\\ttarget[prop] = value.slice(0);\\n\\t\\t\\t\\t} else if (type === '[object Number]') {\\n\\t\\t\\t\\t\\ttarget[prop] = value;\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tconsole.error('unexpected color value:', value);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn result;\\n\\t}\\n};\\n\\nColor.prototype.spaces = {\\n\\trgb: ['red', 'green', 'blue'],\\n\\thsl: ['hue', 'saturation', 'lightness'],\\n\\thsv: ['hue', 'saturation', 'value'],\\n\\thwb: ['hue', 'whiteness', 'blackness'],\\n\\tcmyk: ['cyan', 'magenta', 'yellow', 'black']\\n};\\n\\nColor.prototype.maxes = {\\n\\trgb: [255, 255, 255],\\n\\thsl: [360, 100, 100],\\n\\thsv: [360, 100, 100],\\n\\thwb: [360, 100, 100],\\n\\tcmyk: [100, 100, 100, 100]\\n};\\n\\nColor.prototype.getValues = function (space) {\\n\\tvar values = this.values;\\n\\tvar vals = {};\\n\\n\\tfor (var i = 0; i < space.length; i++) {\\n\\t\\tvals[space.charAt(i)] = values[space][i];\\n\\t}\\n\\n\\tif (values.alpha !== 1) {\\n\\t\\tvals.a = values.alpha;\\n\\t}\\n\\n\\t// {r: 255, g: 255, b: 255, a: 0.4}\\n\\treturn vals;\\n};\\n\\nColor.prototype.setValues = function (space, vals) {\\n\\tvar values = this.values;\\n\\tvar spaces = this.spaces;\\n\\tvar maxes = this.maxes;\\n\\tvar alpha = 1;\\n\\tvar i;\\n\\n\\tthis.valid = true;\\n\\n\\tif (space === 'alpha') {\\n\\t\\talpha = vals;\\n\\t} else if (vals.length) {\\n\\t\\t// [10, 10, 10]\\n\\t\\tvalues[space] = vals.slice(0, space.length);\\n\\t\\talpha = vals[space.length];\\n\\t} else if (vals[space.charAt(0)] !== undefined) {\\n\\t\\t// {r: 10, g: 10, b: 10}\\n\\t\\tfor (i = 0; i < space.length; i++) {\\n\\t\\t\\tvalues[space][i] = vals[space.charAt(i)];\\n\\t\\t}\\n\\n\\t\\talpha = vals.a;\\n\\t} else if (vals[spaces[space][0]] !== undefined) {\\n\\t\\t// {red: 10, green: 10, blue: 10}\\n\\t\\tvar chans = spaces[space];\\n\\n\\t\\tfor (i = 0; i < space.length; i++) {\\n\\t\\t\\tvalues[space][i] = vals[chans[i]];\\n\\t\\t}\\n\\n\\t\\talpha = vals.alpha;\\n\\t}\\n\\n\\tvalues.alpha = Math.max(0, Math.min(1, (alpha === undefined ? values.alpha : alpha)));\\n\\n\\tif (space === 'alpha') {\\n\\t\\treturn false;\\n\\t}\\n\\n\\tvar capped;\\n\\n\\t// cap values of the space prior converting all values\\n\\tfor (i = 0; i < space.length; i++) {\\n\\t\\tcapped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\\n\\t\\tvalues[space][i] = Math.round(capped);\\n\\t}\\n\\n\\t// convert to all the other color spaces\\n\\tfor (var sname in spaces) {\\n\\t\\tif (sname !== space) {\\n\\t\\t\\tvalues[sname] = convert[space][sname](values[space]);\\n\\t\\t}\\n\\t}\\n\\n\\treturn true;\\n};\\n\\nColor.prototype.setSpace = function (space, args) {\\n\\tvar vals = args[0];\\n\\n\\tif (vals === undefined) {\\n\\t\\t// color.rgb()\\n\\t\\treturn this.getValues(space);\\n\\t}\\n\\n\\t// color.rgb(10, 10, 10)\\n\\tif (typeof vals === 'number') {\\n\\t\\tvals = Array.prototype.slice.call(args);\\n\\t}\\n\\n\\tthis.setValues(space, vals);\\n\\treturn this;\\n};\\n\\nColor.prototype.setChannel = function (space, index, val) {\\n\\tvar svalues = this.values[space];\\n\\tif (val === undefined) {\\n\\t\\t// color.red()\\n\\t\\treturn svalues[index];\\n\\t} else if (val === svalues[index]) {\\n\\t\\t// color.red(color.red())\\n\\t\\treturn this;\\n\\t}\\n\\n\\t// color.red(100)\\n\\tsvalues[index] = val;\\n\\tthis.setValues(space, svalues);\\n\\n\\treturn this;\\n};\\n\\nif (typeof window !== 'undefined') {\\n\\twindow.Color = Color;\\n}\\n\\nmodule.exports = Color;\\n\\n},{\\\"1\\\":1,\\\"4\\\":4}],3:[function(require,module,exports){\\n/* MIT license */\\n\\nmodule.exports = {\\n  rgb2hsl: rgb2hsl,\\n  rgb2hsv: rgb2hsv,\\n  rgb2hwb: rgb2hwb,\\n  rgb2cmyk: rgb2cmyk,\\n  rgb2keyword: rgb2keyword,\\n  rgb2xyz: rgb2xyz,\\n  rgb2lab: rgb2lab,\\n  rgb2lch: rgb2lch,\\n\\n  hsl2rgb: hsl2rgb,\\n  hsl2hsv: hsl2hsv,\\n  hsl2hwb: hsl2hwb,\\n  hsl2cmyk: hsl2cmyk,\\n  hsl2keyword: hsl2keyword,\\n\\n  hsv2rgb: hsv2rgb,\\n  hsv2hsl: hsv2hsl,\\n  hsv2hwb: hsv2hwb,\\n  hsv2cmyk: hsv2cmyk,\\n  hsv2keyword: hsv2keyword,\\n\\n  hwb2rgb: hwb2rgb,\\n  hwb2hsl: hwb2hsl,\\n  hwb2hsv: hwb2hsv,\\n  hwb2cmyk: hwb2cmyk,\\n  hwb2keyword: hwb2keyword,\\n\\n  cmyk2rgb: cmyk2rgb,\\n  cmyk2hsl: cmyk2hsl,\\n  cmyk2hsv: cmyk2hsv,\\n  cmyk2hwb: cmyk2hwb,\\n  cmyk2keyword: cmyk2keyword,\\n\\n  keyword2rgb: keyword2rgb,\\n  keyword2hsl: keyword2hsl,\\n  keyword2hsv: keyword2hsv,\\n  keyword2hwb: keyword2hwb,\\n  keyword2cmyk: keyword2cmyk,\\n  keyword2lab: keyword2lab,\\n  keyword2xyz: keyword2xyz,\\n\\n  xyz2rgb: xyz2rgb,\\n  xyz2lab: xyz2lab,\\n  xyz2lch: xyz2lch,\\n\\n  lab2xyz: lab2xyz,\\n  lab2rgb: lab2rgb,\\n  lab2lch: lab2lch,\\n\\n  lch2lab: lch2lab,\\n  lch2xyz: lch2xyz,\\n  lch2rgb: lch2rgb\\n}\\n\\n\\nfunction rgb2hsl(rgb) {\\n  var r = rgb[0]/255,\\n      g = rgb[1]/255,\\n      b = rgb[2]/255,\\n      min = Math.min(r, g, b),\\n      max = Math.max(r, g, b),\\n      delta = max - min,\\n      h, s, l;\\n\\n  if (max == min)\\n    h = 0;\\n  else if (r == max)\\n    h = (g - b) / delta;\\n  else if (g == max)\\n    h = 2 + (b - r) / delta;\\n  else if (b == max)\\n    h = 4 + (r - g)/ delta;\\n\\n  h = Math.min(h * 60, 360);\\n\\n  if (h < 0)\\n    h += 360;\\n\\n  l = (min + max) / 2;\\n\\n  if (max == min)\\n    s = 0;\\n  else if (l <= 0.5)\\n    s = delta / (max + min);\\n  else\\n    s = delta / (2 - max - min);\\n\\n  return [h, s * 100, l * 100];\\n}\\n\\nfunction rgb2hsv(rgb) {\\n  var r = rgb[0],\\n      g = rgb[1],\\n      b = rgb[2],\\n      min = Math.min(r, g, b),\\n      max = Math.max(r, g, b),\\n      delta = max - min,\\n      h, s, v;\\n\\n  if (max == 0)\\n    s = 0;\\n  else\\n    s = (delta/max * 1000)/10;\\n\\n  if (max == min)\\n    h = 0;\\n  else if (r == max)\\n    h = (g - b) / delta;\\n  else if (g == max)\\n    h = 2 + (b - r) / delta;\\n  else if (b == max)\\n    h = 4 + (r - g) / delta;\\n\\n  h = Math.min(h * 60, 360);\\n\\n  if (h < 0)\\n    h += 360;\\n\\n  v = ((max / 255) * 1000) / 10;\\n\\n  return [h, s, v];\\n}\\n\\nfunction rgb2hwb(rgb) {\\n  var r = rgb[0],\\n      g = rgb[1],\\n      b = rgb[2],\\n      h = rgb2hsl(rgb)[0],\\n      w = 1/255 * Math.min(r, Math.min(g, b)),\\n      b = 1 - 1/255 * Math.max(r, Math.max(g, b));\\n\\n  return [h, w * 100, b * 100];\\n}\\n\\nfunction rgb2cmyk(rgb) {\\n  var r = rgb[0] / 255,\\n      g = rgb[1] / 255,\\n      b = rgb[2] / 255,\\n      c, m, y, k;\\n\\n  k = Math.min(1 - r, 1 - g, 1 - b);\\n  c = (1 - r - k) / (1 - k) || 0;\\n  m = (1 - g - k) / (1 - k) || 0;\\n  y = (1 - b - k) / (1 - k) || 0;\\n  return [c * 100, m * 100, y * 100, k * 100];\\n}\\n\\nfunction rgb2keyword(rgb) {\\n  return reverseKeywords[JSON.stringify(rgb)];\\n}\\n\\nfunction rgb2xyz(rgb) {\\n  var r = rgb[0] / 255,\\n      g = rgb[1] / 255,\\n      b = rgb[2] / 255;\\n\\n  // assume sRGB\\n  r = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\\n  g = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\\n  b = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\\n\\n  var x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\\n  var y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\\n  var z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\\n\\n  return [x * 100, y *100, z * 100];\\n}\\n\\nfunction rgb2lab(rgb) {\\n  var xyz = rgb2xyz(rgb),\\n        x = xyz[0],\\n        y = xyz[1],\\n        z = xyz[2],\\n        l, a, b;\\n\\n  x /= 95.047;\\n  y /= 100;\\n  z /= 108.883;\\n\\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\\n\\n  l = (116 * y) - 16;\\n  a = 500 * (x - y);\\n  b = 200 * (y - z);\\n\\n  return [l, a, b];\\n}\\n\\nfunction rgb2lch(args) {\\n  return lab2lch(rgb2lab(args));\\n}\\n\\nfunction hsl2rgb(hsl) {\\n  var h = hsl[0] / 360,\\n      s = hsl[1] / 100,\\n      l = hsl[2] / 100,\\n      t1, t2, t3, rgb, val;\\n\\n  if (s == 0) {\\n    val = l * 255;\\n    return [val, val, val];\\n  }\\n\\n  if (l < 0.5)\\n    t2 = l * (1 + s);\\n  else\\n    t2 = l + s - l * s;\\n  t1 = 2 * l - t2;\\n\\n  rgb = [0, 0, 0];\\n  for (var i = 0; i < 3; i++) {\\n    t3 = h + 1 / 3 * - (i - 1);\\n    t3 < 0 && t3++;\\n    t3 > 1 && t3--;\\n\\n    if (6 * t3 < 1)\\n      val = t1 + (t2 - t1) * 6 * t3;\\n    else if (2 * t3 < 1)\\n      val = t2;\\n    else if (3 * t3 < 2)\\n      val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\\n    else\\n      val = t1;\\n\\n    rgb[i] = val * 255;\\n  }\\n\\n  return rgb;\\n}\\n\\nfunction hsl2hsv(hsl) {\\n  var h = hsl[0],\\n      s = hsl[1] / 100,\\n      l = hsl[2] / 100,\\n      sv, v;\\n\\n  if(l === 0) {\\n      // no need to do calc on black\\n      // also avoids divide by 0 error\\n      return [0, 0, 0];\\n  }\\n\\n  l *= 2;\\n  s *= (l <= 1) ? l : 2 - l;\\n  v = (l + s) / 2;\\n  sv = (2 * s) / (l + s);\\n  return [h, sv * 100, v * 100];\\n}\\n\\nfunction hsl2hwb(args) {\\n  return rgb2hwb(hsl2rgb(args));\\n}\\n\\nfunction hsl2cmyk(args) {\\n  return rgb2cmyk(hsl2rgb(args));\\n}\\n\\nfunction hsl2keyword(args) {\\n  return rgb2keyword(hsl2rgb(args));\\n}\\n\\n\\nfunction hsv2rgb(hsv) {\\n  var h = hsv[0] / 60,\\n      s = hsv[1] / 100,\\n      v = hsv[2] / 100,\\n      hi = Math.floor(h) % 6;\\n\\n  var f = h - Math.floor(h),\\n      p = 255 * v * (1 - s),\\n      q = 255 * v * (1 - (s * f)),\\n      t = 255 * v * (1 - (s * (1 - f))),\\n      v = 255 * v;\\n\\n  switch(hi) {\\n    case 0:\\n      return [v, t, p];\\n    case 1:\\n      return [q, v, p];\\n    case 2:\\n      return [p, v, t];\\n    case 3:\\n      return [p, q, v];\\n    case 4:\\n      return [t, p, v];\\n    case 5:\\n      return [v, p, q];\\n  }\\n}\\n\\nfunction hsv2hsl(hsv) {\\n  var h = hsv[0],\\n      s = hsv[1] / 100,\\n      v = hsv[2] / 100,\\n      sl, l;\\n\\n  l = (2 - s) * v;\\n  sl = s * v;\\n  sl /= (l <= 1) ? l : 2 - l;\\n  sl = sl || 0;\\n  l /= 2;\\n  return [h, sl * 100, l * 100];\\n}\\n\\nfunction hsv2hwb(args) {\\n  return rgb2hwb(hsv2rgb(args))\\n}\\n\\nfunction hsv2cmyk(args) {\\n  return rgb2cmyk(hsv2rgb(args));\\n}\\n\\nfunction hsv2keyword(args) {\\n  return rgb2keyword(hsv2rgb(args));\\n}\\n\\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\\nfunction hwb2rgb(hwb) {\\n  var h = hwb[0] / 360,\\n      wh = hwb[1] / 100,\\n      bl = hwb[2] / 100,\\n      ratio = wh + bl,\\n      i, v, f, n;\\n\\n  // wh + bl cant be > 1\\n  if (ratio > 1) {\\n    wh /= ratio;\\n    bl /= ratio;\\n  }\\n\\n  i = Math.floor(6 * h);\\n  v = 1 - bl;\\n  f = 6 * h - i;\\n  if ((i & 0x01) != 0) {\\n    f = 1 - f;\\n  }\\n  n = wh + f * (v - wh);  // linear interpolation\\n\\n  switch (i) {\\n    default:\\n    case 6:\\n    case 0: r = v; g = n; b = wh; break;\\n    case 1: r = n; g = v; b = wh; break;\\n    case 2: r = wh; g = v; b = n; break;\\n    case 3: r = wh; g = n; b = v; break;\\n    case 4: r = n; g = wh; b = v; break;\\n    case 5: r = v; g = wh; b = n; break;\\n  }\\n\\n  return [r * 255, g * 255, b * 255];\\n}\\n\\nfunction hwb2hsl(args) {\\n  return rgb2hsl(hwb2rgb(args));\\n}\\n\\nfunction hwb2hsv(args) {\\n  return rgb2hsv(hwb2rgb(args));\\n}\\n\\nfunction hwb2cmyk(args) {\\n  return rgb2cmyk(hwb2rgb(args));\\n}\\n\\nfunction hwb2keyword(args) {\\n  return rgb2keyword(hwb2rgb(args));\\n}\\n\\nfunction cmyk2rgb(cmyk) {\\n  var c = cmyk[0] / 100,\\n      m = cmyk[1] / 100,\\n      y = cmyk[2] / 100,\\n      k = cmyk[3] / 100,\\n      r, g, b;\\n\\n  r = 1 - Math.min(1, c * (1 - k) + k);\\n  g = 1 - Math.min(1, m * (1 - k) + k);\\n  b = 1 - Math.min(1, y * (1 - k) + k);\\n  return [r * 255, g * 255, b * 255];\\n}\\n\\nfunction cmyk2hsl(args) {\\n  return rgb2hsl(cmyk2rgb(args));\\n}\\n\\nfunction cmyk2hsv(args) {\\n  return rgb2hsv(cmyk2rgb(args));\\n}\\n\\nfunction cmyk2hwb(args) {\\n  return rgb2hwb(cmyk2rgb(args));\\n}\\n\\nfunction cmyk2keyword(args) {\\n  return rgb2keyword(cmyk2rgb(args));\\n}\\n\\n\\nfunction xyz2rgb(xyz) {\\n  var x = xyz[0] / 100,\\n      y = xyz[1] / 100,\\n      z = xyz[2] / 100,\\n      r, g, b;\\n\\n  r = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\\n  g = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\\n  b = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\\n\\n  // assume sRGB\\n  r = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\\n    : r = (r * 12.92);\\n\\n  g = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\\n    : g = (g * 12.92);\\n\\n  b = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\\n    : b = (b * 12.92);\\n\\n  r = Math.min(Math.max(0, r), 1);\\n  g = Math.min(Math.max(0, g), 1);\\n  b = Math.min(Math.max(0, b), 1);\\n\\n  return [r * 255, g * 255, b * 255];\\n}\\n\\nfunction xyz2lab(xyz) {\\n  var x = xyz[0],\\n      y = xyz[1],\\n      z = xyz[2],\\n      l, a, b;\\n\\n  x /= 95.047;\\n  y /= 100;\\n  z /= 108.883;\\n\\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\\n\\n  l = (116 * y) - 16;\\n  a = 500 * (x - y);\\n  b = 200 * (y - z);\\n\\n  return [l, a, b];\\n}\\n\\nfunction xyz2lch(args) {\\n  return lab2lch(xyz2lab(args));\\n}\\n\\nfunction lab2xyz(lab) {\\n  var l = lab[0],\\n      a = lab[1],\\n      b = lab[2],\\n      x, y, z, y2;\\n\\n  if (l <= 8) {\\n    y = (l * 100) / 903.3;\\n    y2 = (7.787 * (y / 100)) + (16 / 116);\\n  } else {\\n    y = 100 * Math.pow((l + 16) / 116, 3);\\n    y2 = Math.pow(y / 100, 1/3);\\n  }\\n\\n  x = x / 95.047 <= 0.008856 ? x = (95.047 * ((a / 500) + y2 - (16 / 116))) / 7.787 : 95.047 * Math.pow((a / 500) + y2, 3);\\n\\n  z = z / 108.883 <= 0.008859 ? z = (108.883 * (y2 - (b / 200) - (16 / 116))) / 7.787 : 108.883 * Math.pow(y2 - (b / 200), 3);\\n\\n  return [x, y, z];\\n}\\n\\nfunction lab2lch(lab) {\\n  var l = lab[0],\\n      a = lab[1],\\n      b = lab[2],\\n      hr, h, c;\\n\\n  hr = Math.atan2(b, a);\\n  h = hr * 360 / 2 / Math.PI;\\n  if (h < 0) {\\n    h += 360;\\n  }\\n  c = Math.sqrt(a * a + b * b);\\n  return [l, c, h];\\n}\\n\\nfunction lab2rgb(args) {\\n  return xyz2rgb(lab2xyz(args));\\n}\\n\\nfunction lch2lab(lch) {\\n  var l = lch[0],\\n      c = lch[1],\\n      h = lch[2],\\n      a, b, hr;\\n\\n  hr = h / 360 * 2 * Math.PI;\\n  a = c * Math.cos(hr);\\n  b = c * Math.sin(hr);\\n  return [l, a, b];\\n}\\n\\nfunction lch2xyz(args) {\\n  return lab2xyz(lch2lab(args));\\n}\\n\\nfunction lch2rgb(args) {\\n  return lab2rgb(lch2lab(args));\\n}\\n\\nfunction keyword2rgb(keyword) {\\n  return cssKeywords[keyword];\\n}\\n\\nfunction keyword2hsl(args) {\\n  return rgb2hsl(keyword2rgb(args));\\n}\\n\\nfunction keyword2hsv(args) {\\n  return rgb2hsv(keyword2rgb(args));\\n}\\n\\nfunction keyword2hwb(args) {\\n  return rgb2hwb(keyword2rgb(args));\\n}\\n\\nfunction keyword2cmyk(args) {\\n  return rgb2cmyk(keyword2rgb(args));\\n}\\n\\nfunction keyword2lab(args) {\\n  return rgb2lab(keyword2rgb(args));\\n}\\n\\nfunction keyword2xyz(args) {\\n  return rgb2xyz(keyword2rgb(args));\\n}\\n\\nvar cssKeywords = {\\n  aliceblue:  [240,248,255],\\n  antiquewhite: [250,235,215],\\n  aqua: [0,255,255],\\n  aquamarine: [127,255,212],\\n  azure:  [240,255,255],\\n  beige:  [245,245,220],\\n  bisque: [255,228,196],\\n  black:  [0,0,0],\\n  blanchedalmond: [255,235,205],\\n  blue: [0,0,255],\\n  blueviolet: [138,43,226],\\n  brown:  [165,42,42],\\n  burlywood:  [222,184,135],\\n  cadetblue:  [95,158,160],\\n  chartreuse: [127,255,0],\\n  chocolate:  [210,105,30],\\n  coral:  [255,127,80],\\n  cornflowerblue: [100,149,237],\\n  cornsilk: [255,248,220],\\n  crimson:  [220,20,60],\\n  cyan: [0,255,255],\\n  darkblue: [0,0,139],\\n  darkcyan: [0,139,139],\\n  darkgoldenrod:  [184,134,11],\\n  darkgray: [169,169,169],\\n  darkgreen:  [0,100,0],\\n  darkgrey: [169,169,169],\\n  darkkhaki:  [189,183,107],\\n  darkmagenta:  [139,0,139],\\n  darkolivegreen: [85,107,47],\\n  darkorange: [255,140,0],\\n  darkorchid: [153,50,204],\\n  darkred:  [139,0,0],\\n  darksalmon: [233,150,122],\\n  darkseagreen: [143,188,143],\\n  darkslateblue:  [72,61,139],\\n  darkslategray:  [47,79,79],\\n  darkslategrey:  [47,79,79],\\n  darkturquoise:  [0,206,209],\\n  darkviolet: [148,0,211],\\n  deeppink: [255,20,147],\\n  deepskyblue:  [0,191,255],\\n  dimgray:  [105,105,105],\\n  dimgrey:  [105,105,105],\\n  dodgerblue: [30,144,255],\\n  firebrick:  [178,34,34],\\n  floralwhite:  [255,250,240],\\n  forestgreen:  [34,139,34],\\n  fuchsia:  [255,0,255],\\n  gainsboro:  [220,220,220],\\n  ghostwhite: [248,248,255],\\n  gold: [255,215,0],\\n  goldenrod:  [218,165,32],\\n  gray: [128,128,128],\\n  green:  [0,128,0],\\n  greenyellow:  [173,255,47],\\n  grey: [128,128,128],\\n  honeydew: [240,255,240],\\n  hotpink:  [255,105,180],\\n  indianred:  [205,92,92],\\n  indigo: [75,0,130],\\n  ivory:  [255,255,240],\\n  khaki:  [240,230,140],\\n  lavender: [230,230,250],\\n  lavenderblush:  [255,240,245],\\n  lawngreen:  [124,252,0],\\n  lemonchiffon: [255,250,205],\\n  lightblue:  [173,216,230],\\n  lightcoral: [240,128,128],\\n  lightcyan:  [224,255,255],\\n  lightgoldenrodyellow: [250,250,210],\\n  lightgray:  [211,211,211],\\n  lightgreen: [144,238,144],\\n  lightgrey:  [211,211,211],\\n  lightpink:  [255,182,193],\\n  lightsalmon:  [255,160,122],\\n  lightseagreen:  [32,178,170],\\n  lightskyblue: [135,206,250],\\n  lightslategray: [119,136,153],\\n  lightslategrey: [119,136,153],\\n  lightsteelblue: [176,196,222],\\n  lightyellow:  [255,255,224],\\n  lime: [0,255,0],\\n  limegreen:  [50,205,50],\\n  linen:  [250,240,230],\\n  magenta:  [255,0,255],\\n  maroon: [128,0,0],\\n  mediumaquamarine: [102,205,170],\\n  mediumblue: [0,0,205],\\n  mediumorchid: [186,85,211],\\n  mediumpurple: [147,112,219],\\n  mediumseagreen: [60,179,113],\\n  mediumslateblue:  [123,104,238],\\n  mediumspringgreen:  [0,250,154],\\n  mediumturquoise:  [72,209,204],\\n  mediumvioletred:  [199,21,133],\\n  midnightblue: [25,25,112],\\n  mintcream:  [245,255,250],\\n  mistyrose:  [255,228,225],\\n  moccasin: [255,228,181],\\n  navajowhite:  [255,222,173],\\n  navy: [0,0,128],\\n  oldlace:  [253,245,230],\\n  olive:  [128,128,0],\\n  olivedrab:  [107,142,35],\\n  orange: [255,165,0],\\n  orangered:  [255,69,0],\\n  orchid: [218,112,214],\\n  palegoldenrod:  [238,232,170],\\n  palegreen:  [152,251,152],\\n  paleturquoise:  [175,238,238],\\n  palevioletred:  [219,112,147],\\n  papayawhip: [255,239,213],\\n  peachpuff:  [255,218,185],\\n  peru: [205,133,63],\\n  pink: [255,192,203],\\n  plum: [221,160,221],\\n  powderblue: [176,224,230],\\n  purple: [128,0,128],\\n  rebeccapurple: [102, 51, 153],\\n  red:  [255,0,0],\\n  rosybrown:  [188,143,143],\\n  royalblue:  [65,105,225],\\n  saddlebrown:  [139,69,19],\\n  salmon: [250,128,114],\\n  sandybrown: [244,164,96],\\n  seagreen: [46,139,87],\\n  seashell: [255,245,238],\\n  sienna: [160,82,45],\\n  silver: [192,192,192],\\n  skyblue:  [135,206,235],\\n  slateblue:  [106,90,205],\\n  slategray:  [112,128,144],\\n  slategrey:  [112,128,144],\\n  snow: [255,250,250],\\n  springgreen:  [0,255,127],\\n  steelblue:  [70,130,180],\\n  tan:  [210,180,140],\\n  teal: [0,128,128],\\n  thistle:  [216,191,216],\\n  tomato: [255,99,71],\\n  turquoise:  [64,224,208],\\n  violet: [238,130,238],\\n  wheat:  [245,222,179],\\n  white:  [255,255,255],\\n  whitesmoke: [245,245,245],\\n  yellow: [255,255,0],\\n  yellowgreen:  [154,205,50]\\n};\\n\\nvar reverseKeywords = {};\\nfor (var key in cssKeywords) {\\n  reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\\n}\\n\\n},{}],4:[function(require,module,exports){\\nvar conversions = require(3);\\n\\nvar convert = function() {\\n   return new Converter();\\n}\\n\\nfor (var func in conversions) {\\n  // export Raw versions\\n  convert[func + \\\"Raw\\\"] =  (function(func) {\\n    // accept array or plain args\\n    return function(arg) {\\n      if (typeof arg == \\\"number\\\")\\n        arg = Array.prototype.slice.call(arguments);\\n      return conversions[func](arg);\\n    }\\n  })(func);\\n\\n  var pair = /(\\\\w+)2(\\\\w+)/.exec(func),\\n      from = pair[1],\\n      to = pair[2];\\n\\n  // export rgb2hsl and [\\\"rgb\\\"][\\\"hsl\\\"]\\n  convert[from] = convert[from] || {};\\n\\n  convert[from][to] = convert[func] = (function(func) { \\n    return function(arg) {\\n      if (typeof arg == \\\"number\\\")\\n        arg = Array.prototype.slice.call(arguments);\\n      \\n      var val = conversions[func](arg);\\n      if (typeof val == \\\"string\\\" || val === undefined)\\n        return val; // keyword\\n\\n      for (var i = 0; i < val.length; i++)\\n        val[i] = Math.round(val[i]);\\n      return val;\\n    }\\n  })(func);\\n}\\n\\n\\n/* Converter does lazy conversion and caching */\\nvar Converter = function() {\\n   this.convs = {};\\n};\\n\\n/* Either get the values for a space or\\n  set the values for a space, depending on args */\\nConverter.prototype.routeSpace = function(space, args) {\\n   var values = args[0];\\n   if (values === undefined) {\\n      // color.rgb()\\n      return this.getValues(space);\\n   }\\n   // color.rgb(10, 10, 10)\\n   if (typeof values == \\\"number\\\") {\\n      values = Array.prototype.slice.call(args);        \\n   }\\n\\n   return this.setValues(space, values);\\n};\\n  \\n/* Set the values for a space, invalidating cache */\\nConverter.prototype.setValues = function(space, values) {\\n   this.space = space;\\n   this.convs = {};\\n   this.convs[space] = values;\\n   return this;\\n};\\n\\n/* Get the values for a space. If there's already\\n  a conversion for the space, fetch it, otherwise\\n  compute it */\\nConverter.prototype.getValues = function(space) {\\n   var vals = this.convs[space];\\n   if (!vals) {\\n      var fspace = this.space,\\n          from = this.convs[fspace];\\n      vals = convert[fspace][space](from);\\n\\n      this.convs[space] = vals;\\n   }\\n  return vals;\\n};\\n\\n[\\\"rgb\\\", \\\"hsl\\\", \\\"hsv\\\", \\\"cmyk\\\", \\\"keyword\\\"].forEach(function(space) {\\n   Converter.prototype[space] = function(vals) {\\n      return this.routeSpace(space, arguments);\\n   }\\n});\\n\\nmodule.exports = convert;\\n},{\\\"3\\\":3}],5:[function(require,module,exports){\\n'use strict'\\r\\n\\r\\nmodule.exports = {\\r\\n\\t\\\"aliceblue\\\": [240, 248, 255],\\r\\n\\t\\\"antiquewhite\\\": [250, 235, 215],\\r\\n\\t\\\"aqua\\\": [0, 255, 255],\\r\\n\\t\\\"aquamarine\\\": [127, 255, 212],\\r\\n\\t\\\"azure\\\": [240, 255, 255],\\r\\n\\t\\\"beige\\\": [245, 245, 220],\\r\\n\\t\\\"bisque\\\": [255, 228, 196],\\r\\n\\t\\\"black\\\": [0, 0, 0],\\r\\n\\t\\\"blanchedalmond\\\": [255, 235, 205],\\r\\n\\t\\\"blue\\\": [0, 0, 255],\\r\\n\\t\\\"blueviolet\\\": [138, 43, 226],\\r\\n\\t\\\"brown\\\": [165, 42, 42],\\r\\n\\t\\\"burlywood\\\": [222, 184, 135],\\r\\n\\t\\\"cadetblue\\\": [95, 158, 160],\\r\\n\\t\\\"chartreuse\\\": [127, 255, 0],\\r\\n\\t\\\"chocolate\\\": [210, 105, 30],\\r\\n\\t\\\"coral\\\": [255, 127, 80],\\r\\n\\t\\\"cornflowerblue\\\": [100, 149, 237],\\r\\n\\t\\\"cornsilk\\\": [255, 248, 220],\\r\\n\\t\\\"crimson\\\": [220, 20, 60],\\r\\n\\t\\\"cyan\\\": [0, 255, 255],\\r\\n\\t\\\"darkblue\\\": [0, 0, 139],\\r\\n\\t\\\"darkcyan\\\": [0, 139, 139],\\r\\n\\t\\\"darkgoldenrod\\\": [184, 134, 11],\\r\\n\\t\\\"darkgray\\\": [169, 169, 169],\\r\\n\\t\\\"darkgreen\\\": [0, 100, 0],\\r\\n\\t\\\"darkgrey\\\": [169, 169, 169],\\r\\n\\t\\\"darkkhaki\\\": [189, 183, 107],\\r\\n\\t\\\"darkmagenta\\\": [139, 0, 139],\\r\\n\\t\\\"darkolivegreen\\\": [85, 107, 47],\\r\\n\\t\\\"darkorange\\\": [255, 140, 0],\\r\\n\\t\\\"darkorchid\\\": [153, 50, 204],\\r\\n\\t\\\"darkred\\\": [139, 0, 0],\\r\\n\\t\\\"darksalmon\\\": [233, 150, 122],\\r\\n\\t\\\"darkseagreen\\\": [143, 188, 143],\\r\\n\\t\\\"darkslateblue\\\": [72, 61, 139],\\r\\n\\t\\\"darkslategray\\\": [47, 79, 79],\\r\\n\\t\\\"darkslategrey\\\": [47, 79, 79],\\r\\n\\t\\\"darkturquoise\\\": [0, 206, 209],\\r\\n\\t\\\"darkviolet\\\": [148, 0, 211],\\r\\n\\t\\\"deeppink\\\": [255, 20, 147],\\r\\n\\t\\\"deepskyblue\\\": [0, 191, 255],\\r\\n\\t\\\"dimgray\\\": [105, 105, 105],\\r\\n\\t\\\"dimgrey\\\": [105, 105, 105],\\r\\n\\t\\\"dodgerblue\\\": [30, 144, 255],\\r\\n\\t\\\"firebrick\\\": [178, 34, 34],\\r\\n\\t\\\"floralwhite\\\": [255, 250, 240],\\r\\n\\t\\\"forestgreen\\\": [34, 139, 34],\\r\\n\\t\\\"fuchsia\\\": [255, 0, 255],\\r\\n\\t\\\"gainsboro\\\": [220, 220, 220],\\r\\n\\t\\\"ghostwhite\\\": [248, 248, 255],\\r\\n\\t\\\"gold\\\": [255, 215, 0],\\r\\n\\t\\\"goldenrod\\\": [218, 165, 32],\\r\\n\\t\\\"gray\\\": [128, 128, 128],\\r\\n\\t\\\"green\\\": [0, 128, 0],\\r\\n\\t\\\"greenyellow\\\": [173, 255, 47],\\r\\n\\t\\\"grey\\\": [128, 128, 128],\\r\\n\\t\\\"honeydew\\\": [240, 255, 240],\\r\\n\\t\\\"hotpink\\\": [255, 105, 180],\\r\\n\\t\\\"indianred\\\": [205, 92, 92],\\r\\n\\t\\\"indigo\\\": [75, 0, 130],\\r\\n\\t\\\"ivory\\\": [255, 255, 240],\\r\\n\\t\\\"khaki\\\": [240, 230, 140],\\r\\n\\t\\\"lavender\\\": [230, 230, 250],\\r\\n\\t\\\"lavenderblush\\\": [255, 240, 245],\\r\\n\\t\\\"lawngreen\\\": [124, 252, 0],\\r\\n\\t\\\"lemonchiffon\\\": [255, 250, 205],\\r\\n\\t\\\"lightblue\\\": [173, 216, 230],\\r\\n\\t\\\"lightcoral\\\": [240, 128, 128],\\r\\n\\t\\\"lightcyan\\\": [224, 255, 255],\\r\\n\\t\\\"lightgoldenrodyellow\\\": [250, 250, 210],\\r\\n\\t\\\"lightgray\\\": [211, 211, 211],\\r\\n\\t\\\"lightgreen\\\": [144, 238, 144],\\r\\n\\t\\\"lightgrey\\\": [211, 211, 211],\\r\\n\\t\\\"lightpink\\\": [255, 182, 193],\\r\\n\\t\\\"lightsalmon\\\": [255, 160, 122],\\r\\n\\t\\\"lightseagreen\\\": [32, 178, 170],\\r\\n\\t\\\"lightskyblue\\\": [135, 206, 250],\\r\\n\\t\\\"lightslategray\\\": [119, 136, 153],\\r\\n\\t\\\"lightslategrey\\\": [119, 136, 153],\\r\\n\\t\\\"lightsteelblue\\\": [176, 196, 222],\\r\\n\\t\\\"lightyellow\\\": [255, 255, 224],\\r\\n\\t\\\"lime\\\": [0, 255, 0],\\r\\n\\t\\\"limegreen\\\": [50, 205, 50],\\r\\n\\t\\\"linen\\\": [250, 240, 230],\\r\\n\\t\\\"magenta\\\": [255, 0, 255],\\r\\n\\t\\\"maroon\\\": [128, 0, 0],\\r\\n\\t\\\"mediumaquamarine\\\": [102, 205, 170],\\r\\n\\t\\\"mediumblue\\\": [0, 0, 205],\\r\\n\\t\\\"mediumorchid\\\": [186, 85, 211],\\r\\n\\t\\\"mediumpurple\\\": [147, 112, 219],\\r\\n\\t\\\"mediumseagreen\\\": [60, 179, 113],\\r\\n\\t\\\"mediumslateblue\\\": [123, 104, 238],\\r\\n\\t\\\"mediumspringgreen\\\": [0, 250, 154],\\r\\n\\t\\\"mediumturquoise\\\": [72, 209, 204],\\r\\n\\t\\\"mediumvioletred\\\": [199, 21, 133],\\r\\n\\t\\\"midnightblue\\\": [25, 25, 112],\\r\\n\\t\\\"mintcream\\\": [245, 255, 250],\\r\\n\\t\\\"mistyrose\\\": [255, 228, 225],\\r\\n\\t\\\"moccasin\\\": [255, 228, 181],\\r\\n\\t\\\"navajowhite\\\": [255, 222, 173],\\r\\n\\t\\\"navy\\\": [0, 0, 128],\\r\\n\\t\\\"oldlace\\\": [253, 245, 230],\\r\\n\\t\\\"olive\\\": [128, 128, 0],\\r\\n\\t\\\"olivedrab\\\": [107, 142, 35],\\r\\n\\t\\\"orange\\\": [255, 165, 0],\\r\\n\\t\\\"orangered\\\": [255, 69, 0],\\r\\n\\t\\\"orchid\\\": [218, 112, 214],\\r\\n\\t\\\"palegoldenrod\\\": [238, 232, 170],\\r\\n\\t\\\"palegreen\\\": [152, 251, 152],\\r\\n\\t\\\"paleturquoise\\\": [175, 238, 238],\\r\\n\\t\\\"palevioletred\\\": [219, 112, 147],\\r\\n\\t\\\"papayawhip\\\": [255, 239, 213],\\r\\n\\t\\\"peachpuff\\\": [255, 218, 185],\\r\\n\\t\\\"peru\\\": [205, 133, 63],\\r\\n\\t\\\"pink\\\": [255, 192, 203],\\r\\n\\t\\\"plum\\\": [221, 160, 221],\\r\\n\\t\\\"powderblue\\\": [176, 224, 230],\\r\\n\\t\\\"purple\\\": [128, 0, 128],\\r\\n\\t\\\"rebeccapurple\\\": [102, 51, 153],\\r\\n\\t\\\"red\\\": [255, 0, 0],\\r\\n\\t\\\"rosybrown\\\": [188, 143, 143],\\r\\n\\t\\\"royalblue\\\": [65, 105, 225],\\r\\n\\t\\\"saddlebrown\\\": [139, 69, 19],\\r\\n\\t\\\"salmon\\\": [250, 128, 114],\\r\\n\\t\\\"sandybrown\\\": [244, 164, 96],\\r\\n\\t\\\"seagreen\\\": [46, 139, 87],\\r\\n\\t\\\"seashell\\\": [255, 245, 238],\\r\\n\\t\\\"sienna\\\": [160, 82, 45],\\r\\n\\t\\\"silver\\\": [192, 192, 192],\\r\\n\\t\\\"skyblue\\\": [135, 206, 235],\\r\\n\\t\\\"slateblue\\\": [106, 90, 205],\\r\\n\\t\\\"slategray\\\": [112, 128, 144],\\r\\n\\t\\\"slategrey\\\": [112, 128, 144],\\r\\n\\t\\\"snow\\\": [255, 250, 250],\\r\\n\\t\\\"springgreen\\\": [0, 255, 127],\\r\\n\\t\\\"steelblue\\\": [70, 130, 180],\\r\\n\\t\\\"tan\\\": [210, 180, 140],\\r\\n\\t\\\"teal\\\": [0, 128, 128],\\r\\n\\t\\\"thistle\\\": [216, 191, 216],\\r\\n\\t\\\"tomato\\\": [255, 99, 71],\\r\\n\\t\\\"turquoise\\\": [64, 224, 208],\\r\\n\\t\\\"violet\\\": [238, 130, 238],\\r\\n\\t\\\"wheat\\\": [245, 222, 179],\\r\\n\\t\\\"white\\\": [255, 255, 255],\\r\\n\\t\\\"whitesmoke\\\": [245, 245, 245],\\r\\n\\t\\\"yellow\\\": [255, 255, 0],\\r\\n\\t\\\"yellowgreen\\\": [154, 205, 50]\\r\\n};\\r\\n\\n},{}],6:[function(require,module,exports){\\n//! moment.js\\n//! version : 2.18.1\\n//! authors : Tim Wood, Iskren Chernev, Moment.js contributors\\n//! license : MIT\\n//! momentjs.com\\n\\n;(function (global, factory) {\\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\\n    typeof define === 'function' && define.amd ? define(factory) :\\n    global.moment = factory()\\n}(this, (function () { 'use strict';\\n\\nvar hookCallback;\\n\\nfunction hooks () {\\n    return hookCallback.apply(null, arguments);\\n}\\n\\n// This is done to register the method called with moment()\\n// without creating circular dependencies.\\nfunction setHookCallback (callback) {\\n    hookCallback = callback;\\n}\\n\\nfunction isArray(input) {\\n    return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\\n}\\n\\nfunction isObject(input) {\\n    // IE8 will treat undefined and null as object if it wasn't for\\n    // input != null\\n    return input != null && Object.prototype.toString.call(input) === '[object Object]';\\n}\\n\\nfunction isObjectEmpty(obj) {\\n    var k;\\n    for (k in obj) {\\n        // even if its not own property I'd still call it non-empty\\n        return false;\\n    }\\n    return true;\\n}\\n\\nfunction isUndefined(input) {\\n    return input === void 0;\\n}\\n\\nfunction isNumber(input) {\\n    return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\\n}\\n\\nfunction isDate(input) {\\n    return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\\n}\\n\\nfunction map(arr, fn) {\\n    var res = [], i;\\n    for (i = 0; i < arr.length; ++i) {\\n        res.push(fn(arr[i], i));\\n    }\\n    return res;\\n}\\n\\nfunction hasOwnProp(a, b) {\\n    return Object.prototype.hasOwnProperty.call(a, b);\\n}\\n\\nfunction extend(a, b) {\\n    for (var i in b) {\\n        if (hasOwnProp(b, i)) {\\n            a[i] = b[i];\\n        }\\n    }\\n\\n    if (hasOwnProp(b, 'toString')) {\\n        a.toString = b.toString;\\n    }\\n\\n    if (hasOwnProp(b, 'valueOf')) {\\n        a.valueOf = b.valueOf;\\n    }\\n\\n    return a;\\n}\\n\\nfunction createUTC (input, format, locale, strict) {\\n    return createLocalOrUTC(input, format, locale, strict, true).utc();\\n}\\n\\nfunction defaultParsingFlags() {\\n    // We need to deep clone this object.\\n    return {\\n        empty           : false,\\n        unusedTokens    : [],\\n        unusedInput     : [],\\n        overflow        : -2,\\n        charsLeftOver   : 0,\\n        nullInput       : false,\\n        invalidMonth    : null,\\n        invalidFormat   : false,\\n        userInvalidated : false,\\n        iso             : false,\\n        parsedDateParts : [],\\n        meridiem        : null,\\n        rfc2822         : false,\\n        weekdayMismatch : false\\n    };\\n}\\n\\nfunction getParsingFlags(m) {\\n    if (m._pf == null) {\\n        m._pf = defaultParsingFlags();\\n    }\\n    return m._pf;\\n}\\n\\nvar some;\\nif (Array.prototype.some) {\\n    some = Array.prototype.some;\\n} else {\\n    some = function (fun) {\\n        var t = Object(this);\\n        var len = t.length >>> 0;\\n\\n        for (var i = 0; i < len; i++) {\\n            if (i in t && fun.call(this, t[i], i, t)) {\\n                return true;\\n            }\\n        }\\n\\n        return false;\\n    };\\n}\\n\\nvar some$1 = some;\\n\\nfunction isValid(m) {\\n    if (m._isValid == null) {\\n        var flags = getParsingFlags(m);\\n        var parsedParts = some$1.call(flags.parsedDateParts, function (i) {\\n            return i != null;\\n        });\\n        var isNowValid = !isNaN(m._d.getTime()) &&\\n            flags.overflow < 0 &&\\n            !flags.empty &&\\n            !flags.invalidMonth &&\\n            !flags.invalidWeekday &&\\n            !flags.nullInput &&\\n            !flags.invalidFormat &&\\n            !flags.userInvalidated &&\\n            (!flags.meridiem || (flags.meridiem && parsedParts));\\n\\n        if (m._strict) {\\n            isNowValid = isNowValid &&\\n                flags.charsLeftOver === 0 &&\\n                flags.unusedTokens.length === 0 &&\\n                flags.bigHour === undefined;\\n        }\\n\\n        if (Object.isFrozen == null || !Object.isFrozen(m)) {\\n            m._isValid = isNowValid;\\n        }\\n        else {\\n            return isNowValid;\\n        }\\n    }\\n    return m._isValid;\\n}\\n\\nfunction createInvalid (flags) {\\n    var m = createUTC(NaN);\\n    if (flags != null) {\\n        extend(getParsingFlags(m), flags);\\n    }\\n    else {\\n        getParsingFlags(m).userInvalidated = true;\\n    }\\n\\n    return m;\\n}\\n\\n// Plugins that add properties should also add the key here (null value),\\n// so we can properly clone ourselves.\\nvar momentProperties = hooks.momentProperties = [];\\n\\nfunction copyConfig(to, from) {\\n    var i, prop, val;\\n\\n    if (!isUndefined(from._isAMomentObject)) {\\n        to._isAMomentObject = from._isAMomentObject;\\n    }\\n    if (!isUndefined(from._i)) {\\n        to._i = from._i;\\n    }\\n    if (!isUndefined(from._f)) {\\n        to._f = from._f;\\n    }\\n    if (!isUndefined(from._l)) {\\n        to._l = from._l;\\n    }\\n    if (!isUndefined(from._strict)) {\\n        to._strict = from._strict;\\n    }\\n    if (!isUndefined(from._tzm)) {\\n        to._tzm = from._tzm;\\n    }\\n    if (!isUndefined(from._isUTC)) {\\n        to._isUTC = from._isUTC;\\n    }\\n    if (!isUndefined(from._offset)) {\\n        to._offset = from._offset;\\n    }\\n    if (!isUndefined(from._pf)) {\\n        to._pf = getParsingFlags(from);\\n    }\\n    if (!isUndefined(from._locale)) {\\n        to._locale = from._locale;\\n    }\\n\\n    if (momentProperties.length > 0) {\\n        for (i = 0; i < momentProperties.length; i++) {\\n            prop = momentProperties[i];\\n            val = from[prop];\\n            if (!isUndefined(val)) {\\n                to[prop] = val;\\n            }\\n        }\\n    }\\n\\n    return to;\\n}\\n\\nvar updateInProgress = false;\\n\\n// Moment prototype object\\nfunction Moment(config) {\\n    copyConfig(this, config);\\n    this._d = new Date(config._d != null ? config._d.getTime() : NaN);\\n    if (!this.isValid()) {\\n        this._d = new Date(NaN);\\n    }\\n    // Prevent infinite loop in case updateOffset creates new moment\\n    // objects.\\n    if (updateInProgress === false) {\\n        updateInProgress = true;\\n        hooks.updateOffset(this);\\n        updateInProgress = false;\\n    }\\n}\\n\\nfunction isMoment (obj) {\\n    return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);\\n}\\n\\nfunction absFloor (number) {\\n    if (number < 0) {\\n        // -0 -> 0\\n        return Math.ceil(number) || 0;\\n    } else {\\n        return Math.floor(number);\\n    }\\n}\\n\\nfunction toInt(argumentForCoercion) {\\n    var coercedNumber = +argumentForCoercion,\\n        value = 0;\\n\\n    if (coercedNumber !== 0 && isFinite(coercedNumber)) {\\n        value = absFloor(coercedNumber);\\n    }\\n\\n    return value;\\n}\\n\\n// compare two arrays, return the number of differences\\nfunction compareArrays(array1, array2, dontConvert) {\\n    var len = Math.min(array1.length, array2.length),\\n        lengthDiff = Math.abs(array1.length - array2.length),\\n        diffs = 0,\\n        i;\\n    for (i = 0; i < len; i++) {\\n        if ((dontConvert && array1[i] !== array2[i]) ||\\n            (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {\\n            diffs++;\\n        }\\n    }\\n    return diffs + lengthDiff;\\n}\\n\\nfunction warn(msg) {\\n    if (hooks.suppressDeprecationWarnings === false &&\\n            (typeof console !==  'undefined') && console.warn) {\\n        console.warn('Deprecation warning: ' + msg);\\n    }\\n}\\n\\nfunction deprecate(msg, fn) {\\n    var firstTime = true;\\n\\n    return extend(function () {\\n        if (hooks.deprecationHandler != null) {\\n            hooks.deprecationHandler(null, msg);\\n        }\\n        if (firstTime) {\\n            var args = [];\\n            var arg;\\n            for (var i = 0; i < arguments.length; i++) {\\n                arg = '';\\n                if (typeof arguments[i] === 'object') {\\n                    arg += '\\\\n[' + i + '] ';\\n                    for (var key in arguments[0]) {\\n                        arg += key + ': ' + arguments[0][key] + ', ';\\n                    }\\n                    arg = arg.slice(0, -2); // Remove trailing comma and space\\n                } else {\\n                    arg = arguments[i];\\n                }\\n                args.push(arg);\\n            }\\n            warn(msg + '\\\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\\\n' + (new Error()).stack);\\n            firstTime = false;\\n        }\\n        return fn.apply(this, arguments);\\n    }, fn);\\n}\\n\\nvar deprecations = {};\\n\\nfunction deprecateSimple(name, msg) {\\n    if (hooks.deprecationHandler != null) {\\n        hooks.deprecationHandler(name, msg);\\n    }\\n    if (!deprecations[name]) {\\n        warn(msg);\\n        deprecations[name] = true;\\n    }\\n}\\n\\nhooks.suppressDeprecationWarnings = false;\\nhooks.deprecationHandler = null;\\n\\nfunction isFunction(input) {\\n    return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\\n}\\n\\nfunction set (config) {\\n    var prop, i;\\n    for (i in config) {\\n        prop = config[i];\\n        if (isFunction(prop)) {\\n            this[i] = prop;\\n        } else {\\n            this['_' + i] = prop;\\n        }\\n    }\\n    this._config = config;\\n    // Lenient ordinal parsing accepts just a number in addition to\\n    // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\\n    // TODO: Remove \\\"ordinalParse\\\" fallback in next major release.\\n    this._dayOfMonthOrdinalParseLenient = new RegExp(\\n        (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +\\n            '|' + (/\\\\d{1,2}/).source);\\n}\\n\\nfunction mergeConfigs(parentConfig, childConfig) {\\n    var res = extend({}, parentConfig), prop;\\n    for (prop in childConfig) {\\n        if (hasOwnProp(childConfig, prop)) {\\n            if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\\n                res[prop] = {};\\n                extend(res[prop], parentConfig[prop]);\\n                extend(res[prop], childConfig[prop]);\\n            } else if (childConfig[prop] != null) {\\n                res[prop] = childConfig[prop];\\n            } else {\\n                delete res[prop];\\n            }\\n        }\\n    }\\n    for (prop in parentConfig) {\\n        if (hasOwnProp(parentConfig, prop) &&\\n                !hasOwnProp(childConfig, prop) &&\\n                isObject(parentConfig[prop])) {\\n            // make sure changes to properties don't modify parent config\\n            res[prop] = extend({}, res[prop]);\\n        }\\n    }\\n    return res;\\n}\\n\\nfunction Locale(config) {\\n    if (config != null) {\\n        this.set(config);\\n    }\\n}\\n\\nvar keys;\\n\\nif (Object.keys) {\\n    keys = Object.keys;\\n} else {\\n    keys = function (obj) {\\n        var i, res = [];\\n        for (i in obj) {\\n            if (hasOwnProp(obj, i)) {\\n                res.push(i);\\n            }\\n        }\\n        return res;\\n    };\\n}\\n\\nvar keys$1 = keys;\\n\\nvar defaultCalendar = {\\n    sameDay : '[Today at] LT',\\n    nextDay : '[Tomorrow at] LT',\\n    nextWeek : 'dddd [at] LT',\\n    lastDay : '[Yesterday at] LT',\\n    lastWeek : '[Last] dddd [at] LT',\\n    sameElse : 'L'\\n};\\n\\nfunction calendar (key, mom, now) {\\n    var output = this._calendar[key] || this._calendar['sameElse'];\\n    return isFunction(output) ? output.call(mom, now) : output;\\n}\\n\\nvar defaultLongDateFormat = {\\n    LTS  : 'h:mm:ss A',\\n    LT   : 'h:mm A',\\n    L    : 'MM/DD/YYYY',\\n    LL   : 'MMMM D, YYYY',\\n    LLL  : 'MMMM D, YYYY h:mm A',\\n    LLLL : 'dddd, MMMM D, YYYY h:mm A'\\n};\\n\\nfunction longDateFormat (key) {\\n    var format = this._longDateFormat[key],\\n        formatUpper = this._longDateFormat[key.toUpperCase()];\\n\\n    if (format || !formatUpper) {\\n        return format;\\n    }\\n\\n    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\\n        return val.slice(1);\\n    });\\n\\n    return this._longDateFormat[key];\\n}\\n\\nvar defaultInvalidDate = 'Invalid date';\\n\\nfunction invalidDate () {\\n    return this._invalidDate;\\n}\\n\\nvar defaultOrdinal = '%d';\\nvar defaultDayOfMonthOrdinalParse = /\\\\d{1,2}/;\\n\\nfunction ordinal (number) {\\n    return this._ordinal.replace('%d', number);\\n}\\n\\nvar defaultRelativeTime = {\\n    future : 'in %s',\\n    past   : '%s ago',\\n    s  : 'a few seconds',\\n    ss : '%d seconds',\\n    m  : 'a minute',\\n    mm : '%d minutes',\\n    h  : 'an hour',\\n    hh : '%d hours',\\n    d  : 'a day',\\n    dd : '%d days',\\n    M  : 'a month',\\n    MM : '%d months',\\n    y  : 'a year',\\n    yy : '%d years'\\n};\\n\\nfunction relativeTime (number, withoutSuffix, string, isFuture) {\\n    var output = this._relativeTime[string];\\n    return (isFunction(output)) ?\\n        output(number, withoutSuffix, string, isFuture) :\\n        output.replace(/%d/i, number);\\n}\\n\\nfunction pastFuture (diff, output) {\\n    var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\\n    return isFunction(format) ? format(output) : format.replace(/%s/i, output);\\n}\\n\\nvar aliases = {};\\n\\nfunction addUnitAlias (unit, shorthand) {\\n    var lowerCase = unit.toLowerCase();\\n    aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\\n}\\n\\nfunction normalizeUnits(units) {\\n    return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\\n}\\n\\nfunction normalizeObjectUnits(inputObject) {\\n    var normalizedInput = {},\\n        normalizedProp,\\n        prop;\\n\\n    for (prop in inputObject) {\\n        if (hasOwnProp(inputObject, prop)) {\\n            normalizedProp = normalizeUnits(prop);\\n            if (normalizedProp) {\\n                normalizedInput[normalizedProp] = inputObject[prop];\\n            }\\n        }\\n    }\\n\\n    return normalizedInput;\\n}\\n\\nvar priorities = {};\\n\\nfunction addUnitPriority(unit, priority) {\\n    priorities[unit] = priority;\\n}\\n\\nfunction getPrioritizedUnits(unitsObj) {\\n    var units = [];\\n    for (var u in unitsObj) {\\n        units.push({unit: u, priority: priorities[u]});\\n    }\\n    units.sort(function (a, b) {\\n        return a.priority - b.priority;\\n    });\\n    return units;\\n}\\n\\nfunction makeGetSet (unit, keepTime) {\\n    return function (value) {\\n        if (value != null) {\\n            set$1(this, unit, value);\\n            hooks.updateOffset(this, keepTime);\\n            return this;\\n        } else {\\n            return get(this, unit);\\n        }\\n    };\\n}\\n\\nfunction get (mom, unit) {\\n    return mom.isValid() ?\\n        mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\\n}\\n\\nfunction set$1 (mom, unit, value) {\\n    if (mom.isValid()) {\\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\\n    }\\n}\\n\\n// MOMENTS\\n\\nfunction stringGet (units) {\\n    units = normalizeUnits(units);\\n    if (isFunction(this[units])) {\\n        return this[units]();\\n    }\\n    return this;\\n}\\n\\n\\nfunction stringSet (units, value) {\\n    if (typeof units === 'object') {\\n        units = normalizeObjectUnits(units);\\n        var prioritized = getPrioritizedUnits(units);\\n        for (var i = 0; i < prioritized.length; i++) {\\n            this[prioritized[i].unit](units[prioritized[i].unit]);\\n        }\\n    } else {\\n        units = normalizeUnits(units);\\n        if (isFunction(this[units])) {\\n            return this[units](value);\\n        }\\n    }\\n    return this;\\n}\\n\\nfunction zeroFill(number, targetLength, forceSign) {\\n    var absNumber = '' + Math.abs(number),\\n        zerosToFill = targetLength - absNumber.length,\\n        sign = number >= 0;\\n    return (sign ? (forceSign ? '+' : '') : '-') +\\n        Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\\n}\\n\\nvar formattingTokens = /(\\\\[[^\\\\[]*\\\\])|(\\\\\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\\n\\nvar localFormattingTokens = /(\\\\[[^\\\\[]*\\\\])|(\\\\\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\\n\\nvar formatFunctions = {};\\n\\nvar formatTokenFunctions = {};\\n\\n// token:    'M'\\n// padded:   ['MM', 2]\\n// ordinal:  'Mo'\\n// callback: function () { this.month() + 1 }\\nfunction addFormatToken (token, padded, ordinal, callback) {\\n    var func = callback;\\n    if (typeof callback === 'string') {\\n        func = function () {\\n            return this[callback]();\\n        };\\n    }\\n    if (token) {\\n        formatTokenFunctions[token] = func;\\n    }\\n    if (padded) {\\n        formatTokenFunctions[padded[0]] = function () {\\n            return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\\n        };\\n    }\\n    if (ordinal) {\\n        formatTokenFunctions[ordinal] = function () {\\n            return this.localeData().ordinal(func.apply(this, arguments), token);\\n        };\\n    }\\n}\\n\\nfunction removeFormattingTokens(input) {\\n    if (input.match(/\\\\[[\\\\s\\\\S]/)) {\\n        return input.replace(/^\\\\[|\\\\]$/g, '');\\n    }\\n    return input.replace(/\\\\\\\\/g, '');\\n}\\n\\nfunction makeFormatFunction(format) {\\n    var array = format.match(formattingTokens), i, length;\\n\\n    for (i = 0, length = array.length; i < length; i++) {\\n        if (formatTokenFunctions[array[i]]) {\\n            array[i] = formatTokenFunctions[array[i]];\\n        } else {\\n            array[i] = removeFormattingTokens(array[i]);\\n        }\\n    }\\n\\n    return function (mom) {\\n        var output = '', i;\\n        for (i = 0; i < length; i++) {\\n            output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\\n        }\\n        return output;\\n    };\\n}\\n\\n// format date using native date object\\nfunction formatMoment(m, format) {\\n    if (!m.isValid()) {\\n        return m.localeData().invalidDate();\\n    }\\n\\n    format = expandFormat(format, m.localeData());\\n    formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\\n\\n    return formatFunctions[format](m);\\n}\\n\\nfunction expandFormat(format, locale) {\\n    var i = 5;\\n\\n    function replaceLongDateFormatTokens(input) {\\n        return locale.longDateFormat(input) || input;\\n    }\\n\\n    localFormattingTokens.lastIndex = 0;\\n    while (i >= 0 && localFormattingTokens.test(format)) {\\n        format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\\n        localFormattingTokens.lastIndex = 0;\\n        i -= 1;\\n    }\\n\\n    return format;\\n}\\n\\nvar match1         = /\\\\d/;            //       0 - 9\\nvar match2         = /\\\\d\\\\d/;          //      00 - 99\\nvar match3         = /\\\\d{3}/;         //     000 - 999\\nvar match4         = /\\\\d{4}/;         //    0000 - 9999\\nvar match6         = /[+-]?\\\\d{6}/;    // -999999 - 999999\\nvar match1to2      = /\\\\d\\\\d?/;         //       0 - 99\\nvar match3to4      = /\\\\d\\\\d\\\\d\\\\d?/;     //     999 - 9999\\nvar match5to6      = /\\\\d\\\\d\\\\d\\\\d\\\\d\\\\d?/; //   99999 - 999999\\nvar match1to3      = /\\\\d{1,3}/;       //       0 - 999\\nvar match1to4      = /\\\\d{1,4}/;       //       0 - 9999\\nvar match1to6      = /[+-]?\\\\d{1,6}/;  // -999999 - 999999\\n\\nvar matchUnsigned  = /\\\\d+/;           //       0 - inf\\nvar matchSigned    = /[+-]?\\\\d+/;      //    -inf - inf\\n\\nvar matchOffset    = /Z|[+-]\\\\d\\\\d:?\\\\d\\\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\\nvar matchShortOffset = /Z|[+-]\\\\d\\\\d(?::?\\\\d\\\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\\n\\nvar matchTimestamp = /[+-]?\\\\d+(\\\\.\\\\d{1,3})?/; // 123456789 123456789.123\\n\\n// any word (or two) characters or numbers including two/three word month in arabic.\\n// includes scottish gaelic two word and hyphenated months\\nvar matchWord = /[0-9]*['a-z\\\\u00A0-\\\\u05FF\\\\u0700-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFEF]+|[\\\\u0600-\\\\u06FF\\\\/]+(\\\\s*?[\\\\u0600-\\\\u06FF]+){1,2}/i;\\n\\n\\nvar regexes = {};\\n\\nfunction addRegexToken (token, regex, strictRegex) {\\n    regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\\n        return (isStrict && strictRegex) ? strictRegex : regex;\\n    };\\n}\\n\\nfunction getParseRegexForToken (token, config) {\\n    if (!hasOwnProp(regexes, token)) {\\n        return new RegExp(unescapeFormat(token));\\n    }\\n\\n    return regexes[token](config._strict, config._locale);\\n}\\n\\n// Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\\nfunction unescapeFormat(s) {\\n    return regexEscape(s.replace('\\\\\\\\', '').replace(/\\\\\\\\(\\\\[)|\\\\\\\\(\\\\])|\\\\[([^\\\\]\\\\[]*)\\\\]|\\\\\\\\(.)/g, function (matched, p1, p2, p3, p4) {\\n        return p1 || p2 || p3 || p4;\\n    }));\\n}\\n\\nfunction regexEscape(s) {\\n    return s.replace(/[-\\\\/\\\\\\\\^$*+?.()|[\\\\]{}]/g, '\\\\\\\\$&');\\n}\\n\\nvar tokens = {};\\n\\nfunction addParseToken (token, callback) {\\n    var i, func = callback;\\n    if (typeof token === 'string') {\\n        token = [token];\\n    }\\n    if (isNumber(callback)) {\\n        func = function (input, array) {\\n            array[callback] = toInt(input);\\n        };\\n    }\\n    for (i = 0; i < token.length; i++) {\\n        tokens[token[i]] = func;\\n    }\\n}\\n\\nfunction addWeekParseToken (token, callback) {\\n    addParseToken(token, function (input, array, config, token) {\\n        config._w = config._w || {};\\n        callback(input, config._w, config, token);\\n    });\\n}\\n\\nfunction addTimeToArrayFromToken(token, input, config) {\\n    if (input != null && hasOwnProp(tokens, token)) {\\n        tokens[token](input, config._a, config, token);\\n    }\\n}\\n\\nvar YEAR = 0;\\nvar MONTH = 1;\\nvar DATE = 2;\\nvar HOUR = 3;\\nvar MINUTE = 4;\\nvar SECOND = 5;\\nvar MILLISECOND = 6;\\nvar WEEK = 7;\\nvar WEEKDAY = 8;\\n\\nvar indexOf;\\n\\nif (Array.prototype.indexOf) {\\n    indexOf = Array.prototype.indexOf;\\n} else {\\n    indexOf = function (o) {\\n        // I know\\n        var i;\\n        for (i = 0; i < this.length; ++i) {\\n            if (this[i] === o) {\\n                return i;\\n            }\\n        }\\n        return -1;\\n    };\\n}\\n\\nvar indexOf$1 = indexOf;\\n\\nfunction daysInMonth(year, month) {\\n    return new Date(Date.UTC(year, month + 1, 0)).getUTCDate();\\n}\\n\\n// FORMATTING\\n\\naddFormatToken('M', ['MM', 2], 'Mo', function () {\\n    return this.month() + 1;\\n});\\n\\naddFormatToken('MMM', 0, 0, function (format) {\\n    return this.localeData().monthsShort(this, format);\\n});\\n\\naddFormatToken('MMMM', 0, 0, function (format) {\\n    return this.localeData().months(this, format);\\n});\\n\\n// ALIASES\\n\\naddUnitAlias('month', 'M');\\n\\n// PRIORITY\\n\\naddUnitPriority('month', 8);\\n\\n// PARSING\\n\\naddRegexToken('M',    match1to2);\\naddRegexToken('MM',   match1to2, match2);\\naddRegexToken('MMM',  function (isStrict, locale) {\\n    return locale.monthsShortRegex(isStrict);\\n});\\naddRegexToken('MMMM', function (isStrict, locale) {\\n    return locale.monthsRegex(isStrict);\\n});\\n\\naddParseToken(['M', 'MM'], function (input, array) {\\n    array[MONTH] = toInt(input) - 1;\\n});\\n\\naddParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\\n    var month = config._locale.monthsParse(input, token, config._strict);\\n    // if we didn't find a month name, mark the date as invalid.\\n    if (month != null) {\\n        array[MONTH] = month;\\n    } else {\\n        getParsingFlags(config).invalidMonth = input;\\n    }\\n});\\n\\n// LOCALES\\n\\nvar MONTHS_IN_FORMAT = /D[oD]?(\\\\[[^\\\\[\\\\]]*\\\\]|\\\\s)+MMMM?/;\\nvar defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\\nfunction localeMonths (m, format) {\\n    if (!m) {\\n        return isArray(this._months) ? this._months :\\n            this._months['standalone'];\\n    }\\n    return isArray(this._months) ? this._months[m.month()] :\\n        this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\\n}\\n\\nvar defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\\nfunction localeMonthsShort (m, format) {\\n    if (!m) {\\n        return isArray(this._monthsShort) ? this._monthsShort :\\n            this._monthsShort['standalone'];\\n    }\\n    return isArray(this._monthsShort) ? this._monthsShort[m.month()] :\\n        this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\\n}\\n\\nfunction handleStrictParse(monthName, format, strict) {\\n    var i, ii, mom, llc = monthName.toLocaleLowerCase();\\n    if (!this._monthsParse) {\\n        // this is not used\\n        this._monthsParse = [];\\n        this._longMonthsParse = [];\\n        this._shortMonthsParse = [];\\n        for (i = 0; i < 12; ++i) {\\n            mom = createUTC([2000, i]);\\n            this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\\n            this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\\n        }\\n    }\\n\\n    if (strict) {\\n        if (format === 'MMM') {\\n            ii = indexOf$1.call(this._shortMonthsParse, llc);\\n            return ii !== -1 ? ii : null;\\n        } else {\\n            ii = indexOf$1.call(this._longMonthsParse, llc);\\n            return ii !== -1 ? ii : null;\\n        }\\n    } else {\\n        if (format === 'MMM') {\\n            ii = indexOf$1.call(this._shortMonthsParse, llc);\\n            if (ii !== -1) {\\n                return ii;\\n            }\\n            ii = indexOf$1.call(this._longMonthsParse, llc);\\n            return ii !== -1 ? ii : null;\\n        } else {\\n            ii = indexOf$1.call(this._longMonthsParse, llc);\\n            if (ii !== -1) {\\n                return ii;\\n            }\\n            ii = indexOf$1.call(this._shortMonthsParse, llc);\\n            return ii !== -1 ? ii : null;\\n        }\\n    }\\n}\\n\\nfunction localeMonthsParse (monthName, format, strict) {\\n    var i, mom, regex;\\n\\n    if (this._monthsParseExact) {\\n        return handleStrictParse.call(this, monthName, format, strict);\\n    }\\n\\n    if (!this._monthsParse) {\\n        this._monthsParse = [];\\n        this._longMonthsParse = [];\\n        this._shortMonthsParse = [];\\n    }\\n\\n    // TODO: add sorting\\n    // Sorting makes sure if one month (or abbr) is a prefix of another\\n    // see sorting in computeMonthsParse\\n    for (i = 0; i < 12; i++) {\\n        // make the regex if we don't have it already\\n        mom = createUTC([2000, i]);\\n        if (strict && !this._longMonthsParse[i]) {\\n            this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\\n            this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\\n        }\\n        if (!strict && !this._monthsParse[i]) {\\n            regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\\n            this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\\n        }\\n        // test the regex\\n        if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\\n            return i;\\n        } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\\n            return i;\\n        } else if (!strict && this._monthsParse[i].test(monthName)) {\\n            return i;\\n        }\\n    }\\n}\\n\\n// MOMENTS\\n\\nfunction setMonth (mom, value) {\\n    var dayOfMonth;\\n\\n    if (!mom.isValid()) {\\n        // No op\\n        return mom;\\n    }\\n\\n    if (typeof value === 'string') {\\n        if (/^\\\\d+$/.test(value)) {\\n            value = toInt(value);\\n        } else {\\n            value = mom.localeData().monthsParse(value);\\n            // TODO: Another silent failure?\\n            if (!isNumber(value)) {\\n                return mom;\\n            }\\n        }\\n    }\\n\\n    dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\\n    mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\\n    return mom;\\n}\\n\\nfunction getSetMonth (value) {\\n    if (value != null) {\\n        setMonth(this, value);\\n        hooks.updateOffset(this, true);\\n        return this;\\n    } else {\\n        return get(this, 'Month');\\n    }\\n}\\n\\nfunction getDaysInMonth () {\\n    return daysInMonth(this.year(), this.month());\\n}\\n\\nvar defaultMonthsShortRegex = matchWord;\\nfunction monthsShortRegex (isStrict) {\\n    if (this._monthsParseExact) {\\n        if (!hasOwnProp(this, '_monthsRegex')) {\\n            computeMonthsParse.call(this);\\n        }\\n        if (isStrict) {\\n            return this._monthsShortStrictRegex;\\n        } else {\\n            return this._monthsShortRegex;\\n        }\\n    } else {\\n        if (!hasOwnProp(this, '_monthsShortRegex')) {\\n            this._monthsShortRegex = defaultMonthsShortRegex;\\n        }\\n        return this._monthsShortStrictRegex && isStrict ?\\n            this._monthsShortStrictRegex : this._monthsShortRegex;\\n    }\\n}\\n\\nvar defaultMonthsRegex = matchWord;\\nfunction monthsRegex (isStrict) {\\n    if (this._monthsParseExact) {\\n        if (!hasOwnProp(this, '_monthsRegex')) {\\n            computeMonthsParse.call(this);\\n        }\\n        if (isStrict) {\\n            return this._monthsStrictRegex;\\n        } else {\\n            return this._monthsRegex;\\n        }\\n    } else {\\n        if (!hasOwnProp(this, '_monthsRegex')) {\\n            this._monthsRegex = defaultMonthsRegex;\\n        }\\n        return this._monthsStrictRegex && isStrict ?\\n            this._monthsStrictRegex : this._monthsRegex;\\n    }\\n}\\n\\nfunction computeMonthsParse () {\\n    function cmpLenRev(a, b) {\\n        return b.length - a.length;\\n    }\\n\\n    var shortPieces = [], longPieces = [], mixedPieces = [],\\n        i, mom;\\n    for (i = 0; i < 12; i++) {\\n        // make the regex if we don't have it already\\n        mom = createUTC([2000, i]);\\n        shortPieces.push(this.monthsShort(mom, ''));\\n        longPieces.push(this.months(mom, ''));\\n        mixedPieces.push(this.months(mom, ''));\\n        mixedPieces.push(this.monthsShort(mom, ''));\\n    }\\n    // Sorting makes sure if one month (or abbr) is a prefix of another it\\n    // will match the longer piece.\\n    shortPieces.sort(cmpLenRev);\\n    longPieces.sort(cmpLenRev);\\n    mixedPieces.sort(cmpLenRev);\\n    for (i = 0; i < 12; i++) {\\n        shortPieces[i] = regexEscape(shortPieces[i]);\\n        longPieces[i] = regexEscape(longPieces[i]);\\n    }\\n    for (i = 0; i < 24; i++) {\\n        mixedPieces[i] = regexEscape(mixedPieces[i]);\\n    }\\n\\n    this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\\n    this._monthsShortRegex = this._monthsRegex;\\n    this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\\n    this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\\n}\\n\\n// FORMATTING\\n\\naddFormatToken('Y', 0, 0, function () {\\n    var y = this.year();\\n    return y <= 9999 ? '' + y : '+' + y;\\n});\\n\\naddFormatToken(0, ['YY', 2], 0, function () {\\n    return this.year() % 100;\\n});\\n\\naddFormatToken(0, ['YYYY',   4],       0, 'year');\\naddFormatToken(0, ['YYYYY',  5],       0, 'year');\\naddFormatToken(0, ['YYYYYY', 6, true], 0, 'year');\\n\\n// ALIASES\\n\\naddUnitAlias('year', 'y');\\n\\n// PRIORITIES\\n\\naddUnitPriority('year', 1);\\n\\n// PARSING\\n\\naddRegexToken('Y',      matchSigned);\\naddRegexToken('YY',     match1to2, match2);\\naddRegexToken('YYYY',   match1to4, match4);\\naddRegexToken('YYYYY',  match1to6, match6);\\naddRegexToken('YYYYYY', match1to6, match6);\\n\\naddParseToken(['YYYYY', 'YYYYYY'], YEAR);\\naddParseToken('YYYY', function (input, array) {\\n    array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\\n});\\naddParseToken('YY', function (input, array) {\\n    array[YEAR] = hooks.parseTwoDigitYear(input);\\n});\\naddParseToken('Y', function (input, array) {\\n    array[YEAR] = parseInt(input, 10);\\n});\\n\\n// HELPERS\\n\\nfunction daysInYear(year) {\\n    return isLeapYear(year) ? 366 : 365;\\n}\\n\\nfunction isLeapYear(year) {\\n    return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\\n}\\n\\n// HOOKS\\n\\nhooks.parseTwoDigitYear = function (input) {\\n    return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\\n};\\n\\n// MOMENTS\\n\\nvar getSetYear = makeGetSet('FullYear', true);\\n\\nfunction getIsLeapYear () {\\n    return isLeapYear(this.year());\\n}\\n\\nfunction createDate (y, m, d, h, M, s, ms) {\\n    // can't just apply() to create a date:\\n    // https://stackoverflow.com/q/181348\\n    var date = new Date(y, m, d, h, M, s, ms);\\n\\n    // the date constructor remaps years 0-99 to 1900-1999\\n    if (y < 100 && y >= 0 && isFinite(date.getFullYear())) {\\n        date.setFullYear(y);\\n    }\\n    return date;\\n}\\n\\nfunction createUTCDate (y) {\\n    var date = new Date(Date.UTC.apply(null, arguments));\\n\\n    // the Date.UTC function remaps years 0-99 to 1900-1999\\n    if (y < 100 && y >= 0 && isFinite(date.getUTCFullYear())) {\\n        date.setUTCFullYear(y);\\n    }\\n    return date;\\n}\\n\\n// start-of-first-week - start-of-year\\nfunction firstWeekOffset(year, dow, doy) {\\n    var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\\n        fwd = 7 + dow - doy,\\n        // first-week day local weekday -- which local weekday is fwd\\n        fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\\n\\n    return -fwdlw + fwd - 1;\\n}\\n\\n// https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\\nfunction dayOfYearFromWeeks(year, week, weekday, dow, doy) {\\n    var localWeekday = (7 + weekday - dow) % 7,\\n        weekOffset = firstWeekOffset(year, dow, doy),\\n        dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\\n        resYear, resDayOfYear;\\n\\n    if (dayOfYear <= 0) {\\n        resYear = year - 1;\\n        resDayOfYear = daysInYear(resYear) + dayOfYear;\\n    } else if (dayOfYear > daysInYear(year)) {\\n        resYear = year + 1;\\n        resDayOfYear = dayOfYear - daysInYear(year);\\n    } else {\\n        resYear = year;\\n        resDayOfYear = dayOfYear;\\n    }\\n\\n    return {\\n        year: resYear,\\n        dayOfYear: resDayOfYear\\n    };\\n}\\n\\nfunction weekOfYear(mom, dow, doy) {\\n    var weekOffset = firstWeekOffset(mom.year(), dow, doy),\\n        week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\\n        resWeek, resYear;\\n\\n    if (week < 1) {\\n        resYear = mom.year() - 1;\\n        resWeek = week + weeksInYear(resYear, dow, doy);\\n    } else if (week > weeksInYear(mom.year(), dow, doy)) {\\n        resWeek = week - weeksInYear(mom.year(), dow, doy);\\n        resYear = mom.year() + 1;\\n    } else {\\n        resYear = mom.year();\\n        resWeek = week;\\n    }\\n\\n    return {\\n        week: resWeek,\\n        year: resYear\\n    };\\n}\\n\\nfunction weeksInYear(year, dow, doy) {\\n    var weekOffset = firstWeekOffset(year, dow, doy),\\n        weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\\n    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\\n}\\n\\n// FORMATTING\\n\\naddFormatToken('w', ['ww', 2], 'wo', 'week');\\naddFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');\\n\\n// ALIASES\\n\\naddUnitAlias('week', 'w');\\naddUnitAlias('isoWeek', 'W');\\n\\n// PRIORITIES\\n\\naddUnitPriority('week', 5);\\naddUnitPriority('isoWeek', 5);\\n\\n// PARSING\\n\\naddRegexToken('w',  match1to2);\\naddRegexToken('ww', match1to2, match2);\\naddRegexToken('W',  match1to2);\\naddRegexToken('WW', match1to2, match2);\\n\\naddWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\\n    week[token.substr(0, 1)] = toInt(input);\\n});\\n\\n// HELPERS\\n\\n// LOCALES\\n\\nfunction localeWeek (mom) {\\n    return weekOfYear(mom, this._week.dow, this._week.doy).week;\\n}\\n\\nvar defaultLocaleWeek = {\\n    dow : 0, // Sunday is the first day of the week.\\n    doy : 6  // The week that contains Jan 1st is the first week of the year.\\n};\\n\\nfunction localeFirstDayOfWeek () {\\n    return this._week.dow;\\n}\\n\\nfunction localeFirstDayOfYear () {\\n    return this._week.doy;\\n}\\n\\n// MOMENTS\\n\\nfunction getSetWeek (input) {\\n    var week = this.localeData().week(this);\\n    return input == null ? week : this.add((input - week) * 7, 'd');\\n}\\n\\nfunction getSetISOWeek (input) {\\n    var week = weekOfYear(this, 1, 4).week;\\n    return input == null ? week : this.add((input - week) * 7, 'd');\\n}\\n\\n// FORMATTING\\n\\naddFormatToken('d', 0, 'do', 'day');\\n\\naddFormatToken('dd', 0, 0, function (format) {\\n    return this.localeData().weekdaysMin(this, format);\\n});\\n\\naddFormatToken('ddd', 0, 0, function (format) {\\n    return this.localeData().weekdaysShort(this, format);\\n});\\n\\naddFormatToken('dddd', 0, 0, function (format) {\\n    return this.localeData().weekdays(this, format);\\n});\\n\\naddFormatToken('e', 0, 0, 'weekday');\\naddFormatToken('E', 0, 0, 'isoWeekday');\\n\\n// ALIASES\\n\\naddUnitAlias('day', 'd');\\naddUnitAlias('weekday', 'e');\\naddUnitAlias('isoWeekday', 'E');\\n\\n// PRIORITY\\naddUnitPriority('day', 11);\\naddUnitPriority('weekday', 11);\\naddUnitPriority('isoWeekday', 11);\\n\\n// PARSING\\n\\naddRegexToken('d',    match1to2);\\naddRegexToken('e',    match1to2);\\naddRegexToken('E',    match1to2);\\naddRegexToken('dd',   function (isStrict, locale) {\\n    return locale.weekdaysMinRegex(isStrict);\\n});\\naddRegexToken('ddd',   function (isStrict, locale) {\\n    return locale.weekdaysShortRegex(isStrict);\\n});\\naddRegexToken('dddd',   function (isStrict, locale) {\\n    return locale.weekdaysRegex(isStrict);\\n});\\n\\naddWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\\n    var weekday = config._locale.weekdaysParse(input, token, config._strict);\\n    // if we didn't get a weekday name, mark the date as invalid\\n    if (weekday != null) {\\n        week.d = weekday;\\n    } else {\\n        getParsingFlags(config).invalidWeekday = input;\\n    }\\n});\\n\\naddWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\\n    week[token] = toInt(input);\\n});\\n\\n// HELPERS\\n\\nfunction parseWeekday(input, locale) {\\n    if (typeof input !== 'string') {\\n        return input;\\n    }\\n\\n    if (!isNaN(input)) {\\n        return parseInt(input, 10);\\n    }\\n\\n    input = locale.weekdaysParse(input);\\n    if (typeof input === 'number') {\\n        return input;\\n    }\\n\\n    return null;\\n}\\n\\nfunction parseIsoWeekday(input, locale) {\\n    if (typeof input === 'string') {\\n        return locale.weekdaysParse(input) % 7 || 7;\\n    }\\n    return isNaN(input) ? null : input;\\n}\\n\\n// LOCALES\\n\\nvar defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\\nfunction localeWeekdays (m, format) {\\n    if (!m) {\\n        return isArray(this._weekdays) ? this._weekdays :\\n            this._weekdays['standalone'];\\n    }\\n    return isArray(this._weekdays) ? this._weekdays[m.day()] :\\n        this._weekdays[this._weekdays.isFormat.test(format) ? 'format' : 'standalone'][m.day()];\\n}\\n\\nvar defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\\nfunction localeWeekdaysShort (m) {\\n    return (m) ? this._weekdaysShort[m.day()] : this._weekdaysShort;\\n}\\n\\nvar defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\\nfunction localeWeekdaysMin (m) {\\n    return (m) ? this._weekdaysMin[m.day()] : this._weekdaysMin;\\n}\\n\\nfunction handleStrictParse$1(weekdayName, format, strict) {\\n    var i, ii, mom, llc = weekdayName.toLocaleLowerCase();\\n    if (!this._weekdaysParse) {\\n        this._weekdaysParse = [];\\n        this._shortWeekdaysParse = [];\\n        this._minWeekdaysParse = [];\\n\\n        for (i = 0; i < 7; ++i) {\\n            mom = createUTC([2000, 1]).day(i);\\n            this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\\n            this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\\n            this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\\n        }\\n    }\\n\\n    if (strict) {\\n        if (format === 'dddd') {\\n            ii = indexOf$1.call(this._weekdaysParse, llc);\\n            return ii !== -1 ? ii : null;\\n        } else if (format === 'ddd') {\\n            ii = indexOf$1.call(this._shortWeekdaysParse, llc);\\n            return ii !== -1 ? ii : null;\\n        } else {\\n            ii = indexOf$1.call(this._minWeekdaysParse, llc);\\n            return ii !== -1 ? ii : null;\\n        }\\n    } else {\\n        if (format === 'dddd') {\\n            ii = indexOf$1.call(this._weekdaysParse, llc);\\n            if (ii !== -1) {\\n                return ii;\\n            }\\n            ii = indexOf$1.call(this._shortWeekdaysParse, llc);\\n            if (ii !== -1) {\\n                return ii;\\n            }\\n            ii = indexOf$1.call(this._minWeekdaysParse, llc);\\n            return ii !== -1 ? ii : null;\\n        } else if (format === 'ddd') {\\n            ii = indexOf$1.call(this._shortWeekdaysParse, llc);\\n            if (ii !== -1) {\\n                return ii;\\n            }\\n            ii = indexOf$1.call(this._weekdaysParse, llc);\\n            if (ii !== -1) {\\n                return ii;\\n            }\\n            ii = indexOf$1.call(this._minWeekdaysParse, llc);\\n            return ii !== -1 ? ii : null;\\n        } else {\\n            ii = indexOf$1.call(this._minWeekdaysParse, llc);\\n            if (ii !== -1) {\\n                return ii;\\n            }\\n            ii = indexOf$1.call(this._weekdaysParse, llc);\\n            if (ii !== -1) {\\n                return ii;\\n            }\\n            ii = indexOf$1.call(this._shortWeekdaysParse, llc);\\n            return ii !== -1 ? ii : null;\\n        }\\n    }\\n}\\n\\nfunction localeWeekdaysParse (weekdayName, format, strict) {\\n    var i, mom, regex;\\n\\n    if (this._weekdaysParseExact) {\\n        return handleStrictParse$1.call(this, weekdayName, format, strict);\\n    }\\n\\n    if (!this._weekdaysParse) {\\n        this._weekdaysParse = [];\\n        this._minWeekdaysParse = [];\\n        this._shortWeekdaysParse = [];\\n        this._fullWeekdaysParse = [];\\n    }\\n\\n    for (i = 0; i < 7; i++) {\\n        // make the regex if we don't have it already\\n\\n        mom = createUTC([2000, 1]).day(i);\\n        if (strict && !this._fullWeekdaysParse[i]) {\\n            this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\\\.?') + '$', 'i');\\n            this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\\\.?') + '$', 'i');\\n            this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\\\.?') + '$', 'i');\\n        }\\n        if (!this._weekdaysParse[i]) {\\n            regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\\n            this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\\n        }\\n        // test the regex\\n        if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\\n            return i;\\n        } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\\n            return i;\\n        } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\\n            return i;\\n        } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\\n            return i;\\n        }\\n    }\\n}\\n\\n// MOMENTS\\n\\nfunction getSetDayOfWeek (input) {\\n    if (!this.isValid()) {\\n        return input != null ? this : NaN;\\n    }\\n    var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\\n    if (input != null) {\\n        input = parseWeekday(input, this.localeData());\\n        return this.add(input - day, 'd');\\n    } else {\\n        return day;\\n    }\\n}\\n\\nfunction getSetLocaleDayOfWeek (input) {\\n    if (!this.isValid()) {\\n        return input != null ? this : NaN;\\n    }\\n    var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\\n    return input == null ? weekday : this.add(input - weekday, 'd');\\n}\\n\\nfunction getSetISODayOfWeek (input) {\\n    if (!this.isValid()) {\\n        return input != null ? this : NaN;\\n    }\\n\\n    // behaves the same as moment#day except\\n    // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\\n    // as a setter, sunday should belong to the previous week.\\n\\n    if (input != null) {\\n        var weekday = parseIsoWeekday(input, this.localeData());\\n        return this.day(this.day() % 7 ? weekday : weekday - 7);\\n    } else {\\n        return this.day() || 7;\\n    }\\n}\\n\\nvar defaultWeekdaysRegex = matchWord;\\nfunction weekdaysRegex (isStrict) {\\n    if (this._weekdaysParseExact) {\\n        if (!hasOwnProp(this, '_weekdaysRegex')) {\\n            computeWeekdaysParse.call(this);\\n        }\\n        if (isStrict) {\\n            return this._weekdaysStrictRegex;\\n        } else {\\n            return this._weekdaysRegex;\\n        }\\n    } else {\\n        if (!hasOwnProp(this, '_weekdaysRegex')) {\\n            this._weekdaysRegex = defaultWeekdaysRegex;\\n        }\\n        return this._weekdaysStrictRegex && isStrict ?\\n            this._weekdaysStrictRegex : this._weekdaysRegex;\\n    }\\n}\\n\\nvar defaultWeekdaysShortRegex = matchWord;\\nfunction weekdaysShortRegex (isStrict) {\\n    if (this._weekdaysParseExact) {\\n        if (!hasOwnProp(this, '_weekdaysRegex')) {\\n            computeWeekdaysParse.call(this);\\n        }\\n        if (isStrict) {\\n            return this._weekdaysShortStrictRegex;\\n        } else {\\n            return this._weekdaysShortRegex;\\n        }\\n    } else {\\n        if (!hasOwnProp(this, '_weekdaysShortRegex')) {\\n            this._weekdaysShortRegex = defaultWeekdaysShortRegex;\\n        }\\n        return this._weekdaysShortStrictRegex && isStrict ?\\n            this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\\n    }\\n}\\n\\nvar defaultWeekdaysMinRegex = matchWord;\\nfunction weekdaysMinRegex (isStrict) {\\n    if (this._weekdaysParseExact) {\\n        if (!hasOwnProp(this, '_weekdaysRegex')) {\\n            computeWeekdaysParse.call(this);\\n        }\\n        if (isStrict) {\\n            return this._weekdaysMinStrictRegex;\\n        } else {\\n            return this._weekdaysMinRegex;\\n        }\\n    } else {\\n        if (!hasOwnProp(this, '_weekdaysMinRegex')) {\\n            this._weekdaysMinRegex = defaultWeekdaysMinRegex;\\n        }\\n        return this._weekdaysMinStrictRegex && isStrict ?\\n            this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\\n    }\\n}\\n\\n\\nfunction computeWeekdaysParse () {\\n    function cmpLenRev(a, b) {\\n        return b.length - a.length;\\n    }\\n\\n    var minPieces = [], shortPieces = [], longPieces = [], mixedPieces = [],\\n        i, mom, minp, shortp, longp;\\n    for (i = 0; i < 7; i++) {\\n        // make the regex if we don't have it already\\n        mom = createUTC([2000, 1]).day(i);\\n        minp = this.weekdaysMin(mom, '');\\n        shortp = this.weekdaysShort(mom, '');\\n        longp = this.weekdays(mom, '');\\n        minPieces.push(minp);\\n        shortPieces.push(shortp);\\n        longPieces.push(longp);\\n        mixedPieces.push(minp);\\n        mixedPieces.push(shortp);\\n        mixedPieces.push(longp);\\n    }\\n    // Sorting makes sure if one weekday (or abbr) is a prefix of another it\\n    // will match the longer piece.\\n    minPieces.sort(cmpLenRev);\\n    shortPieces.sort(cmpLenRev);\\n    longPieces.sort(cmpLenRev);\\n    mixedPieces.sort(cmpLenRev);\\n    for (i = 0; i < 7; i++) {\\n        shortPieces[i] = regexEscape(shortPieces[i]);\\n        longPieces[i] = regexEscape(longPieces[i]);\\n        mixedPieces[i] = regexEscape(mixedPieces[i]);\\n    }\\n\\n    this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\\n    this._weekdaysShortRegex = this._weekdaysRegex;\\n    this._weekdaysMinRegex = this._weekdaysRegex;\\n\\n    this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\\n    this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\\n    this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\\n}\\n\\n// FORMATTING\\n\\nfunction hFormat() {\\n    return this.hours() % 12 || 12;\\n}\\n\\nfunction kFormat() {\\n    return this.hours() || 24;\\n}\\n\\naddFormatToken('H', ['HH', 2], 0, 'hour');\\naddFormatToken('h', ['hh', 2], 0, hFormat);\\naddFormatToken('k', ['kk', 2], 0, kFormat);\\n\\naddFormatToken('hmm', 0, 0, function () {\\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\\n});\\n\\naddFormatToken('hmmss', 0, 0, function () {\\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) +\\n        zeroFill(this.seconds(), 2);\\n});\\n\\naddFormatToken('Hmm', 0, 0, function () {\\n    return '' + this.hours() + zeroFill(this.minutes(), 2);\\n});\\n\\naddFormatToken('Hmmss', 0, 0, function () {\\n    return '' + this.hours() + zeroFill(this.minutes(), 2) +\\n        zeroFill(this.seconds(), 2);\\n});\\n\\nfunction meridiem (token, lowercase) {\\n    addFormatToken(token, 0, 0, function () {\\n        return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\\n    });\\n}\\n\\nmeridiem('a', true);\\nmeridiem('A', false);\\n\\n// ALIASES\\n\\naddUnitAlias('hour', 'h');\\n\\n// PRIORITY\\naddUnitPriority('hour', 13);\\n\\n// PARSING\\n\\nfunction matchMeridiem (isStrict, locale) {\\n    return locale._meridiemParse;\\n}\\n\\naddRegexToken('a',  matchMeridiem);\\naddRegexToken('A',  matchMeridiem);\\naddRegexToken('H',  match1to2);\\naddRegexToken('h',  match1to2);\\naddRegexToken('k',  match1to2);\\naddRegexToken('HH', match1to2, match2);\\naddRegexToken('hh', match1to2, match2);\\naddRegexToken('kk', match1to2, match2);\\n\\naddRegexToken('hmm', match3to4);\\naddRegexToken('hmmss', match5to6);\\naddRegexToken('Hmm', match3to4);\\naddRegexToken('Hmmss', match5to6);\\n\\naddParseToken(['H', 'HH'], HOUR);\\naddParseToken(['k', 'kk'], function (input, array, config) {\\n    var kInput = toInt(input);\\n    array[HOUR] = kInput === 24 ? 0 : kInput;\\n});\\naddParseToken(['a', 'A'], function (input, array, config) {\\n    config._isPm = config._locale.isPM(input);\\n    config._meridiem = input;\\n});\\naddParseToken(['h', 'hh'], function (input, array, config) {\\n    array[HOUR] = toInt(input);\\n    getParsingFlags(config).bigHour = true;\\n});\\naddParseToken('hmm', function (input, array, config) {\\n    var pos = input.length - 2;\\n    array[HOUR] = toInt(input.substr(0, pos));\\n    array[MINUTE] = toInt(input.substr(pos));\\n    getParsingFlags(config).bigHour = true;\\n});\\naddParseToken('hmmss', function (input, array, config) {\\n    var pos1 = input.length - 4;\\n    var pos2 = input.length - 2;\\n    array[HOUR] = toInt(input.substr(0, pos1));\\n    array[MINUTE] = toInt(input.substr(pos1, 2));\\n    array[SECOND] = toInt(input.substr(pos2));\\n    getParsingFlags(config).bigHour = true;\\n});\\naddParseToken('Hmm', function (input, array, config) {\\n    var pos = input.length - 2;\\n    array[HOUR] = toInt(input.substr(0, pos));\\n    array[MINUTE] = toInt(input.substr(pos));\\n});\\naddParseToken('Hmmss', function (input, array, config) {\\n    var pos1 = input.length - 4;\\n    var pos2 = input.length - 2;\\n    array[HOUR] = toInt(input.substr(0, pos1));\\n    array[MINUTE] = toInt(input.substr(pos1, 2));\\n    array[SECOND] = toInt(input.substr(pos2));\\n});\\n\\n// LOCALES\\n\\nfunction localeIsPM (input) {\\n    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\\n    // Using charAt should be more compatible.\\n    return ((input + '').toLowerCase().charAt(0) === 'p');\\n}\\n\\nvar defaultLocaleMeridiemParse = /[ap]\\\\.?m?\\\\.?/i;\\nfunction localeMeridiem (hours, minutes, isLower) {\\n    if (hours > 11) {\\n        return isLower ? 'pm' : 'PM';\\n    } else {\\n        return isLower ? 'am' : 'AM';\\n    }\\n}\\n\\n\\n// MOMENTS\\n\\n// Setting the hour should keep the time, because the user explicitly\\n// specified which hour he wants. So trying to maintain the same hour (in\\n// a new timezone) makes sense. Adding/subtracting hours does not follow\\n// this rule.\\nvar getSetHour = makeGetSet('Hours', true);\\n\\n// months\\n// week\\n// weekdays\\n// meridiem\\nvar baseConfig = {\\n    calendar: defaultCalendar,\\n    longDateFormat: defaultLongDateFormat,\\n    invalidDate: defaultInvalidDate,\\n    ordinal: defaultOrdinal,\\n    dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\\n    relativeTime: defaultRelativeTime,\\n\\n    months: defaultLocaleMonths,\\n    monthsShort: defaultLocaleMonthsShort,\\n\\n    week: defaultLocaleWeek,\\n\\n    weekdays: defaultLocaleWeekdays,\\n    weekdaysMin: defaultLocaleWeekdaysMin,\\n    weekdaysShort: defaultLocaleWeekdaysShort,\\n\\n    meridiemParse: defaultLocaleMeridiemParse\\n};\\n\\n// internal storage for locale config files\\nvar locales = {};\\nvar localeFamilies = {};\\nvar globalLocale;\\n\\nfunction normalizeLocale(key) {\\n    return key ? key.toLowerCase().replace('_', '-') : key;\\n}\\n\\n// pick the locale from the array\\n// try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\\n// substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\\nfunction chooseLocale(names) {\\n    var i = 0, j, next, locale, split;\\n\\n    while (i < names.length) {\\n        split = normalizeLocale(names[i]).split('-');\\n        j = split.length;\\n        next = normalizeLocale(names[i + 1]);\\n        next = next ? next.split('-') : null;\\n        while (j > 0) {\\n            locale = loadLocale(split.slice(0, j).join('-'));\\n            if (locale) {\\n                return locale;\\n            }\\n            if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\\n                //the next array item is better than a shallower substring of this one\\n                break;\\n            }\\n            j--;\\n        }\\n        i++;\\n    }\\n    return null;\\n}\\n\\nfunction loadLocale(name) {\\n    var oldLocale = null;\\n    // TODO: Find a better way to register and load all the locales in Node\\n    if (!locales[name] && (typeof module !== 'undefined') &&\\n            module && module.exports) {\\n        try {\\n            oldLocale = globalLocale._abbr;\\n            require('./locale/' + name);\\n            // because defineLocale currently also sets the global locale, we\\n            // want to undo that for lazy loaded locales\\n            getSetGlobalLocale(oldLocale);\\n        } catch (e) { }\\n    }\\n    return locales[name];\\n}\\n\\n// This function will load locale and then set the global locale.  If\\n// no arguments are passed in, it will simply return the current global\\n// locale key.\\nfunction getSetGlobalLocale (key, values) {\\n    var data;\\n    if (key) {\\n        if (isUndefined(values)) {\\n            data = getLocale(key);\\n        }\\n        else {\\n            data = defineLocale(key, values);\\n        }\\n\\n        if (data) {\\n            // moment.duration._locale = moment._locale = data;\\n            globalLocale = data;\\n        }\\n    }\\n\\n    return globalLocale._abbr;\\n}\\n\\nfunction defineLocale (name, config) {\\n    if (config !== null) {\\n        var parentConfig = baseConfig;\\n        config.abbr = name;\\n        if (locales[name] != null) {\\n            deprecateSimple('defineLocaleOverride',\\n                    'use moment.updateLocale(localeName, config) to change ' +\\n                    'an existing locale. moment.defineLocale(localeName, ' +\\n                    'config) should only be used for creating a new locale ' +\\n                    'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\\n            parentConfig = locales[name]._config;\\n        } else if (config.parentLocale != null) {\\n            if (locales[config.parentLocale] != null) {\\n                parentConfig = locales[config.parentLocale]._config;\\n            } else {\\n                if (!localeFamilies[config.parentLocale]) {\\n                    localeFamilies[config.parentLocale] = [];\\n                }\\n                localeFamilies[config.parentLocale].push({\\n                    name: name,\\n                    config: config\\n                });\\n                return null;\\n            }\\n        }\\n        locales[name] = new Locale(mergeConfigs(parentConfig, config));\\n\\n        if (localeFamilies[name]) {\\n            localeFamilies[name].forEach(function (x) {\\n                defineLocale(x.name, x.config);\\n            });\\n        }\\n\\n        // backwards compat for now: also set the locale\\n        // make sure we set the locale AFTER all child locales have been\\n        // created, so we won't end up with the child locale set.\\n        getSetGlobalLocale(name);\\n\\n\\n        return locales[name];\\n    } else {\\n        // useful for testing\\n        delete locales[name];\\n        return null;\\n    }\\n}\\n\\nfunction updateLocale(name, config) {\\n    if (config != null) {\\n        var locale, parentConfig = baseConfig;\\n        // MERGE\\n        if (locales[name] != null) {\\n            parentConfig = locales[name]._config;\\n        }\\n        config = mergeConfigs(parentConfig, config);\\n        locale = new Locale(config);\\n        locale.parentLocale = locales[name];\\n        locales[name] = locale;\\n\\n        // backwards compat for now: also set the locale\\n        getSetGlobalLocale(name);\\n    } else {\\n        // pass null for config to unupdate, useful for tests\\n        if (locales[name] != null) {\\n            if (locales[name].parentLocale != null) {\\n                locales[name] = locales[name].parentLocale;\\n            } else if (locales[name] != null) {\\n                delete locales[name];\\n            }\\n        }\\n    }\\n    return locales[name];\\n}\\n\\n// returns locale data\\nfunction getLocale (key) {\\n    var locale;\\n\\n    if (key && key._locale && key._locale._abbr) {\\n        key = key._locale._abbr;\\n    }\\n\\n    if (!key) {\\n        return globalLocale;\\n    }\\n\\n    if (!isArray(key)) {\\n        //short-circuit everything else\\n        locale = loadLocale(key);\\n        if (locale) {\\n            return locale;\\n        }\\n        key = [key];\\n    }\\n\\n    return chooseLocale(key);\\n}\\n\\nfunction listLocales() {\\n    return keys$1(locales);\\n}\\n\\nfunction checkOverflow (m) {\\n    var overflow;\\n    var a = m._a;\\n\\n    if (a && getParsingFlags(m).overflow === -2) {\\n        overflow =\\n            a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :\\n            a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :\\n            a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :\\n            a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :\\n            a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :\\n            a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :\\n            -1;\\n\\n        if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\\n            overflow = DATE;\\n        }\\n        if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\\n            overflow = WEEK;\\n        }\\n        if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\\n            overflow = WEEKDAY;\\n        }\\n\\n        getParsingFlags(m).overflow = overflow;\\n    }\\n\\n    return m;\\n}\\n\\n// iso 8601 regex\\n// 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\\nvar extendedIsoRegex = /^\\\\s*((?:[+-]\\\\d{6}|\\\\d{4})-(?:\\\\d\\\\d-\\\\d\\\\d|W\\\\d\\\\d-\\\\d|W\\\\d\\\\d|\\\\d\\\\d\\\\d|\\\\d\\\\d))(?:(T| )(\\\\d\\\\d(?::\\\\d\\\\d(?::\\\\d\\\\d(?:[.,]\\\\d+)?)?)?)([\\\\+\\\\-]\\\\d\\\\d(?::?\\\\d\\\\d)?|\\\\s*Z)?)?$/;\\nvar basicIsoRegex = /^\\\\s*((?:[+-]\\\\d{6}|\\\\d{4})(?:\\\\d\\\\d\\\\d\\\\d|W\\\\d\\\\d\\\\d|W\\\\d\\\\d|\\\\d\\\\d\\\\d|\\\\d\\\\d))(?:(T| )(\\\\d\\\\d(?:\\\\d\\\\d(?:\\\\d\\\\d(?:[.,]\\\\d+)?)?)?)([\\\\+\\\\-]\\\\d\\\\d(?::?\\\\d\\\\d)?|\\\\s*Z)?)?$/;\\n\\nvar tzRegex = /Z|[+-]\\\\d\\\\d(?::?\\\\d\\\\d)?/;\\n\\nvar isoDates = [\\n    ['YYYYYY-MM-DD', /[+-]\\\\d{6}-\\\\d\\\\d-\\\\d\\\\d/],\\n    ['YYYY-MM-DD', /\\\\d{4}-\\\\d\\\\d-\\\\d\\\\d/],\\n    ['GGGG-[W]WW-E', /\\\\d{4}-W\\\\d\\\\d-\\\\d/],\\n    ['GGGG-[W]WW', /\\\\d{4}-W\\\\d\\\\d/, false],\\n    ['YYYY-DDD', /\\\\d{4}-\\\\d{3}/],\\n    ['YYYY-MM', /\\\\d{4}-\\\\d\\\\d/, false],\\n    ['YYYYYYMMDD', /[+-]\\\\d{10}/],\\n    ['YYYYMMDD', /\\\\d{8}/],\\n    // YYYYMM is NOT allowed by the standard\\n    ['GGGG[W]WWE', /\\\\d{4}W\\\\d{3}/],\\n    ['GGGG[W]WW', /\\\\d{4}W\\\\d{2}/, false],\\n    ['YYYYDDD', /\\\\d{7}/]\\n];\\n\\n// iso time formats and regexes\\nvar isoTimes = [\\n    ['HH:mm:ss.SSSS', /\\\\d\\\\d:\\\\d\\\\d:\\\\d\\\\d\\\\.\\\\d+/],\\n    ['HH:mm:ss,SSSS', /\\\\d\\\\d:\\\\d\\\\d:\\\\d\\\\d,\\\\d+/],\\n    ['HH:mm:ss', /\\\\d\\\\d:\\\\d\\\\d:\\\\d\\\\d/],\\n    ['HH:mm', /\\\\d\\\\d:\\\\d\\\\d/],\\n    ['HHmmss.SSSS', /\\\\d\\\\d\\\\d\\\\d\\\\d\\\\d\\\\.\\\\d+/],\\n    ['HHmmss,SSSS', /\\\\d\\\\d\\\\d\\\\d\\\\d\\\\d,\\\\d+/],\\n    ['HHmmss', /\\\\d\\\\d\\\\d\\\\d\\\\d\\\\d/],\\n    ['HHmm', /\\\\d\\\\d\\\\d\\\\d/],\\n    ['HH', /\\\\d\\\\d/]\\n];\\n\\nvar aspNetJsonRegex = /^\\\\/?Date\\\\((\\\\-?\\\\d+)/i;\\n\\n// date from iso format\\nfunction configFromISO(config) {\\n    var i, l,\\n        string = config._i,\\n        match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\\n        allowTime, dateFormat, timeFormat, tzFormat;\\n\\n    if (match) {\\n        getParsingFlags(config).iso = true;\\n\\n        for (i = 0, l = isoDates.length; i < l; i++) {\\n            if (isoDates[i][1].exec(match[1])) {\\n                dateFormat = isoDates[i][0];\\n                allowTime = isoDates[i][2] !== false;\\n                break;\\n            }\\n        }\\n        if (dateFormat == null) {\\n            config._isValid = false;\\n            return;\\n        }\\n        if (match[3]) {\\n            for (i = 0, l = isoTimes.length; i < l; i++) {\\n                if (isoTimes[i][1].exec(match[3])) {\\n                    // match[2] should be 'T' or space\\n                    timeFormat = (match[2] || ' ') + isoTimes[i][0];\\n                    break;\\n                }\\n            }\\n            if (timeFormat == null) {\\n                config._isValid = false;\\n                return;\\n            }\\n        }\\n        if (!allowTime && timeFormat != null) {\\n            config._isValid = false;\\n            return;\\n        }\\n        if (match[4]) {\\n            if (tzRegex.exec(match[4])) {\\n                tzFormat = 'Z';\\n            } else {\\n                config._isValid = false;\\n                return;\\n            }\\n        }\\n        config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\\n        configFromStringAndFormat(config);\\n    } else {\\n        config._isValid = false;\\n    }\\n}\\n\\n// RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\\nvar basicRfcRegex = /^((?:Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\\\s)?(\\\\d?\\\\d\\\\s(?:Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\\\s(?:\\\\d\\\\d)?\\\\d\\\\d\\\\s)(\\\\d\\\\d:\\\\d\\\\d)(\\\\:\\\\d\\\\d)?(\\\\s(?:UT|GMT|[ECMP][SD]T|[A-IK-Za-ik-z]|[+-]\\\\d{4}))$/;\\n\\n// date and time from ref 2822 format\\nfunction configFromRFC2822(config) {\\n    var string, match, dayFormat,\\n        dateFormat, timeFormat, tzFormat;\\n    var timezones = {\\n        ' GMT': ' +0000',\\n        ' EDT': ' -0400',\\n        ' EST': ' -0500',\\n        ' CDT': ' -0500',\\n        ' CST': ' -0600',\\n        ' MDT': ' -0600',\\n        ' MST': ' -0700',\\n        ' PDT': ' -0700',\\n        ' PST': ' -0800'\\n    };\\n    var military = 'YXWVUTSRQPONZABCDEFGHIKLM';\\n    var timezone, timezoneIndex;\\n\\n    string = config._i\\n        .replace(/\\\\([^\\\\)]*\\\\)|[\\\\n\\\\t]/g, ' ') // Remove comments and folding whitespace\\n        .replace(/(\\\\s\\\\s+)/g, ' ') // Replace multiple-spaces with a single space\\n        .replace(/^\\\\s|\\\\s$/g, ''); // Remove leading and trailing spaces\\n    match = basicRfcRegex.exec(string);\\n\\n    if (match) {\\n        dayFormat = match[1] ? 'ddd' + ((match[1].length === 5) ? ', ' : ' ') : '';\\n        dateFormat = 'D MMM ' + ((match[2].length > 10) ? 'YYYY ' : 'YY ');\\n        timeFormat = 'HH:mm' + (match[4] ? ':ss' : '');\\n\\n        // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\\n        if (match[1]) { // day of week given\\n            var momentDate = new Date(match[2]);\\n            var momentDay = ['Sun','Mon','Tue','Wed','Thu','Fri','Sat'][momentDate.getDay()];\\n\\n            if (match[1].substr(0,3) !== momentDay) {\\n                getParsingFlags(config).weekdayMismatch = true;\\n                config._isValid = false;\\n                return;\\n            }\\n        }\\n\\n        switch (match[5].length) {\\n            case 2: // military\\n                if (timezoneIndex === 0) {\\n                    timezone = ' +0000';\\n                } else {\\n                    timezoneIndex = military.indexOf(match[5][1].toUpperCase()) - 12;\\n                    timezone = ((timezoneIndex < 0) ? ' -' : ' +') +\\n                        (('' + timezoneIndex).replace(/^-?/, '0')).match(/..$/)[0] + '00';\\n                }\\n                break;\\n            case 4: // Zone\\n                timezone = timezones[match[5]];\\n                break;\\n            default: // UT or +/-9999\\n                timezone = timezones[' GMT'];\\n        }\\n        match[5] = timezone;\\n        config._i = match.splice(1).join('');\\n        tzFormat = ' ZZ';\\n        config._f = dayFormat + dateFormat + timeFormat + tzFormat;\\n        configFromStringAndFormat(config);\\n        getParsingFlags(config).rfc2822 = true;\\n    } else {\\n        config._isValid = false;\\n    }\\n}\\n\\n// date from iso format or fallback\\nfunction configFromString(config) {\\n    var matched = aspNetJsonRegex.exec(config._i);\\n\\n    if (matched !== null) {\\n        config._d = new Date(+matched[1]);\\n        return;\\n    }\\n\\n    configFromISO(config);\\n    if (config._isValid === false) {\\n        delete config._isValid;\\n    } else {\\n        return;\\n    }\\n\\n    configFromRFC2822(config);\\n    if (config._isValid === false) {\\n        delete config._isValid;\\n    } else {\\n        return;\\n    }\\n\\n    // Final attempt, use Input Fallback\\n    hooks.createFromInputFallback(config);\\n}\\n\\nhooks.createFromInputFallback = deprecate(\\n    'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +\\n    'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +\\n    'discouraged and will be removed in an upcoming major release. Please refer to ' +\\n    'http://momentjs.com/guides/#/warnings/js-date/ for more info.',\\n    function (config) {\\n        config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\\n    }\\n);\\n\\n// Pick the first defined of two or three arguments.\\nfunction defaults(a, b, c) {\\n    if (a != null) {\\n        return a;\\n    }\\n    if (b != null) {\\n        return b;\\n    }\\n    return c;\\n}\\n\\nfunction currentDateArray(config) {\\n    // hooks is actually the exported moment object\\n    var nowValue = new Date(hooks.now());\\n    if (config._useUTC) {\\n        return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\\n    }\\n    return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\\n}\\n\\n// convert an array to a date.\\n// the array should mirror the parameters below\\n// note: all values past the year are optional and will default to the lowest possible value.\\n// [year, month, day , hour, minute, second, millisecond]\\nfunction configFromArray (config) {\\n    var i, date, input = [], currentDate, yearToUse;\\n\\n    if (config._d) {\\n        return;\\n    }\\n\\n    currentDate = currentDateArray(config);\\n\\n    //compute day of the year from weeks and weekdays\\n    if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\\n        dayOfYearFromWeekInfo(config);\\n    }\\n\\n    //if the day of the year is set, figure out what it is\\n    if (config._dayOfYear != null) {\\n        yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\\n\\n        if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\\n            getParsingFlags(config)._overflowDayOfYear = true;\\n        }\\n\\n        date = createUTCDate(yearToUse, 0, config._dayOfYear);\\n        config._a[MONTH] = date.getUTCMonth();\\n        config._a[DATE] = date.getUTCDate();\\n    }\\n\\n    // Default to current date.\\n    // * if no year, month, day of month are given, default to today\\n    // * if day of month is given, default month and year\\n    // * if month is given, default only year\\n    // * if year is given, don't default anything\\n    for (i = 0; i < 3 && config._a[i] == null; ++i) {\\n        config._a[i] = input[i] = currentDate[i];\\n    }\\n\\n    // Zero out whatever was not defaulted, including time\\n    for (; i < 7; i++) {\\n        config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];\\n    }\\n\\n    // Check for 24:00:00.000\\n    if (config._a[HOUR] === 24 &&\\n            config._a[MINUTE] === 0 &&\\n            config._a[SECOND] === 0 &&\\n            config._a[MILLISECOND] === 0) {\\n        config._nextDay = true;\\n        config._a[HOUR] = 0;\\n    }\\n\\n    config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\\n    // Apply timezone offset from input. The actual utcOffset can be changed\\n    // with parseZone.\\n    if (config._tzm != null) {\\n        config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\\n    }\\n\\n    if (config._nextDay) {\\n        config._a[HOUR] = 24;\\n    }\\n}\\n\\nfunction dayOfYearFromWeekInfo(config) {\\n    var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\\n\\n    w = config._w;\\n    if (w.GG != null || w.W != null || w.E != null) {\\n        dow = 1;\\n        doy = 4;\\n\\n        // TODO: We need to take the current isoWeekYear, but that depends on\\n        // how we interpret now (local, utc, fixed offset). So create\\n        // a now version of current config (take local/utc/offset flags, and\\n        // create now).\\n        weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\\n        week = defaults(w.W, 1);\\n        weekday = defaults(w.E, 1);\\n        if (weekday < 1 || weekday > 7) {\\n            weekdayOverflow = true;\\n        }\\n    } else {\\n        dow = config._locale._week.dow;\\n        doy = config._locale._week.doy;\\n\\n        var curWeek = weekOfYear(createLocal(), dow, doy);\\n\\n        weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);\\n\\n        // Default to current week.\\n        week = defaults(w.w, curWeek.week);\\n\\n        if (w.d != null) {\\n            // weekday -- low day numbers are considered next week\\n            weekday = w.d;\\n            if (weekday < 0 || weekday > 6) {\\n                weekdayOverflow = true;\\n            }\\n        } else if (w.e != null) {\\n            // local weekday -- counting starts from begining of week\\n            weekday = w.e + dow;\\n            if (w.e < 0 || w.e > 6) {\\n                weekdayOverflow = true;\\n            }\\n        } else {\\n            // default to begining of week\\n            weekday = dow;\\n        }\\n    }\\n    if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\\n        getParsingFlags(config)._overflowWeeks = true;\\n    } else if (weekdayOverflow != null) {\\n        getParsingFlags(config)._overflowWeekday = true;\\n    } else {\\n        temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\\n        config._a[YEAR] = temp.year;\\n        config._dayOfYear = temp.dayOfYear;\\n    }\\n}\\n\\n// constant that refers to the ISO standard\\nhooks.ISO_8601 = function () {};\\n\\n// constant that refers to the RFC 2822 form\\nhooks.RFC_2822 = function () {};\\n\\n// date from string and format string\\nfunction configFromStringAndFormat(config) {\\n    // TODO: Move this to another part of the creation flow to prevent circular deps\\n    if (config._f === hooks.ISO_8601) {\\n        configFromISO(config);\\n        return;\\n    }\\n    if (config._f === hooks.RFC_2822) {\\n        configFromRFC2822(config);\\n        return;\\n    }\\n    config._a = [];\\n    getParsingFlags(config).empty = true;\\n\\n    // This array is used to make a Date, either with `new Date` or `Date.UTC`\\n    var string = '' + config._i,\\n        i, parsedInput, tokens, token, skipped,\\n        stringLength = string.length,\\n        totalParsedInputLength = 0;\\n\\n    tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\\n\\n    for (i = 0; i < tokens.length; i++) {\\n        token = tokens[i];\\n        parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];\\n        // console.log('token', token, 'parsedInput', parsedInput,\\n        //         'regex', getParseRegexForToken(token, config));\\n        if (parsedInput) {\\n            skipped = string.substr(0, string.indexOf(parsedInput));\\n            if (skipped.length > 0) {\\n                getParsingFlags(config).unusedInput.push(skipped);\\n            }\\n            string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\\n            totalParsedInputLength += parsedInput.length;\\n        }\\n        // don't parse if it's not a known token\\n        if (formatTokenFunctions[token]) {\\n            if (parsedInput) {\\n                getParsingFlags(config).empty = false;\\n            }\\n            else {\\n                getParsingFlags(config).unusedTokens.push(token);\\n            }\\n            addTimeToArrayFromToken(token, parsedInput, config);\\n        }\\n        else if (config._strict && !parsedInput) {\\n            getParsingFlags(config).unusedTokens.push(token);\\n        }\\n    }\\n\\n    // add remaining unparsed input length to the string\\n    getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\\n    if (string.length > 0) {\\n        getParsingFlags(config).unusedInput.push(string);\\n    }\\n\\n    // clear _12h flag if hour is <= 12\\n    if (config._a[HOUR] <= 12 &&\\n        getParsingFlags(config).bigHour === true &&\\n        config._a[HOUR] > 0) {\\n        getParsingFlags(config).bigHour = undefined;\\n    }\\n\\n    getParsingFlags(config).parsedDateParts = config._a.slice(0);\\n    getParsingFlags(config).meridiem = config._meridiem;\\n    // handle meridiem\\n    config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\\n\\n    configFromArray(config);\\n    checkOverflow(config);\\n}\\n\\n\\nfunction meridiemFixWrap (locale, hour, meridiem) {\\n    var isPm;\\n\\n    if (meridiem == null) {\\n        // nothing to do\\n        return hour;\\n    }\\n    if (locale.meridiemHour != null) {\\n        return locale.meridiemHour(hour, meridiem);\\n    } else if (locale.isPM != null) {\\n        // Fallback\\n        isPm = locale.isPM(meridiem);\\n        if (isPm && hour < 12) {\\n            hour += 12;\\n        }\\n        if (!isPm && hour === 12) {\\n            hour = 0;\\n        }\\n        return hour;\\n    } else {\\n        // this is not supposed to happen\\n        return hour;\\n    }\\n}\\n\\n// date from string and array of format strings\\nfunction configFromStringAndArray(config) {\\n    var tempConfig,\\n        bestMoment,\\n\\n        scoreToBeat,\\n        i,\\n        currentScore;\\n\\n    if (config._f.length === 0) {\\n        getParsingFlags(config).invalidFormat = true;\\n        config._d = new Date(NaN);\\n        return;\\n    }\\n\\n    for (i = 0; i < config._f.length; i++) {\\n        currentScore = 0;\\n        tempConfig = copyConfig({}, config);\\n        if (config._useUTC != null) {\\n            tempConfig._useUTC = config._useUTC;\\n        }\\n        tempConfig._f = config._f[i];\\n        configFromStringAndFormat(tempConfig);\\n\\n        if (!isValid(tempConfig)) {\\n            continue;\\n        }\\n\\n        // if there is any input that was not parsed add a penalty for that format\\n        currentScore += getParsingFlags(tempConfig).charsLeftOver;\\n\\n        //or tokens\\n        currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\\n\\n        getParsingFlags(tempConfig).score = currentScore;\\n\\n        if (scoreToBeat == null || currentScore < scoreToBeat) {\\n            scoreToBeat = currentScore;\\n            bestMoment = tempConfig;\\n        }\\n    }\\n\\n    extend(config, bestMoment || tempConfig);\\n}\\n\\nfunction configFromObject(config) {\\n    if (config._d) {\\n        return;\\n    }\\n\\n    var i = normalizeObjectUnits(config._i);\\n    config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\\n        return obj && parseInt(obj, 10);\\n    });\\n\\n    configFromArray(config);\\n}\\n\\nfunction createFromConfig (config) {\\n    var res = new Moment(checkOverflow(prepareConfig(config)));\\n    if (res._nextDay) {\\n        // Adding is smart enough around DST\\n        res.add(1, 'd');\\n        res._nextDay = undefined;\\n    }\\n\\n    return res;\\n}\\n\\nfunction prepareConfig (config) {\\n    var input = config._i,\\n        format = config._f;\\n\\n    config._locale = config._locale || getLocale(config._l);\\n\\n    if (input === null || (format === undefined && input === '')) {\\n        return createInvalid({nullInput: true});\\n    }\\n\\n    if (typeof input === 'string') {\\n        config._i = input = config._locale.preparse(input);\\n    }\\n\\n    if (isMoment(input)) {\\n        return new Moment(checkOverflow(input));\\n    } else if (isDate(input)) {\\n        config._d = input;\\n    } else if (isArray(format)) {\\n        configFromStringAndArray(config);\\n    } else if (format) {\\n        configFromStringAndFormat(config);\\n    }  else {\\n        configFromInput(config);\\n    }\\n\\n    if (!isValid(config)) {\\n        config._d = null;\\n    }\\n\\n    return config;\\n}\\n\\nfunction configFromInput(config) {\\n    var input = config._i;\\n    if (isUndefined(input)) {\\n        config._d = new Date(hooks.now());\\n    } else if (isDate(input)) {\\n        config._d = new Date(input.valueOf());\\n    } else if (typeof input === 'string') {\\n        configFromString(config);\\n    } else if (isArray(input)) {\\n        config._a = map(input.slice(0), function (obj) {\\n            return parseInt(obj, 10);\\n        });\\n        configFromArray(config);\\n    } else if (isObject(input)) {\\n        configFromObject(config);\\n    } else if (isNumber(input)) {\\n        // from milliseconds\\n        config._d = new Date(input);\\n    } else {\\n        hooks.createFromInputFallback(config);\\n    }\\n}\\n\\nfunction createLocalOrUTC (input, format, locale, strict, isUTC) {\\n    var c = {};\\n\\n    if (locale === true || locale === false) {\\n        strict = locale;\\n        locale = undefined;\\n    }\\n\\n    if ((isObject(input) && isObjectEmpty(input)) ||\\n            (isArray(input) && input.length === 0)) {\\n        input = undefined;\\n    }\\n    // object construction must be done this way.\\n    // https://github.com/moment/moment/issues/1423\\n    c._isAMomentObject = true;\\n    c._useUTC = c._isUTC = isUTC;\\n    c._l = locale;\\n    c._i = input;\\n    c._f = format;\\n    c._strict = strict;\\n\\n    return createFromConfig(c);\\n}\\n\\nfunction createLocal (input, format, locale, strict) {\\n    return createLocalOrUTC(input, format, locale, strict, false);\\n}\\n\\nvar prototypeMin = deprecate(\\n    'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',\\n    function () {\\n        var other = createLocal.apply(null, arguments);\\n        if (this.isValid() && other.isValid()) {\\n            return other < this ? this : other;\\n        } else {\\n            return createInvalid();\\n        }\\n    }\\n);\\n\\nvar prototypeMax = deprecate(\\n    'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',\\n    function () {\\n        var other = createLocal.apply(null, arguments);\\n        if (this.isValid() && other.isValid()) {\\n            return other > this ? this : other;\\n        } else {\\n            return createInvalid();\\n        }\\n    }\\n);\\n\\n// Pick a moment m from moments so that m[fn](other) is true for all\\n// other. This relies on the function fn to be transitive.\\n//\\n// moments should either be an array of moment objects or an array, whose\\n// first element is an array of moment objects.\\nfunction pickBy(fn, moments) {\\n    var res, i;\\n    if (moments.length === 1 && isArray(moments[0])) {\\n        moments = moments[0];\\n    }\\n    if (!moments.length) {\\n        return createLocal();\\n    }\\n    res = moments[0];\\n    for (i = 1; i < moments.length; ++i) {\\n        if (!moments[i].isValid() || moments[i][fn](res)) {\\n            res = moments[i];\\n        }\\n    }\\n    return res;\\n}\\n\\n// TODO: Use [].sort instead?\\nfunction min () {\\n    var args = [].slice.call(arguments, 0);\\n\\n    return pickBy('isBefore', args);\\n}\\n\\nfunction max () {\\n    var args = [].slice.call(arguments, 0);\\n\\n    return pickBy('isAfter', args);\\n}\\n\\nvar now = function () {\\n    return Date.now ? Date.now() : +(new Date());\\n};\\n\\nvar ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\\n\\nfunction isDurationValid(m) {\\n    for (var key in m) {\\n        if (!(ordering.indexOf(key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\\n            return false;\\n        }\\n    }\\n\\n    var unitHasDecimal = false;\\n    for (var i = 0; i < ordering.length; ++i) {\\n        if (m[ordering[i]]) {\\n            if (unitHasDecimal) {\\n                return false; // only allow non-integers for smallest unit\\n            }\\n            if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\\n                unitHasDecimal = true;\\n            }\\n        }\\n    }\\n\\n    return true;\\n}\\n\\nfunction isValid$1() {\\n    return this._isValid;\\n}\\n\\nfunction createInvalid$1() {\\n    return createDuration(NaN);\\n}\\n\\nfunction Duration (duration) {\\n    var normalizedInput = normalizeObjectUnits(duration),\\n        years = normalizedInput.year || 0,\\n        quarters = normalizedInput.quarter || 0,\\n        months = normalizedInput.month || 0,\\n        weeks = normalizedInput.week || 0,\\n        days = normalizedInput.day || 0,\\n        hours = normalizedInput.hour || 0,\\n        minutes = normalizedInput.minute || 0,\\n        seconds = normalizedInput.second || 0,\\n        milliseconds = normalizedInput.millisecond || 0;\\n\\n    this._isValid = isDurationValid(normalizedInput);\\n\\n    // representation for dateAddRemove\\n    this._milliseconds = +milliseconds +\\n        seconds * 1e3 + // 1000\\n        minutes * 6e4 + // 1000 * 60\\n        hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\\n    // Because of dateAddRemove treats 24 hours as different from a\\n    // day when working around DST, we need to store them separately\\n    this._days = +days +\\n        weeks * 7;\\n    // It is impossible translate months into days without knowing\\n    // which months you are are talking about, so we have to store\\n    // it separately.\\n    this._months = +months +\\n        quarters * 3 +\\n        years * 12;\\n\\n    this._data = {};\\n\\n    this._locale = getLocale();\\n\\n    this._bubble();\\n}\\n\\nfunction isDuration (obj) {\\n    return obj instanceof Duration;\\n}\\n\\nfunction absRound (number) {\\n    if (number < 0) {\\n        return Math.round(-1 * number) * -1;\\n    } else {\\n        return Math.round(number);\\n    }\\n}\\n\\n// FORMATTING\\n\\nfunction offset (token, separator) {\\n    addFormatToken(token, 0, 0, function () {\\n        var offset = this.utcOffset();\\n        var sign = '+';\\n        if (offset < 0) {\\n            offset = -offset;\\n            sign = '-';\\n        }\\n        return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);\\n    });\\n}\\n\\noffset('Z', ':');\\noffset('ZZ', '');\\n\\n// PARSING\\n\\naddRegexToken('Z',  matchShortOffset);\\naddRegexToken('ZZ', matchShortOffset);\\naddParseToken(['Z', 'ZZ'], function (input, array, config) {\\n    config._useUTC = true;\\n    config._tzm = offsetFromString(matchShortOffset, input);\\n});\\n\\n// HELPERS\\n\\n// timezone chunker\\n// '+10:00' > ['10',  '00']\\n// '-1530'  > ['-15', '30']\\nvar chunkOffset = /([\\\\+\\\\-]|\\\\d\\\\d)/gi;\\n\\nfunction offsetFromString(matcher, string) {\\n    var matches = (string || '').match(matcher);\\n\\n    if (matches === null) {\\n        return null;\\n    }\\n\\n    var chunk   = matches[matches.length - 1] || [];\\n    var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];\\n    var minutes = +(parts[1] * 60) + toInt(parts[2]);\\n\\n    return minutes === 0 ?\\n      0 :\\n      parts[0] === '+' ? minutes : -minutes;\\n}\\n\\n// Return a moment from input, that is local/utc/zone equivalent to model.\\nfunction cloneWithOffset(input, model) {\\n    var res, diff;\\n    if (model._isUTC) {\\n        res = model.clone();\\n        diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf();\\n        // Use low-level api, because this fn is low-level api.\\n        res._d.setTime(res._d.valueOf() + diff);\\n        hooks.updateOffset(res, false);\\n        return res;\\n    } else {\\n        return createLocal(input).local();\\n    }\\n}\\n\\nfunction getDateOffset (m) {\\n    // On Firefox.24 Date#getTimezoneOffset returns a floating point.\\n    // https://github.com/moment/moment/pull/1871\\n    return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\\n}\\n\\n// HOOKS\\n\\n// This function will be called whenever a moment is mutated.\\n// It is intended to keep the offset in sync with the timezone.\\nhooks.updateOffset = function () {};\\n\\n// MOMENTS\\n\\n// keepLocalTime = true means only change the timezone, without\\n// affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\\n// 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\\n// +0200, so we adjust the time as needed, to be valid.\\n//\\n// Keeping the time actually adds/subtracts (one hour)\\n// from the actual represented time. That is why we call updateOffset\\n// a second time. In case it wants us to change the offset again\\n// _changeInProgress == true case, then we have to adjust, because\\n// there is no such time in the given timezone.\\nfunction getSetOffset (input, keepLocalTime, keepMinutes) {\\n    var offset = this._offset || 0,\\n        localAdjust;\\n    if (!this.isValid()) {\\n        return input != null ? this : NaN;\\n    }\\n    if (input != null) {\\n        if (typeof input === 'string') {\\n            input = offsetFromString(matchShortOffset, input);\\n            if (input === null) {\\n                return this;\\n            }\\n        } else if (Math.abs(input) < 16 && !keepMinutes) {\\n            input = input * 60;\\n        }\\n        if (!this._isUTC && keepLocalTime) {\\n            localAdjust = getDateOffset(this);\\n        }\\n        this._offset = input;\\n        this._isUTC = true;\\n        if (localAdjust != null) {\\n            this.add(localAdjust, 'm');\\n        }\\n        if (offset !== input) {\\n            if (!keepLocalTime || this._changeInProgress) {\\n                addSubtract(this, createDuration(input - offset, 'm'), 1, false);\\n            } else if (!this._changeInProgress) {\\n                this._changeInProgress = true;\\n                hooks.updateOffset(this, true);\\n                this._changeInProgress = null;\\n            }\\n        }\\n        return this;\\n    } else {\\n        return this._isUTC ? offset : getDateOffset(this);\\n    }\\n}\\n\\nfunction getSetZone (input, keepLocalTime) {\\n    if (input != null) {\\n        if (typeof input !== 'string') {\\n            input = -input;\\n        }\\n\\n        this.utcOffset(input, keepLocalTime);\\n\\n        return this;\\n    } else {\\n        return -this.utcOffset();\\n    }\\n}\\n\\nfunction setOffsetToUTC (keepLocalTime) {\\n    return this.utcOffset(0, keepLocalTime);\\n}\\n\\nfunction setOffsetToLocal (keepLocalTime) {\\n    if (this._isUTC) {\\n        this.utcOffset(0, keepLocalTime);\\n        this._isUTC = false;\\n\\n        if (keepLocalTime) {\\n            this.subtract(getDateOffset(this), 'm');\\n        }\\n    }\\n    return this;\\n}\\n\\nfunction setOffsetToParsedOffset () {\\n    if (this._tzm != null) {\\n        this.utcOffset(this._tzm, false, true);\\n    } else if (typeof this._i === 'string') {\\n        var tZone = offsetFromString(matchOffset, this._i);\\n        if (tZone != null) {\\n            this.utcOffset(tZone);\\n        }\\n        else {\\n            this.utcOffset(0, true);\\n        }\\n    }\\n    return this;\\n}\\n\\nfunction hasAlignedHourOffset (input) {\\n    if (!this.isValid()) {\\n        return false;\\n    }\\n    input = input ? createLocal(input).utcOffset() : 0;\\n\\n    return (this.utcOffset() - input) % 60 === 0;\\n}\\n\\nfunction isDaylightSavingTime () {\\n    return (\\n        this.utcOffset() > this.clone().month(0).utcOffset() ||\\n        this.utcOffset() > this.clone().month(5).utcOffset()\\n    );\\n}\\n\\nfunction isDaylightSavingTimeShifted () {\\n    if (!isUndefined(this._isDSTShifted)) {\\n        return this._isDSTShifted;\\n    }\\n\\n    var c = {};\\n\\n    copyConfig(c, this);\\n    c = prepareConfig(c);\\n\\n    if (c._a) {\\n        var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\\n        this._isDSTShifted = this.isValid() &&\\n            compareArrays(c._a, other.toArray()) > 0;\\n    } else {\\n        this._isDSTShifted = false;\\n    }\\n\\n    return this._isDSTShifted;\\n}\\n\\nfunction isLocal () {\\n    return this.isValid() ? !this._isUTC : false;\\n}\\n\\nfunction isUtcOffset () {\\n    return this.isValid() ? this._isUTC : false;\\n}\\n\\nfunction isUtc () {\\n    return this.isValid() ? this._isUTC && this._offset === 0 : false;\\n}\\n\\n// ASP.NET json date format regex\\nvar aspNetRegex = /^(\\\\-)?(?:(\\\\d*)[. ])?(\\\\d+)\\\\:(\\\\d+)(?:\\\\:(\\\\d+)(\\\\.\\\\d*)?)?$/;\\n\\n// from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\\n// somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\\n// and further modified to allow for strings containing both week and day\\nvar isoRegex = /^(-)?P(?:(-?[0-9,.]*)Y)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)W)?(?:(-?[0-9,.]*)D)?(?:T(?:(-?[0-9,.]*)H)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)S)?)?$/;\\n\\nfunction createDuration (input, key) {\\n    var duration = input,\\n        // matching against regexp is expensive, do it on demand\\n        match = null,\\n        sign,\\n        ret,\\n        diffRes;\\n\\n    if (isDuration(input)) {\\n        duration = {\\n            ms : input._milliseconds,\\n            d  : input._days,\\n            M  : input._months\\n        };\\n    } else if (isNumber(input)) {\\n        duration = {};\\n        if (key) {\\n            duration[key] = input;\\n        } else {\\n            duration.milliseconds = input;\\n        }\\n    } else if (!!(match = aspNetRegex.exec(input))) {\\n        sign = (match[1] === '-') ? -1 : 1;\\n        duration = {\\n            y  : 0,\\n            d  : toInt(match[DATE])                         * sign,\\n            h  : toInt(match[HOUR])                         * sign,\\n            m  : toInt(match[MINUTE])                       * sign,\\n            s  : toInt(match[SECOND])                       * sign,\\n            ms : toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\\n        };\\n    } else if (!!(match = isoRegex.exec(input))) {\\n        sign = (match[1] === '-') ? -1 : 1;\\n        duration = {\\n            y : parseIso(match[2], sign),\\n            M : parseIso(match[3], sign),\\n            w : parseIso(match[4], sign),\\n            d : parseIso(match[5], sign),\\n            h : parseIso(match[6], sign),\\n            m : parseIso(match[7], sign),\\n            s : parseIso(match[8], sign)\\n        };\\n    } else if (duration == null) {// checks for null or undefined\\n        duration = {};\\n    } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\\n        diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\\n\\n        duration = {};\\n        duration.ms = diffRes.milliseconds;\\n        duration.M = diffRes.months;\\n    }\\n\\n    ret = new Duration(duration);\\n\\n    if (isDuration(input) && hasOwnProp(input, '_locale')) {\\n        ret._locale = input._locale;\\n    }\\n\\n    return ret;\\n}\\n\\ncreateDuration.fn = Duration.prototype;\\ncreateDuration.invalid = createInvalid$1;\\n\\nfunction parseIso (inp, sign) {\\n    // We'd normally use ~~inp for this, but unfortunately it also\\n    // converts floats to ints.\\n    // inp may be undefined, so careful calling replace on it.\\n    var res = inp && parseFloat(inp.replace(',', '.'));\\n    // apply sign while we're at it\\n    return (isNaN(res) ? 0 : res) * sign;\\n}\\n\\nfunction positiveMomentsDifference(base, other) {\\n    var res = {milliseconds: 0, months: 0};\\n\\n    res.months = other.month() - base.month() +\\n        (other.year() - base.year()) * 12;\\n    if (base.clone().add(res.months, 'M').isAfter(other)) {\\n        --res.months;\\n    }\\n\\n    res.milliseconds = +other - +(base.clone().add(res.months, 'M'));\\n\\n    return res;\\n}\\n\\nfunction momentsDifference(base, other) {\\n    var res;\\n    if (!(base.isValid() && other.isValid())) {\\n        return {milliseconds: 0, months: 0};\\n    }\\n\\n    other = cloneWithOffset(other, base);\\n    if (base.isBefore(other)) {\\n        res = positiveMomentsDifference(base, other);\\n    } else {\\n        res = positiveMomentsDifference(other, base);\\n        res.milliseconds = -res.milliseconds;\\n        res.months = -res.months;\\n    }\\n\\n    return res;\\n}\\n\\n// TODO: remove 'name' arg after deprecation is removed\\nfunction createAdder(direction, name) {\\n    return function (val, period) {\\n        var dur, tmp;\\n        //invert the arguments, but complain about it\\n        if (period !== null && !isNaN(+period)) {\\n            deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' +\\n            'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\\n            tmp = val; val = period; period = tmp;\\n        }\\n\\n        val = typeof val === 'string' ? +val : val;\\n        dur = createDuration(val, period);\\n        addSubtract(this, dur, direction);\\n        return this;\\n    };\\n}\\n\\nfunction addSubtract (mom, duration, isAdding, updateOffset) {\\n    var milliseconds = duration._milliseconds,\\n        days = absRound(duration._days),\\n        months = absRound(duration._months);\\n\\n    if (!mom.isValid()) {\\n        // No op\\n        return;\\n    }\\n\\n    updateOffset = updateOffset == null ? true : updateOffset;\\n\\n    if (milliseconds) {\\n        mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\\n    }\\n    if (days) {\\n        set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\\n    }\\n    if (months) {\\n        setMonth(mom, get(mom, 'Month') + months * isAdding);\\n    }\\n    if (updateOffset) {\\n        hooks.updateOffset(mom, days || months);\\n    }\\n}\\n\\nvar add      = createAdder(1, 'add');\\nvar subtract = createAdder(-1, 'subtract');\\n\\nfunction getCalendarFormat(myMoment, now) {\\n    var diff = myMoment.diff(now, 'days', true);\\n    return diff < -6 ? 'sameElse' :\\n            diff < -1 ? 'lastWeek' :\\n            diff < 0 ? 'lastDay' :\\n            diff < 1 ? 'sameDay' :\\n            diff < 2 ? 'nextDay' :\\n            diff < 7 ? 'nextWeek' : 'sameElse';\\n}\\n\\nfunction calendar$1 (time, formats) {\\n    // We want to compare the start of today, vs this.\\n    // Getting start-of-today depends on whether we're local/utc/offset or not.\\n    var now = time || createLocal(),\\n        sod = cloneWithOffset(now, this).startOf('day'),\\n        format = hooks.calendarFormat(this, sod) || 'sameElse';\\n\\n    var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\\n\\n    return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\\n}\\n\\nfunction clone () {\\n    return new Moment(this);\\n}\\n\\nfunction isAfter (input, units) {\\n    var localInput = isMoment(input) ? input : createLocal(input);\\n    if (!(this.isValid() && localInput.isValid())) {\\n        return false;\\n    }\\n    units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\\n    if (units === 'millisecond') {\\n        return this.valueOf() > localInput.valueOf();\\n    } else {\\n        return localInput.valueOf() < this.clone().startOf(units).valueOf();\\n    }\\n}\\n\\nfunction isBefore (input, units) {\\n    var localInput = isMoment(input) ? input : createLocal(input);\\n    if (!(this.isValid() && localInput.isValid())) {\\n        return false;\\n    }\\n    units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\\n    if (units === 'millisecond') {\\n        return this.valueOf() < localInput.valueOf();\\n    } else {\\n        return this.clone().endOf(units).valueOf() < localInput.valueOf();\\n    }\\n}\\n\\nfunction isBetween (from, to, units, inclusivity) {\\n    inclusivity = inclusivity || '()';\\n    return (inclusivity[0] === '(' ? this.isAfter(from, units) : !this.isBefore(from, units)) &&\\n        (inclusivity[1] === ')' ? this.isBefore(to, units) : !this.isAfter(to, units));\\n}\\n\\nfunction isSame (input, units) {\\n    var localInput = isMoment(input) ? input : createLocal(input),\\n        inputMs;\\n    if (!(this.isValid() && localInput.isValid())) {\\n        return false;\\n    }\\n    units = normalizeUnits(units || 'millisecond');\\n    if (units === 'millisecond') {\\n        return this.valueOf() === localInput.valueOf();\\n    } else {\\n        inputMs = localInput.valueOf();\\n        return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\\n    }\\n}\\n\\nfunction isSameOrAfter (input, units) {\\n    return this.isSame(input, units) || this.isAfter(input,units);\\n}\\n\\nfunction isSameOrBefore (input, units) {\\n    return this.isSame(input, units) || this.isBefore(input,units);\\n}\\n\\nfunction diff (input, units, asFloat) {\\n    var that,\\n        zoneDelta,\\n        delta, output;\\n\\n    if (!this.isValid()) {\\n        return NaN;\\n    }\\n\\n    that = cloneWithOffset(input, this);\\n\\n    if (!that.isValid()) {\\n        return NaN;\\n    }\\n\\n    zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\\n\\n    units = normalizeUnits(units);\\n\\n    if (units === 'year' || units === 'month' || units === 'quarter') {\\n        output = monthDiff(this, that);\\n        if (units === 'quarter') {\\n            output = output / 3;\\n        } else if (units === 'year') {\\n            output = output / 12;\\n        }\\n    } else {\\n        delta = this - that;\\n        output = units === 'second' ? delta / 1e3 : // 1000\\n            units === 'minute' ? delta / 6e4 : // 1000 * 60\\n            units === 'hour' ? delta / 36e5 : // 1000 * 60 * 60\\n            units === 'day' ? (delta - zoneDelta) / 864e5 : // 1000 * 60 * 60 * 24, negate dst\\n            units === 'week' ? (delta - zoneDelta) / 6048e5 : // 1000 * 60 * 60 * 24 * 7, negate dst\\n            delta;\\n    }\\n    return asFloat ? output : absFloor(output);\\n}\\n\\nfunction monthDiff (a, b) {\\n    // difference in months\\n    var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),\\n        // b is in (anchor - 1 month, anchor + 1 month)\\n        anchor = a.clone().add(wholeMonthDiff, 'months'),\\n        anchor2, adjust;\\n\\n    if (b - anchor < 0) {\\n        anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\\n        // linear across the month\\n        adjust = (b - anchor) / (anchor - anchor2);\\n    } else {\\n        anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\\n        // linear across the month\\n        adjust = (b - anchor) / (anchor2 - anchor);\\n    }\\n\\n    //check for negative zero, return zero if negative zero\\n    return -(wholeMonthDiff + adjust) || 0;\\n}\\n\\nhooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\\nhooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\\n\\nfunction toString () {\\n    return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\\n}\\n\\nfunction toISOString() {\\n    if (!this.isValid()) {\\n        return null;\\n    }\\n    var m = this.clone().utc();\\n    if (m.year() < 0 || m.year() > 9999) {\\n        return formatMoment(m, 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\\n    }\\n    if (isFunction(Date.prototype.toISOString)) {\\n        // native implementation is ~50x faster, use it when we can\\n        return this.toDate().toISOString();\\n    }\\n    return formatMoment(m, 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\\n}\\n\\n/**\\n * Return a human readable representation of a moment that can\\n * also be evaluated to get a new moment which is the same\\n *\\n * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\\n */\\nfunction inspect () {\\n    if (!this.isValid()) {\\n        return 'moment.invalid(/* ' + this._i + ' */)';\\n    }\\n    var func = 'moment';\\n    var zone = '';\\n    if (!this.isLocal()) {\\n        func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\\n        zone = 'Z';\\n    }\\n    var prefix = '[' + func + '(\\\"]';\\n    var year = (0 <= this.year() && this.year() <= 9999) ? 'YYYY' : 'YYYYYY';\\n    var datetime = '-MM-DD[T]HH:mm:ss.SSS';\\n    var suffix = zone + '[\\\")]';\\n\\n    return this.format(prefix + year + datetime + suffix);\\n}\\n\\nfunction format (inputString) {\\n    if (!inputString) {\\n        inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\\n    }\\n    var output = formatMoment(this, inputString);\\n    return this.localeData().postformat(output);\\n}\\n\\nfunction from (time, withoutSuffix) {\\n    if (this.isValid() &&\\n            ((isMoment(time) && time.isValid()) ||\\n             createLocal(time).isValid())) {\\n        return createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);\\n    } else {\\n        return this.localeData().invalidDate();\\n    }\\n}\\n\\nfunction fromNow (withoutSuffix) {\\n    return this.from(createLocal(), withoutSuffix);\\n}\\n\\nfunction to (time, withoutSuffix) {\\n    if (this.isValid() &&\\n            ((isMoment(time) && time.isValid()) ||\\n             createLocal(time).isValid())) {\\n        return createDuration({from: this, to: time}).locale(this.locale()).humanize(!withoutSuffix);\\n    } else {\\n        return this.localeData().invalidDate();\\n    }\\n}\\n\\nfunction toNow (withoutSuffix) {\\n    return this.to(createLocal(), withoutSuffix);\\n}\\n\\n// If passed a locale key, it will set the locale for this\\n// instance.  Otherwise, it will return the locale configuration\\n// variables for this instance.\\nfunction locale (key) {\\n    var newLocaleData;\\n\\n    if (key === undefined) {\\n        return this._locale._abbr;\\n    } else {\\n        newLocaleData = getLocale(key);\\n        if (newLocaleData != null) {\\n            this._locale = newLocaleData;\\n        }\\n        return this;\\n    }\\n}\\n\\nvar lang = deprecate(\\n    'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',\\n    function (key) {\\n        if (key === undefined) {\\n            return this.localeData();\\n        } else {\\n            return this.locale(key);\\n        }\\n    }\\n);\\n\\nfunction localeData () {\\n    return this._locale;\\n}\\n\\nfunction startOf (units) {\\n    units = normalizeUnits(units);\\n    // the following switch intentionally omits break keywords\\n    // to utilize falling through the cases.\\n    switch (units) {\\n        case 'year':\\n            this.month(0);\\n            /* falls through */\\n        case 'quarter':\\n        case 'month':\\n            this.date(1);\\n            /* falls through */\\n        case 'week':\\n        case 'isoWeek':\\n        case 'day':\\n        case 'date':\\n            this.hours(0);\\n            /* falls through */\\n        case 'hour':\\n            this.minutes(0);\\n            /* falls through */\\n        case 'minute':\\n            this.seconds(0);\\n            /* falls through */\\n        case 'second':\\n            this.milliseconds(0);\\n    }\\n\\n    // weeks are a special case\\n    if (units === 'week') {\\n        this.weekday(0);\\n    }\\n    if (units === 'isoWeek') {\\n        this.isoWeekday(1);\\n    }\\n\\n    // quarters are also special\\n    if (units === 'quarter') {\\n        this.month(Math.floor(this.month() / 3) * 3);\\n    }\\n\\n    return this;\\n}\\n\\nfunction endOf (units) {\\n    units = normalizeUnits(units);\\n    if (units === undefined || units === 'millisecond') {\\n        return this;\\n    }\\n\\n    // 'date' is an alias for 'day', so it should be considered as such.\\n    if (units === 'date') {\\n        units = 'day';\\n    }\\n\\n    return this.startOf(units).add(1, (units === 'isoWeek' ? 'week' : units)).subtract(1, 'ms');\\n}\\n\\nfunction valueOf () {\\n    return this._d.valueOf() - ((this._offset || 0) * 60000);\\n}\\n\\nfunction unix () {\\n    return Math.floor(this.valueOf() / 1000);\\n}\\n\\nfunction toDate () {\\n    return new Date(this.valueOf());\\n}\\n\\nfunction toArray () {\\n    var m = this;\\n    return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\\n}\\n\\nfunction toObject () {\\n    var m = this;\\n    return {\\n        years: m.year(),\\n        months: m.month(),\\n        date: m.date(),\\n        hours: m.hours(),\\n        minutes: m.minutes(),\\n        seconds: m.seconds(),\\n        milliseconds: m.milliseconds()\\n    };\\n}\\n\\nfunction toJSON () {\\n    // new Date(NaN).toJSON() === null\\n    return this.isValid() ? this.toISOString() : null;\\n}\\n\\nfunction isValid$2 () {\\n    return isValid(this);\\n}\\n\\nfunction parsingFlags () {\\n    return extend({}, getParsingFlags(this));\\n}\\n\\nfunction invalidAt () {\\n    return getParsingFlags(this).overflow;\\n}\\n\\nfunction creationData() {\\n    return {\\n        input: this._i,\\n        format: this._f,\\n        locale: this._locale,\\n        isUTC: this._isUTC,\\n        strict: this._strict\\n    };\\n}\\n\\n// FORMATTING\\n\\naddFormatToken(0, ['gg', 2], 0, function () {\\n    return this.weekYear() % 100;\\n});\\n\\naddFormatToken(0, ['GG', 2], 0, function () {\\n    return this.isoWeekYear() % 100;\\n});\\n\\nfunction addWeekYearFormatToken (token, getter) {\\n    addFormatToken(0, [token, token.length], 0, getter);\\n}\\n\\naddWeekYearFormatToken('gggg',     'weekYear');\\naddWeekYearFormatToken('ggggg',    'weekYear');\\naddWeekYearFormatToken('GGGG',  'isoWeekYear');\\naddWeekYearFormatToken('GGGGG', 'isoWeekYear');\\n\\n// ALIASES\\n\\naddUnitAlias('weekYear', 'gg');\\naddUnitAlias('isoWeekYear', 'GG');\\n\\n// PRIORITY\\n\\naddUnitPriority('weekYear', 1);\\naddUnitPriority('isoWeekYear', 1);\\n\\n\\n// PARSING\\n\\naddRegexToken('G',      matchSigned);\\naddRegexToken('g',      matchSigned);\\naddRegexToken('GG',     match1to2, match2);\\naddRegexToken('gg',     match1to2, match2);\\naddRegexToken('GGGG',   match1to4, match4);\\naddRegexToken('gggg',   match1to4, match4);\\naddRegexToken('GGGGG',  match1to6, match6);\\naddRegexToken('ggggg',  match1to6, match6);\\n\\naddWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\\n    week[token.substr(0, 2)] = toInt(input);\\n});\\n\\naddWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\\n    week[token] = hooks.parseTwoDigitYear(input);\\n});\\n\\n// MOMENTS\\n\\nfunction getSetWeekYear (input) {\\n    return getSetWeekYearHelper.call(this,\\n            input,\\n            this.week(),\\n            this.weekday(),\\n            this.localeData()._week.dow,\\n            this.localeData()._week.doy);\\n}\\n\\nfunction getSetISOWeekYear (input) {\\n    return getSetWeekYearHelper.call(this,\\n            input, this.isoWeek(), this.isoWeekday(), 1, 4);\\n}\\n\\nfunction getISOWeeksInYear () {\\n    return weeksInYear(this.year(), 1, 4);\\n}\\n\\nfunction getWeeksInYear () {\\n    var weekInfo = this.localeData()._week;\\n    return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\\n}\\n\\nfunction getSetWeekYearHelper(input, week, weekday, dow, doy) {\\n    var weeksTarget;\\n    if (input == null) {\\n        return weekOfYear(this, dow, doy).year;\\n    } else {\\n        weeksTarget = weeksInYear(input, dow, doy);\\n        if (week > weeksTarget) {\\n            week = weeksTarget;\\n        }\\n        return setWeekAll.call(this, input, week, weekday, dow, doy);\\n    }\\n}\\n\\nfunction setWeekAll(weekYear, week, weekday, dow, doy) {\\n    var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\\n        date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\\n\\n    this.year(date.getUTCFullYear());\\n    this.month(date.getUTCMonth());\\n    this.date(date.getUTCDate());\\n    return this;\\n}\\n\\n// FORMATTING\\n\\naddFormatToken('Q', 0, 'Qo', 'quarter');\\n\\n// ALIASES\\n\\naddUnitAlias('quarter', 'Q');\\n\\n// PRIORITY\\n\\naddUnitPriority('quarter', 7);\\n\\n// PARSING\\n\\naddRegexToken('Q', match1);\\naddParseToken('Q', function (input, array) {\\n    array[MONTH] = (toInt(input) - 1) * 3;\\n});\\n\\n// MOMENTS\\n\\nfunction getSetQuarter (input) {\\n    return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\\n}\\n\\n// FORMATTING\\n\\naddFormatToken('D', ['DD', 2], 'Do', 'date');\\n\\n// ALIASES\\n\\naddUnitAlias('date', 'D');\\n\\n// PRIOROITY\\naddUnitPriority('date', 9);\\n\\n// PARSING\\n\\naddRegexToken('D',  match1to2);\\naddRegexToken('DD', match1to2, match2);\\naddRegexToken('Do', function (isStrict, locale) {\\n    // TODO: Remove \\\"ordinalParse\\\" fallback in next major release.\\n    return isStrict ?\\n      (locale._dayOfMonthOrdinalParse || locale._ordinalParse) :\\n      locale._dayOfMonthOrdinalParseLenient;\\n});\\n\\naddParseToken(['D', 'DD'], DATE);\\naddParseToken('Do', function (input, array) {\\n    array[DATE] = toInt(input.match(match1to2)[0], 10);\\n});\\n\\n// MOMENTS\\n\\nvar getSetDayOfMonth = makeGetSet('Date', true);\\n\\n// FORMATTING\\n\\naddFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');\\n\\n// ALIASES\\n\\naddUnitAlias('dayOfYear', 'DDD');\\n\\n// PRIORITY\\naddUnitPriority('dayOfYear', 4);\\n\\n// PARSING\\n\\naddRegexToken('DDD',  match1to3);\\naddRegexToken('DDDD', match3);\\naddParseToken(['DDD', 'DDDD'], function (input, array, config) {\\n    config._dayOfYear = toInt(input);\\n});\\n\\n// HELPERS\\n\\n// MOMENTS\\n\\nfunction getSetDayOfYear (input) {\\n    var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\\n    return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');\\n}\\n\\n// FORMATTING\\n\\naddFormatToken('m', ['mm', 2], 0, 'minute');\\n\\n// ALIASES\\n\\naddUnitAlias('minute', 'm');\\n\\n// PRIORITY\\n\\naddUnitPriority('minute', 14);\\n\\n// PARSING\\n\\naddRegexToken('m',  match1to2);\\naddRegexToken('mm', match1to2, match2);\\naddParseToken(['m', 'mm'], MINUTE);\\n\\n// MOMENTS\\n\\nvar getSetMinute = makeGetSet('Minutes', false);\\n\\n// FORMATTING\\n\\naddFormatToken('s', ['ss', 2], 0, 'second');\\n\\n// ALIASES\\n\\naddUnitAlias('second', 's');\\n\\n// PRIORITY\\n\\naddUnitPriority('second', 15);\\n\\n// PARSING\\n\\naddRegexToken('s',  match1to2);\\naddRegexToken('ss', match1to2, match2);\\naddParseToken(['s', 'ss'], SECOND);\\n\\n// MOMENTS\\n\\nvar getSetSecond = makeGetSet('Seconds', false);\\n\\n// FORMATTING\\n\\naddFormatToken('S', 0, 0, function () {\\n    return ~~(this.millisecond() / 100);\\n});\\n\\naddFormatToken(0, ['SS', 2], 0, function () {\\n    return ~~(this.millisecond() / 10);\\n});\\n\\naddFormatToken(0, ['SSS', 3], 0, 'millisecond');\\naddFormatToken(0, ['SSSS', 4], 0, function () {\\n    return this.millisecond() * 10;\\n});\\naddFormatToken(0, ['SSSSS', 5], 0, function () {\\n    return this.millisecond() * 100;\\n});\\naddFormatToken(0, ['SSSSSS', 6], 0, function () {\\n    return this.millisecond() * 1000;\\n});\\naddFormatToken(0, ['SSSSSSS', 7], 0, function () {\\n    return this.millisecond() * 10000;\\n});\\naddFormatToken(0, ['SSSSSSSS', 8], 0, function () {\\n    return this.millisecond() * 100000;\\n});\\naddFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\\n    return this.millisecond() * 1000000;\\n});\\n\\n\\n// ALIASES\\n\\naddUnitAlias('millisecond', 'ms');\\n\\n// PRIORITY\\n\\naddUnitPriority('millisecond', 16);\\n\\n// PARSING\\n\\naddRegexToken('S',    match1to3, match1);\\naddRegexToken('SS',   match1to3, match2);\\naddRegexToken('SSS',  match1to3, match3);\\n\\nvar token;\\nfor (token = 'SSSS'; token.length <= 9; token += 'S') {\\n    addRegexToken(token, matchUnsigned);\\n}\\n\\nfunction parseMs(input, array) {\\n    array[MILLISECOND] = toInt(('0.' + input) * 1000);\\n}\\n\\nfor (token = 'S'; token.length <= 9; token += 'S') {\\n    addParseToken(token, parseMs);\\n}\\n// MOMENTS\\n\\nvar getSetMillisecond = makeGetSet('Milliseconds', false);\\n\\n// FORMATTING\\n\\naddFormatToken('z',  0, 0, 'zoneAbbr');\\naddFormatToken('zz', 0, 0, 'zoneName');\\n\\n// MOMENTS\\n\\nfunction getZoneAbbr () {\\n    return this._isUTC ? 'UTC' : '';\\n}\\n\\nfunction getZoneName () {\\n    return this._isUTC ? 'Coordinated Universal Time' : '';\\n}\\n\\nvar proto = Moment.prototype;\\n\\nproto.add               = add;\\nproto.calendar          = calendar$1;\\nproto.clone             = clone;\\nproto.diff              = diff;\\nproto.endOf             = endOf;\\nproto.format            = format;\\nproto.from              = from;\\nproto.fromNow           = fromNow;\\nproto.to                = to;\\nproto.toNow             = toNow;\\nproto.get               = stringGet;\\nproto.invalidAt         = invalidAt;\\nproto.isAfter           = isAfter;\\nproto.isBefore          = isBefore;\\nproto.isBetween         = isBetween;\\nproto.isSame            = isSame;\\nproto.isSameOrAfter     = isSameOrAfter;\\nproto.isSameOrBefore    = isSameOrBefore;\\nproto.isValid           = isValid$2;\\nproto.lang              = lang;\\nproto.locale            = locale;\\nproto.localeData        = localeData;\\nproto.max               = prototypeMax;\\nproto.min               = prototypeMin;\\nproto.parsingFlags      = parsingFlags;\\nproto.set               = stringSet;\\nproto.startOf           = startOf;\\nproto.subtract          = subtract;\\nproto.toArray           = toArray;\\nproto.toObject          = toObject;\\nproto.toDate            = toDate;\\nproto.toISOString       = toISOString;\\nproto.inspect           = inspect;\\nproto.toJSON            = toJSON;\\nproto.toString          = toString;\\nproto.unix              = unix;\\nproto.valueOf           = valueOf;\\nproto.creationData      = creationData;\\n\\n// Year\\nproto.year       = getSetYear;\\nproto.isLeapYear = getIsLeapYear;\\n\\n// Week Year\\nproto.weekYear    = getSetWeekYear;\\nproto.isoWeekYear = getSetISOWeekYear;\\n\\n// Quarter\\nproto.quarter = proto.quarters = getSetQuarter;\\n\\n// Month\\nproto.month       = getSetMonth;\\nproto.daysInMonth = getDaysInMonth;\\n\\n// Week\\nproto.week           = proto.weeks        = getSetWeek;\\nproto.isoWeek        = proto.isoWeeks     = getSetISOWeek;\\nproto.weeksInYear    = getWeeksInYear;\\nproto.isoWeeksInYear = getISOWeeksInYear;\\n\\n// Day\\nproto.date       = getSetDayOfMonth;\\nproto.day        = proto.days             = getSetDayOfWeek;\\nproto.weekday    = getSetLocaleDayOfWeek;\\nproto.isoWeekday = getSetISODayOfWeek;\\nproto.dayOfYear  = getSetDayOfYear;\\n\\n// Hour\\nproto.hour = proto.hours = getSetHour;\\n\\n// Minute\\nproto.minute = proto.minutes = getSetMinute;\\n\\n// Second\\nproto.second = proto.seconds = getSetSecond;\\n\\n// Millisecond\\nproto.millisecond = proto.milliseconds = getSetMillisecond;\\n\\n// Offset\\nproto.utcOffset            = getSetOffset;\\nproto.utc                  = setOffsetToUTC;\\nproto.local                = setOffsetToLocal;\\nproto.parseZone            = setOffsetToParsedOffset;\\nproto.hasAlignedHourOffset = hasAlignedHourOffset;\\nproto.isDST                = isDaylightSavingTime;\\nproto.isLocal              = isLocal;\\nproto.isUtcOffset          = isUtcOffset;\\nproto.isUtc                = isUtc;\\nproto.isUTC                = isUtc;\\n\\n// Timezone\\nproto.zoneAbbr = getZoneAbbr;\\nproto.zoneName = getZoneName;\\n\\n// Deprecations\\nproto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\\nproto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\\nproto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);\\nproto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\\nproto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\\n\\nfunction createUnix (input) {\\n    return createLocal(input * 1000);\\n}\\n\\nfunction createInZone () {\\n    return createLocal.apply(null, arguments).parseZone();\\n}\\n\\nfunction preParsePostFormat (string) {\\n    return string;\\n}\\n\\nvar proto$1 = Locale.prototype;\\n\\nproto$1.calendar        = calendar;\\nproto$1.longDateFormat  = longDateFormat;\\nproto$1.invalidDate     = invalidDate;\\nproto$1.ordinal         = ordinal;\\nproto$1.preparse        = preParsePostFormat;\\nproto$1.postformat      = preParsePostFormat;\\nproto$1.relativeTime    = relativeTime;\\nproto$1.pastFuture      = pastFuture;\\nproto$1.set             = set;\\n\\n// Month\\nproto$1.months            =        localeMonths;\\nproto$1.monthsShort       =        localeMonthsShort;\\nproto$1.monthsParse       =        localeMonthsParse;\\nproto$1.monthsRegex       = monthsRegex;\\nproto$1.monthsShortRegex  = monthsShortRegex;\\n\\n// Week\\nproto$1.week = localeWeek;\\nproto$1.firstDayOfYear = localeFirstDayOfYear;\\nproto$1.firstDayOfWeek = localeFirstDayOfWeek;\\n\\n// Day of Week\\nproto$1.weekdays       =        localeWeekdays;\\nproto$1.weekdaysMin    =        localeWeekdaysMin;\\nproto$1.weekdaysShort  =        localeWeekdaysShort;\\nproto$1.weekdaysParse  =        localeWeekdaysParse;\\n\\nproto$1.weekdaysRegex       =        weekdaysRegex;\\nproto$1.weekdaysShortRegex  =        weekdaysShortRegex;\\nproto$1.weekdaysMinRegex    =        weekdaysMinRegex;\\n\\n// Hours\\nproto$1.isPM = localeIsPM;\\nproto$1.meridiem = localeMeridiem;\\n\\nfunction get$1 (format, index, field, setter) {\\n    var locale = getLocale();\\n    var utc = createUTC().set(setter, index);\\n    return locale[field](utc, format);\\n}\\n\\nfunction listMonthsImpl (format, index, field) {\\n    if (isNumber(format)) {\\n        index = format;\\n        format = undefined;\\n    }\\n\\n    format = format || '';\\n\\n    if (index != null) {\\n        return get$1(format, index, field, 'month');\\n    }\\n\\n    var i;\\n    var out = [];\\n    for (i = 0; i < 12; i++) {\\n        out[i] = get$1(format, i, field, 'month');\\n    }\\n    return out;\\n}\\n\\n// ()\\n// (5)\\n// (fmt, 5)\\n// (fmt)\\n// (true)\\n// (true, 5)\\n// (true, fmt, 5)\\n// (true, fmt)\\nfunction listWeekdaysImpl (localeSorted, format, index, field) {\\n    if (typeof localeSorted === 'boolean') {\\n        if (isNumber(format)) {\\n            index = format;\\n            format = undefined;\\n        }\\n\\n        format = format || '';\\n    } else {\\n        format = localeSorted;\\n        index = format;\\n        localeSorted = false;\\n\\n        if (isNumber(format)) {\\n            index = format;\\n            format = undefined;\\n        }\\n\\n        format = format || '';\\n    }\\n\\n    var locale = getLocale(),\\n        shift = localeSorted ? locale._week.dow : 0;\\n\\n    if (index != null) {\\n        return get$1(format, (index + shift) % 7, field, 'day');\\n    }\\n\\n    var i;\\n    var out = [];\\n    for (i = 0; i < 7; i++) {\\n        out[i] = get$1(format, (i + shift) % 7, field, 'day');\\n    }\\n    return out;\\n}\\n\\nfunction listMonths (format, index) {\\n    return listMonthsImpl(format, index, 'months');\\n}\\n\\nfunction listMonthsShort (format, index) {\\n    return listMonthsImpl(format, index, 'monthsShort');\\n}\\n\\nfunction listWeekdays (localeSorted, format, index) {\\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\\n}\\n\\nfunction listWeekdaysShort (localeSorted, format, index) {\\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\\n}\\n\\nfunction listWeekdaysMin (localeSorted, format, index) {\\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\\n}\\n\\ngetSetGlobalLocale('en', {\\n    dayOfMonthOrdinalParse: /\\\\d{1,2}(th|st|nd|rd)/,\\n    ordinal : function (number) {\\n        var b = number % 10,\\n            output = (toInt(number % 100 / 10) === 1) ? 'th' :\\n            (b === 1) ? 'st' :\\n            (b === 2) ? 'nd' :\\n            (b === 3) ? 'rd' : 'th';\\n        return number + output;\\n    }\\n});\\n\\n// Side effect imports\\nhooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\\nhooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\\n\\nvar mathAbs = Math.abs;\\n\\nfunction abs () {\\n    var data           = this._data;\\n\\n    this._milliseconds = mathAbs(this._milliseconds);\\n    this._days         = mathAbs(this._days);\\n    this._months       = mathAbs(this._months);\\n\\n    data.milliseconds  = mathAbs(data.milliseconds);\\n    data.seconds       = mathAbs(data.seconds);\\n    data.minutes       = mathAbs(data.minutes);\\n    data.hours         = mathAbs(data.hours);\\n    data.months        = mathAbs(data.months);\\n    data.years         = mathAbs(data.years);\\n\\n    return this;\\n}\\n\\nfunction addSubtract$1 (duration, input, value, direction) {\\n    var other = createDuration(input, value);\\n\\n    duration._milliseconds += direction * other._milliseconds;\\n    duration._days         += direction * other._days;\\n    duration._months       += direction * other._months;\\n\\n    return duration._bubble();\\n}\\n\\n// supports only 2.0-style add(1, 's') or add(duration)\\nfunction add$1 (input, value) {\\n    return addSubtract$1(this, input, value, 1);\\n}\\n\\n// supports only 2.0-style subtract(1, 's') or subtract(duration)\\nfunction subtract$1 (input, value) {\\n    return addSubtract$1(this, input, value, -1);\\n}\\n\\nfunction absCeil (number) {\\n    if (number < 0) {\\n        return Math.floor(number);\\n    } else {\\n        return Math.ceil(number);\\n    }\\n}\\n\\nfunction bubble () {\\n    var milliseconds = this._milliseconds;\\n    var days         = this._days;\\n    var months       = this._months;\\n    var data         = this._data;\\n    var seconds, minutes, hours, years, monthsFromDays;\\n\\n    // if we have a mix of positive and negative values, bubble down first\\n    // check: https://github.com/moment/moment/issues/2166\\n    if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||\\n            (milliseconds <= 0 && days <= 0 && months <= 0))) {\\n        milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\\n        days = 0;\\n        months = 0;\\n    }\\n\\n    // The following code bubbles up values, see the tests for\\n    // examples of what that means.\\n    data.milliseconds = milliseconds % 1000;\\n\\n    seconds           = absFloor(milliseconds / 1000);\\n    data.seconds      = seconds % 60;\\n\\n    minutes           = absFloor(seconds / 60);\\n    data.minutes      = minutes % 60;\\n\\n    hours             = absFloor(minutes / 60);\\n    data.hours        = hours % 24;\\n\\n    days += absFloor(hours / 24);\\n\\n    // convert days to months\\n    monthsFromDays = absFloor(daysToMonths(days));\\n    months += monthsFromDays;\\n    days -= absCeil(monthsToDays(monthsFromDays));\\n\\n    // 12 months -> 1 year\\n    years = absFloor(months / 12);\\n    months %= 12;\\n\\n    data.days   = days;\\n    data.months = months;\\n    data.years  = years;\\n\\n    return this;\\n}\\n\\nfunction daysToMonths (days) {\\n    // 400 years have 146097 days (taking into account leap year rules)\\n    // 400 years have 12 months === 4800\\n    return days * 4800 / 146097;\\n}\\n\\nfunction monthsToDays (months) {\\n    // the reverse of daysToMonths\\n    return months * 146097 / 4800;\\n}\\n\\nfunction as (units) {\\n    if (!this.isValid()) {\\n        return NaN;\\n    }\\n    var days;\\n    var months;\\n    var milliseconds = this._milliseconds;\\n\\n    units = normalizeUnits(units);\\n\\n    if (units === 'month' || units === 'year') {\\n        days   = this._days   + milliseconds / 864e5;\\n        months = this._months + daysToMonths(days);\\n        return units === 'month' ? months : months / 12;\\n    } else {\\n        // handle milliseconds separately because of floating point math errors (issue #1867)\\n        days = this._days + Math.round(monthsToDays(this._months));\\n        switch (units) {\\n            case 'week'   : return days / 7     + milliseconds / 6048e5;\\n            case 'day'    : return days         + milliseconds / 864e5;\\n            case 'hour'   : return days * 24    + milliseconds / 36e5;\\n            case 'minute' : return days * 1440  + milliseconds / 6e4;\\n            case 'second' : return days * 86400 + milliseconds / 1000;\\n            // Math.floor prevents floating point math errors here\\n            case 'millisecond': return Math.floor(days * 864e5) + milliseconds;\\n            default: throw new Error('Unknown unit ' + units);\\n        }\\n    }\\n}\\n\\n// TODO: Use this.as('ms')?\\nfunction valueOf$1 () {\\n    if (!this.isValid()) {\\n        return NaN;\\n    }\\n    return (\\n        this._milliseconds +\\n        this._days * 864e5 +\\n        (this._months % 12) * 2592e6 +\\n        toInt(this._months / 12) * 31536e6\\n    );\\n}\\n\\nfunction makeAs (alias) {\\n    return function () {\\n        return this.as(alias);\\n    };\\n}\\n\\nvar asMilliseconds = makeAs('ms');\\nvar asSeconds      = makeAs('s');\\nvar asMinutes      = makeAs('m');\\nvar asHours        = makeAs('h');\\nvar asDays         = makeAs('d');\\nvar asWeeks        = makeAs('w');\\nvar asMonths       = makeAs('M');\\nvar asYears        = makeAs('y');\\n\\nfunction get$2 (units) {\\n    units = normalizeUnits(units);\\n    return this.isValid() ? this[units + 's']() : NaN;\\n}\\n\\nfunction makeGetter(name) {\\n    return function () {\\n        return this.isValid() ? this._data[name] : NaN;\\n    };\\n}\\n\\nvar milliseconds = makeGetter('milliseconds');\\nvar seconds      = makeGetter('seconds');\\nvar minutes      = makeGetter('minutes');\\nvar hours        = makeGetter('hours');\\nvar days         = makeGetter('days');\\nvar months       = makeGetter('months');\\nvar years        = makeGetter('years');\\n\\nfunction weeks () {\\n    return absFloor(this.days() / 7);\\n}\\n\\nvar round = Math.round;\\nvar thresholds = {\\n    ss: 44,         // a few seconds to seconds\\n    s : 45,         // seconds to minute\\n    m : 45,         // minutes to hour\\n    h : 22,         // hours to day\\n    d : 26,         // days to month\\n    M : 11          // months to year\\n};\\n\\n// helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\\nfunction substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\\n    return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\\n}\\n\\nfunction relativeTime$1 (posNegDuration, withoutSuffix, locale) {\\n    var duration = createDuration(posNegDuration).abs();\\n    var seconds  = round(duration.as('s'));\\n    var minutes  = round(duration.as('m'));\\n    var hours    = round(duration.as('h'));\\n    var days     = round(duration.as('d'));\\n    var months   = round(duration.as('M'));\\n    var years    = round(duration.as('y'));\\n\\n    var a = seconds <= thresholds.ss && ['s', seconds]  ||\\n            seconds < thresholds.s   && ['ss', seconds] ||\\n            minutes <= 1             && ['m']           ||\\n            minutes < thresholds.m   && ['mm', minutes] ||\\n            hours   <= 1             && ['h']           ||\\n            hours   < thresholds.h   && ['hh', hours]   ||\\n            days    <= 1             && ['d']           ||\\n            days    < thresholds.d   && ['dd', days]    ||\\n            months  <= 1             && ['M']           ||\\n            months  < thresholds.M   && ['MM', months]  ||\\n            years   <= 1             && ['y']           || ['yy', years];\\n\\n    a[2] = withoutSuffix;\\n    a[3] = +posNegDuration > 0;\\n    a[4] = locale;\\n    return substituteTimeAgo.apply(null, a);\\n}\\n\\n// This function allows you to set the rounding function for relative time strings\\nfunction getSetRelativeTimeRounding (roundingFunction) {\\n    if (roundingFunction === undefined) {\\n        return round;\\n    }\\n    if (typeof(roundingFunction) === 'function') {\\n        round = roundingFunction;\\n        return true;\\n    }\\n    return false;\\n}\\n\\n// This function allows you to set a threshold for relative time strings\\nfunction getSetRelativeTimeThreshold (threshold, limit) {\\n    if (thresholds[threshold] === undefined) {\\n        return false;\\n    }\\n    if (limit === undefined) {\\n        return thresholds[threshold];\\n    }\\n    thresholds[threshold] = limit;\\n    if (threshold === 's') {\\n        thresholds.ss = limit - 1;\\n    }\\n    return true;\\n}\\n\\nfunction humanize (withSuffix) {\\n    if (!this.isValid()) {\\n        return this.localeData().invalidDate();\\n    }\\n\\n    var locale = this.localeData();\\n    var output = relativeTime$1(this, !withSuffix, locale);\\n\\n    if (withSuffix) {\\n        output = locale.pastFuture(+this, output);\\n    }\\n\\n    return locale.postformat(output);\\n}\\n\\nvar abs$1 = Math.abs;\\n\\nfunction toISOString$1() {\\n    // for ISO strings we do not use the normal bubbling rules:\\n    //  * milliseconds bubble up until they become hours\\n    //  * days do not bubble at all\\n    //  * months bubble up until they become years\\n    // This is because there is no context-free conversion between hours and days\\n    // (think of clock changes)\\n    // and also not between days and months (28-31 days per month)\\n    if (!this.isValid()) {\\n        return this.localeData().invalidDate();\\n    }\\n\\n    var seconds = abs$1(this._milliseconds) / 1000;\\n    var days         = abs$1(this._days);\\n    var months       = abs$1(this._months);\\n    var minutes, hours, years;\\n\\n    // 3600 seconds -> 60 minutes -> 1 hour\\n    minutes           = absFloor(seconds / 60);\\n    hours             = absFloor(minutes / 60);\\n    seconds %= 60;\\n    minutes %= 60;\\n\\n    // 12 months -> 1 year\\n    years  = absFloor(months / 12);\\n    months %= 12;\\n\\n\\n    // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\\n    var Y = years;\\n    var M = months;\\n    var D = days;\\n    var h = hours;\\n    var m = minutes;\\n    var s = seconds;\\n    var total = this.asSeconds();\\n\\n    if (!total) {\\n        // this is the same as C#'s (Noda) and python (isodate)...\\n        // but not other JS (goog.date)\\n        return 'P0D';\\n    }\\n\\n    return (total < 0 ? '-' : '') +\\n        'P' +\\n        (Y ? Y + 'Y' : '') +\\n        (M ? M + 'M' : '') +\\n        (D ? D + 'D' : '') +\\n        ((h || m || s) ? 'T' : '') +\\n        (h ? h + 'H' : '') +\\n        (m ? m + 'M' : '') +\\n        (s ? s + 'S' : '');\\n}\\n\\nvar proto$2 = Duration.prototype;\\n\\nproto$2.isValid        = isValid$1;\\nproto$2.abs            = abs;\\nproto$2.add            = add$1;\\nproto$2.subtract       = subtract$1;\\nproto$2.as             = as;\\nproto$2.asMilliseconds = asMilliseconds;\\nproto$2.asSeconds      = asSeconds;\\nproto$2.asMinutes      = asMinutes;\\nproto$2.asHours        = asHours;\\nproto$2.asDays         = asDays;\\nproto$2.asWeeks        = asWeeks;\\nproto$2.asMonths       = asMonths;\\nproto$2.asYears        = asYears;\\nproto$2.valueOf        = valueOf$1;\\nproto$2._bubble        = bubble;\\nproto$2.get            = get$2;\\nproto$2.milliseconds   = milliseconds;\\nproto$2.seconds        = seconds;\\nproto$2.minutes        = minutes;\\nproto$2.hours          = hours;\\nproto$2.days           = days;\\nproto$2.weeks          = weeks;\\nproto$2.months         = months;\\nproto$2.years          = years;\\nproto$2.humanize       = humanize;\\nproto$2.toISOString    = toISOString$1;\\nproto$2.toString       = toISOString$1;\\nproto$2.toJSON         = toISOString$1;\\nproto$2.locale         = locale;\\nproto$2.localeData     = localeData;\\n\\n// Deprecations\\nproto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\\nproto$2.lang = lang;\\n\\n// Side effect imports\\n\\n// FORMATTING\\n\\naddFormatToken('X', 0, 0, 'unix');\\naddFormatToken('x', 0, 0, 'valueOf');\\n\\n// PARSING\\n\\naddRegexToken('x', matchSigned);\\naddRegexToken('X', matchTimestamp);\\naddParseToken('X', function (input, array, config) {\\n    config._d = new Date(parseFloat(input, 10) * 1000);\\n});\\naddParseToken('x', function (input, array, config) {\\n    config._d = new Date(toInt(input));\\n});\\n\\n// Side effect imports\\n\\n\\nhooks.version = '2.18.1';\\n\\nsetHookCallback(createLocal);\\n\\nhooks.fn                    = proto;\\nhooks.min                   = min;\\nhooks.max                   = max;\\nhooks.now                   = now;\\nhooks.utc                   = createUTC;\\nhooks.unix                  = createUnix;\\nhooks.months                = listMonths;\\nhooks.isDate                = isDate;\\nhooks.locale                = getSetGlobalLocale;\\nhooks.invalid               = createInvalid;\\nhooks.duration              = createDuration;\\nhooks.isMoment              = isMoment;\\nhooks.weekdays              = listWeekdays;\\nhooks.parseZone             = createInZone;\\nhooks.localeData            = getLocale;\\nhooks.isDuration            = isDuration;\\nhooks.monthsShort           = listMonthsShort;\\nhooks.weekdaysMin           = listWeekdaysMin;\\nhooks.defineLocale          = defineLocale;\\nhooks.updateLocale          = updateLocale;\\nhooks.locales               = listLocales;\\nhooks.weekdaysShort         = listWeekdaysShort;\\nhooks.normalizeUnits        = normalizeUnits;\\nhooks.relativeTimeRounding = getSetRelativeTimeRounding;\\nhooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\\nhooks.calendarFormat        = getCalendarFormat;\\nhooks.prototype             = proto;\\n\\nreturn hooks;\\n\\n})));\\n\\n},{}],7:[function(require,module,exports){\\n/**\\n * @namespace Chart\\n */\\nvar Chart = require(29)();\\n\\nChart.helpers = require(45);\\n\\n// @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\\nrequire(27)(Chart);\\n\\nChart.defaults = require(25);\\nChart.Element = require(26);\\nChart.elements = require(40);\\nChart.Interaction = require(28);\\nChart.platform = require(48);\\n\\nrequire(31)(Chart);\\nrequire(22)(Chart);\\nrequire(23)(Chart);\\nrequire(24)(Chart);\\nrequire(30)(Chart);\\nrequire(33)(Chart);\\nrequire(32)(Chart);\\nrequire(35)(Chart);\\n\\nrequire(54)(Chart);\\nrequire(52)(Chart);\\nrequire(53)(Chart);\\nrequire(55)(Chart);\\nrequire(56)(Chart);\\nrequire(57)(Chart);\\n\\n// Controllers must be loaded after elements\\n// See Chart.core.datasetController.dataElementType\\nrequire(15)(Chart);\\nrequire(16)(Chart);\\nrequire(17)(Chart);\\nrequire(18)(Chart);\\nrequire(19)(Chart);\\nrequire(20)(Chart);\\nrequire(21)(Chart);\\n\\nrequire(8)(Chart);\\nrequire(9)(Chart);\\nrequire(10)(Chart);\\nrequire(11)(Chart);\\nrequire(12)(Chart);\\nrequire(13)(Chart);\\nrequire(14)(Chart);\\n\\n// Loading built-it plugins\\nvar plugins = [];\\n\\nplugins.push(\\n\\trequire(49)(Chart),\\n\\trequire(50)(Chart),\\n\\trequire(51)(Chart)\\n);\\n\\nChart.plugins.register(plugins);\\n\\nChart.platform.initialize();\\n\\nmodule.exports = Chart;\\nif (typeof window !== 'undefined') {\\n\\twindow.Chart = Chart;\\n}\\n\\n// DEPRECATIONS\\n\\n/**\\n * Provided for backward compatibility, use Chart.helpers.canvas instead.\\n * @namespace Chart.canvasHelpers\\n * @deprecated since version 2.6.0\\n * @todo remove at version 3\\n * @private\\n */\\nChart.canvasHelpers = Chart.helpers.canvas;\\n\\n},{\\\"10\\\":10,\\\"11\\\":11,\\\"12\\\":12,\\\"13\\\":13,\\\"14\\\":14,\\\"15\\\":15,\\\"16\\\":16,\\\"17\\\":17,\\\"18\\\":18,\\\"19\\\":19,\\\"20\\\":20,\\\"21\\\":21,\\\"22\\\":22,\\\"23\\\":23,\\\"24\\\":24,\\\"25\\\":25,\\\"26\\\":26,\\\"27\\\":27,\\\"28\\\":28,\\\"29\\\":29,\\\"30\\\":30,\\\"31\\\":31,\\\"32\\\":32,\\\"33\\\":33,\\\"35\\\":35,\\\"40\\\":40,\\\"45\\\":45,\\\"48\\\":48,\\\"49\\\":49,\\\"50\\\":50,\\\"51\\\":51,\\\"52\\\":52,\\\"53\\\":53,\\\"54\\\":54,\\\"55\\\":55,\\\"56\\\":56,\\\"57\\\":57,\\\"8\\\":8,\\\"9\\\":9}],8:[function(require,module,exports){\\n'use strict';\\n\\nmodule.exports = function(Chart) {\\n\\n\\tChart.Bar = function(context, config) {\\n\\t\\tconfig.type = 'bar';\\n\\n\\t\\treturn new Chart(context, config);\\n\\t};\\n\\n};\\n\\n},{}],9:[function(require,module,exports){\\n'use strict';\\n\\nmodule.exports = function(Chart) {\\n\\n\\tChart.Bubble = function(context, config) {\\n\\t\\tconfig.type = 'bubble';\\n\\t\\treturn new Chart(context, config);\\n\\t};\\n\\n};\\n\\n},{}],10:[function(require,module,exports){\\n'use strict';\\n\\nmodule.exports = function(Chart) {\\n\\n\\tChart.Doughnut = function(context, config) {\\n\\t\\tconfig.type = 'doughnut';\\n\\n\\t\\treturn new Chart(context, config);\\n\\t};\\n\\n};\\n\\n},{}],11:[function(require,module,exports){\\n'use strict';\\n\\nmodule.exports = function(Chart) {\\n\\n\\tChart.Line = function(context, config) {\\n\\t\\tconfig.type = 'line';\\n\\n\\t\\treturn new Chart(context, config);\\n\\t};\\n\\n};\\n\\n},{}],12:[function(require,module,exports){\\n'use strict';\\n\\nmodule.exports = function(Chart) {\\n\\n\\tChart.PolarArea = function(context, config) {\\n\\t\\tconfig.type = 'polarArea';\\n\\n\\t\\treturn new Chart(context, config);\\n\\t};\\n\\n};\\n\\n},{}],13:[function(require,module,exports){\\n'use strict';\\n\\nmodule.exports = function(Chart) {\\n\\n\\tChart.Radar = function(context, config) {\\n\\t\\tconfig.type = 'radar';\\n\\n\\t\\treturn new Chart(context, config);\\n\\t};\\n\\n};\\n\\n},{}],14:[function(require,module,exports){\\n'use strict';\\n\\nmodule.exports = function(Chart) {\\n\\tChart.Scatter = function(context, config) {\\n\\t\\tconfig.type = 'scatter';\\n\\t\\treturn new Chart(context, config);\\n\\t};\\n};\\n\\n},{}],15:[function(require,module,exports){\\n'use strict';\\n\\nvar defaults = require(25);\\nvar elements = require(40);\\nvar helpers = require(45);\\n\\ndefaults._set('bar', {\\n\\thover: {\\n\\t\\tmode: 'label'\\n\\t},\\n\\n\\tscales: {\\n\\t\\txAxes: [{\\n\\t\\t\\ttype: 'category',\\n\\n\\t\\t\\t// Specific to Bar Controller\\n\\t\\t\\tcategoryPercentage: 0.8,\\n\\t\\t\\tbarPercentage: 0.9,\\n\\n\\t\\t\\t// offset settings\\n\\t\\t\\toffset: true,\\n\\n\\t\\t\\t// grid line settings\\n\\t\\t\\tgridLines: {\\n\\t\\t\\t\\toffsetGridLines: true\\n\\t\\t\\t}\\n\\t\\t}],\\n\\n\\t\\tyAxes: [{\\n\\t\\t\\ttype: 'linear'\\n\\t\\t}]\\n\\t}\\n});\\n\\ndefaults._set('horizontalBar', {\\n\\thover: {\\n\\t\\tmode: 'index',\\n\\t\\taxis: 'y'\\n\\t},\\n\\n\\tscales: {\\n\\t\\txAxes: [{\\n\\t\\t\\ttype: 'linear',\\n\\t\\t\\tposition: 'bottom'\\n\\t\\t}],\\n\\n\\t\\tyAxes: [{\\n\\t\\t\\tposition: 'left',\\n\\t\\t\\ttype: 'category',\\n\\n\\t\\t\\t// Specific to Horizontal Bar Controller\\n\\t\\t\\tcategoryPercentage: 0.8,\\n\\t\\t\\tbarPercentage: 0.9,\\n\\n\\t\\t\\t// offset settings\\n\\t\\t\\toffset: true,\\n\\n\\t\\t\\t// grid line settings\\n\\t\\t\\tgridLines: {\\n\\t\\t\\t\\toffsetGridLines: true\\n\\t\\t\\t}\\n\\t\\t}]\\n\\t},\\n\\n\\telements: {\\n\\t\\trectangle: {\\n\\t\\t\\tborderSkipped: 'left'\\n\\t\\t}\\n\\t},\\n\\n\\ttooltips: {\\n\\t\\tcallbacks: {\\n\\t\\t\\ttitle: function(item, data) {\\n\\t\\t\\t\\t// Pick first xLabel for now\\n\\t\\t\\t\\tvar title = '';\\n\\n\\t\\t\\t\\tif (item.length > 0) {\\n\\t\\t\\t\\t\\tif (item[0].yLabel) {\\n\\t\\t\\t\\t\\t\\ttitle = item[0].yLabel;\\n\\t\\t\\t\\t\\t} else if (data.labels.length > 0 && item[0].index < data.labels.length) {\\n\\t\\t\\t\\t\\t\\ttitle = data.labels[item[0].index];\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\treturn title;\\n\\t\\t\\t},\\n\\n\\t\\t\\tlabel: function(item, data) {\\n\\t\\t\\t\\tvar datasetLabel = data.datasets[item.datasetIndex].label || '';\\n\\t\\t\\t\\treturn datasetLabel + ': ' + item.xLabel;\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\tmode: 'index',\\n\\t\\taxis: 'y'\\n\\t}\\n});\\n\\nmodule.exports = function(Chart) {\\n\\n\\tChart.controllers.bar = Chart.DatasetController.extend({\\n\\n\\t\\tdataElementType: elements.Rectangle,\\n\\n\\t\\tinitialize: function() {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\tvar meta;\\n\\n\\t\\t\\tChart.DatasetController.prototype.initialize.apply(me, arguments);\\n\\n\\t\\t\\tmeta = me.getMeta();\\n\\t\\t\\tmeta.stack = me.getDataset().stack;\\n\\t\\t\\tmeta.bar = true;\\n\\t\\t},\\n\\n\\t\\tupdate: function(reset) {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\tvar rects = me.getMeta().data;\\n\\t\\t\\tvar i, ilen;\\n\\n\\t\\t\\tme._ruler = me.getRuler();\\n\\n\\t\\t\\tfor (i = 0, ilen = rects.length; i < ilen; ++i) {\\n\\t\\t\\t\\tme.updateElement(rects[i], i, reset);\\n\\t\\t\\t}\\n\\t\\t},\\n\\n\\t\\tupdateElement: function(rectangle, index, reset) {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\tvar chart = me.chart;\\n\\t\\t\\tvar meta = me.getMeta();\\n\\t\\t\\tvar dataset = me.getDataset();\\n\\t\\t\\tvar custom = rectangle.custom || {};\\n\\t\\t\\tvar rectangleOptions = chart.options.elements.rectangle;\\n\\n\\t\\t\\trectangle._xScale = me.getScaleForId(meta.xAxisID);\\n\\t\\t\\trectangle._yScale = me.getScaleForId(meta.yAxisID);\\n\\t\\t\\trectangle._datasetIndex = me.index;\\n\\t\\t\\trectangle._index = index;\\n\\n\\t\\t\\trectangle._model = {\\n\\t\\t\\t\\tdatasetLabel: dataset.label,\\n\\t\\t\\t\\tlabel: chart.data.labels[index],\\n\\t\\t\\t\\tborderSkipped: custom.borderSkipped ? custom.borderSkipped : rectangleOptions.borderSkipped,\\n\\t\\t\\t\\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.backgroundColor, index, rectangleOptions.backgroundColor),\\n\\t\\t\\t\\tborderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.borderColor, index, rectangleOptions.borderColor),\\n\\t\\t\\t\\tborderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.borderWidth, index, rectangleOptions.borderWidth)\\n\\t\\t\\t};\\n\\n\\t\\t\\tme.updateElementGeometry(rectangle, index, reset);\\n\\n\\t\\t\\trectangle.pivot();\\n\\t\\t},\\n\\n\\t\\t/**\\n\\t\\t * @private\\n\\t\\t */\\n\\t\\tupdateElementGeometry: function(rectangle, index, reset) {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\tvar model = rectangle._model;\\n\\t\\t\\tvar vscale = me.getValueScale();\\n\\t\\t\\tvar base = vscale.getBasePixel();\\n\\t\\t\\tvar horizontal = vscale.isHorizontal();\\n\\t\\t\\tvar ruler = me._ruler || me.getRuler();\\n\\t\\t\\tvar vpixels = me.calculateBarValuePixels(me.index, index);\\n\\t\\t\\tvar ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\\n\\n\\t\\t\\tmodel.horizontal = horizontal;\\n\\t\\t\\tmodel.base = reset ? base : vpixels.base;\\n\\t\\t\\tmodel.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\\n\\t\\t\\tmodel.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\\n\\t\\t\\tmodel.height = horizontal ? ipixels.size : undefined;\\n\\t\\t\\tmodel.width = horizontal ? undefined : ipixels.size;\\n\\t\\t},\\n\\n\\t\\t/**\\n\\t\\t * @private\\n\\t\\t */\\n\\t\\tgetValueScaleId: function() {\\n\\t\\t\\treturn this.getMeta().yAxisID;\\n\\t\\t},\\n\\n\\t\\t/**\\n\\t\\t * @private\\n\\t\\t */\\n\\t\\tgetIndexScaleId: function() {\\n\\t\\t\\treturn this.getMeta().xAxisID;\\n\\t\\t},\\n\\n\\t\\t/**\\n\\t\\t * @private\\n\\t\\t */\\n\\t\\tgetValueScale: function() {\\n\\t\\t\\treturn this.getScaleForId(this.getValueScaleId());\\n\\t\\t},\\n\\n\\t\\t/**\\n\\t\\t * @private\\n\\t\\t */\\n\\t\\tgetIndexScale: function() {\\n\\t\\t\\treturn this.getScaleForId(this.getIndexScaleId());\\n\\t\\t},\\n\\n\\t\\t/**\\n\\t\\t * Returns the effective number of stacks based on groups and bar visibility.\\n\\t\\t * @private\\n\\t\\t */\\n\\t\\tgetStackCount: function(last) {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\tvar chart = me.chart;\\n\\t\\t\\tvar scale = me.getIndexScale();\\n\\t\\t\\tvar stacked = scale.options.stacked;\\n\\t\\t\\tvar ilen = last === undefined ? chart.data.datasets.length : last + 1;\\n\\t\\t\\tvar stacks = [];\\n\\t\\t\\tvar i, meta;\\n\\n\\t\\t\\tfor (i = 0; i < ilen; ++i) {\\n\\t\\t\\t\\tmeta = chart.getDatasetMeta(i);\\n\\t\\t\\t\\tif (meta.bar && chart.isDatasetVisible(i) &&\\n\\t\\t\\t\\t\\t(stacked === false ||\\n\\t\\t\\t\\t\\t(stacked === true && stacks.indexOf(meta.stack) === -1) ||\\n\\t\\t\\t\\t\\t(stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1)))) {\\n\\t\\t\\t\\t\\tstacks.push(meta.stack);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn stacks.length;\\n\\t\\t},\\n\\n\\t\\t/**\\n\\t\\t * Returns the stack index for the given dataset based on groups and bar visibility.\\n\\t\\t * @private\\n\\t\\t */\\n\\t\\tgetStackIndex: function(datasetIndex) {\\n\\t\\t\\treturn this.getStackCount(datasetIndex) - 1;\\n\\t\\t},\\n\\n\\t\\t/**\\n\\t\\t * @private\\n\\t\\t */\\n\\t\\tgetRuler: function() {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\tvar scale = me.getIndexScale();\\n\\t\\t\\tvar stackCount = me.getStackCount();\\n\\t\\t\\tvar datasetIndex = me.index;\\n\\t\\t\\tvar pixels = [];\\n\\t\\t\\tvar isHorizontal = scale.isHorizontal();\\n\\t\\t\\tvar start = isHorizontal ? scale.left : scale.top;\\n\\t\\t\\tvar end = start + (isHorizontal ? scale.width : scale.height);\\n\\t\\t\\tvar i, ilen;\\n\\n\\t\\t\\tfor (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\\n\\t\\t\\t\\tpixels.push(scale.getPixelForValue(null, i, datasetIndex));\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn {\\n\\t\\t\\t\\tpixels: pixels,\\n\\t\\t\\t\\tstart: start,\\n\\t\\t\\t\\tend: end,\\n\\t\\t\\t\\tstackCount: stackCount,\\n\\t\\t\\t\\tscale: scale\\n\\t\\t\\t};\\n\\t\\t},\\n\\n\\t\\t/**\\n\\t\\t * Note: pixel values are not clamped to the scale area.\\n\\t\\t * @private\\n\\t\\t */\\n\\t\\tcalculateBarValuePixels: function(datasetIndex, index) {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\tvar chart = me.chart;\\n\\t\\t\\tvar meta = me.getMeta();\\n\\t\\t\\tvar scale = me.getValueScale();\\n\\t\\t\\tvar datasets = chart.data.datasets;\\n\\t\\t\\tvar value = scale.getRightValue(datasets[datasetIndex].data[index]);\\n\\t\\t\\tvar stacked = scale.options.stacked;\\n\\t\\t\\tvar stack = meta.stack;\\n\\t\\t\\tvar start = 0;\\n\\t\\t\\tvar i, imeta, ivalue, base, head, size;\\n\\n\\t\\t\\tif (stacked || (stacked === undefined && stack !== undefined)) {\\n\\t\\t\\t\\tfor (i = 0; i < datasetIndex; ++i) {\\n\\t\\t\\t\\t\\timeta = chart.getDatasetMeta(i);\\n\\n\\t\\t\\t\\t\\tif (imeta.bar &&\\n\\t\\t\\t\\t\\t\\timeta.stack === stack &&\\n\\t\\t\\t\\t\\t\\timeta.controller.getValueScaleId() === scale.id &&\\n\\t\\t\\t\\t\\t\\tchart.isDatasetVisible(i)) {\\n\\n\\t\\t\\t\\t\\t\\tivalue = scale.getRightValue(datasets[i].data[index]);\\n\\t\\t\\t\\t\\t\\tif ((value < 0 && ivalue < 0) || (value >= 0 && ivalue > 0)) {\\n\\t\\t\\t\\t\\t\\t\\tstart += ivalue;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\tbase = scale.getPixelForValue(start);\\n\\t\\t\\thead = scale.getPixelForValue(start + value);\\n\\t\\t\\tsize = (head - base) / 2;\\n\\n\\t\\t\\treturn {\\n\\t\\t\\t\\tsize: size,\\n\\t\\t\\t\\tbase: base,\\n\\t\\t\\t\\thead: head,\\n\\t\\t\\t\\tcenter: head + size / 2\\n\\t\\t\\t};\\n\\t\\t},\\n\\n\\t\\t/**\\n\\t\\t * @private\\n\\t\\t */\\n\\t\\tcalculateBarIndexPixels: function(datasetIndex, index, ruler) {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\tvar options = ruler.scale.options;\\n\\t\\t\\tvar stackIndex = me.getStackIndex(datasetIndex);\\n\\t\\t\\tvar pixels = ruler.pixels;\\n\\t\\t\\tvar base = pixels[index];\\n\\t\\t\\tvar length = pixels.length;\\n\\t\\t\\tvar start = ruler.start;\\n\\t\\t\\tvar end = ruler.end;\\n\\t\\t\\tvar leftSampleSize, rightSampleSize, leftCategorySize, rightCategorySize, fullBarSize, size;\\n\\n\\t\\t\\tif (length === 1) {\\n\\t\\t\\t\\tleftSampleSize = base > start ? base - start : end - base;\\n\\t\\t\\t\\trightSampleSize = base < end ? end - base : base - start;\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tif (index > 0) {\\n\\t\\t\\t\\t\\tleftSampleSize = (base - pixels[index - 1]) / 2;\\n\\t\\t\\t\\t\\tif (index === length - 1) {\\n\\t\\t\\t\\t\\t\\trightSampleSize = leftSampleSize;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tif (index < length - 1) {\\n\\t\\t\\t\\t\\trightSampleSize = (pixels[index + 1] - base) / 2;\\n\\t\\t\\t\\t\\tif (index === 0) {\\n\\t\\t\\t\\t\\t\\tleftSampleSize = rightSampleSize;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\tleftCategorySize = leftSampleSize * options.categoryPercentage;\\n\\t\\t\\trightCategorySize = rightSampleSize * options.categoryPercentage;\\n\\t\\t\\tfullBarSize = (leftCategorySize + rightCategorySize) / ruler.stackCount;\\n\\t\\t\\tsize = fullBarSize * options.barPercentage;\\n\\n\\t\\t\\tsize = Math.min(\\n\\t\\t\\t\\thelpers.valueOrDefault(options.barThickness, size),\\n\\t\\t\\t\\thelpers.valueOrDefault(options.maxBarThickness, Infinity));\\n\\n\\t\\t\\tbase -= leftCategorySize;\\n\\t\\t\\tbase += fullBarSize * stackIndex;\\n\\t\\t\\tbase += (fullBarSize - size) / 2;\\n\\n\\t\\t\\treturn {\\n\\t\\t\\t\\tsize: size,\\n\\t\\t\\t\\tbase: base,\\n\\t\\t\\t\\thead: base + size,\\n\\t\\t\\t\\tcenter: base + size / 2\\n\\t\\t\\t};\\n\\t\\t},\\n\\n\\t\\tdraw: function() {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\tvar chart = me.chart;\\n\\t\\t\\tvar scale = me.getValueScale();\\n\\t\\t\\tvar rects = me.getMeta().data;\\n\\t\\t\\tvar dataset = me.getDataset();\\n\\t\\t\\tvar ilen = rects.length;\\n\\t\\t\\tvar i = 0;\\n\\n\\t\\t\\thelpers.canvas.clipArea(chart.ctx, chart.chartArea);\\n\\n\\t\\t\\tfor (; i < ilen; ++i) {\\n\\t\\t\\t\\tif (!isNaN(scale.getRightValue(dataset.data[i]))) {\\n\\t\\t\\t\\t\\trects[i].draw();\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\thelpers.canvas.unclipArea(chart.ctx);\\n\\t\\t},\\n\\n\\t\\tsetHoverStyle: function(rectangle) {\\n\\t\\t\\tvar dataset = this.chart.data.datasets[rectangle._datasetIndex];\\n\\t\\t\\tvar index = rectangle._index;\\n\\t\\t\\tvar custom = rectangle.custom || {};\\n\\t\\t\\tvar model = rectangle._model;\\n\\n\\t\\t\\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.valueAtIndexOrDefault(dataset.hoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\\n\\t\\t\\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.valueAtIndexOrDefault(dataset.hoverBorderColor, index, helpers.getHoverColor(model.borderColor));\\n\\t\\t\\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.valueAtIndexOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\\n\\t\\t},\\n\\n\\t\\tremoveHoverStyle: function(rectangle) {\\n\\t\\t\\tvar dataset = this.chart.data.datasets[rectangle._datasetIndex];\\n\\t\\t\\tvar index = rectangle._index;\\n\\t\\t\\tvar custom = rectangle.custom || {};\\n\\t\\t\\tvar model = rectangle._model;\\n\\t\\t\\tvar rectangleElementOptions = this.chart.options.elements.rectangle;\\n\\n\\t\\t\\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.backgroundColor, index, rectangleElementOptions.backgroundColor);\\n\\t\\t\\tmodel.borderColor = custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.borderColor, index, rectangleElementOptions.borderColor);\\n\\t\\t\\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.borderWidth, index, rectangleElementOptions.borderWidth);\\n\\t\\t}\\n\\t});\\n\\n\\tChart.controllers.horizontalBar = Chart.controllers.bar.extend({\\n\\t\\t/**\\n\\t\\t * @private\\n\\t\\t */\\n\\t\\tgetValueScaleId: function() {\\n\\t\\t\\treturn this.getMeta().xAxisID;\\n\\t\\t},\\n\\n\\t\\t/**\\n\\t\\t * @private\\n\\t\\t */\\n\\t\\tgetIndexScaleId: function() {\\n\\t\\t\\treturn this.getMeta().yAxisID;\\n\\t\\t}\\n\\t});\\n};\\n\\n},{\\\"25\\\":25,\\\"40\\\":40,\\\"45\\\":45}],16:[function(require,module,exports){\\n'use strict';\\n\\nvar defaults = require(25);\\nvar elements = require(40);\\nvar helpers = require(45);\\n\\ndefaults._set('bubble', {\\n\\thover: {\\n\\t\\tmode: 'single'\\n\\t},\\n\\n\\tscales: {\\n\\t\\txAxes: [{\\n\\t\\t\\ttype: 'linear', // bubble should probably use a linear scale by default\\n\\t\\t\\tposition: 'bottom',\\n\\t\\t\\tid: 'x-axis-0' // need an ID so datasets can reference the scale\\n\\t\\t}],\\n\\t\\tyAxes: [{\\n\\t\\t\\ttype: 'linear',\\n\\t\\t\\tposition: 'left',\\n\\t\\t\\tid: 'y-axis-0'\\n\\t\\t}]\\n\\t},\\n\\n\\ttooltips: {\\n\\t\\tcallbacks: {\\n\\t\\t\\ttitle: function() {\\n\\t\\t\\t\\t// Title doesn't make sense for scatter since we format the data as a point\\n\\t\\t\\t\\treturn '';\\n\\t\\t\\t},\\n\\t\\t\\tlabel: function(item, data) {\\n\\t\\t\\t\\tvar datasetLabel = data.datasets[item.datasetIndex].label || '';\\n\\t\\t\\t\\tvar dataPoint = data.datasets[item.datasetIndex].data[item.index];\\n\\t\\t\\t\\treturn datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n});\\n\\n\\nmodule.exports = function(Chart) {\\n\\n\\tChart.controllers.bubble = Chart.DatasetController.extend({\\n\\t\\t/**\\n\\t\\t * @protected\\n\\t\\t */\\n\\t\\tdataElementType: elements.Point,\\n\\n\\t\\t/**\\n\\t\\t * @protected\\n\\t\\t */\\n\\t\\tupdate: function(reset) {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\tvar meta = me.getMeta();\\n\\t\\t\\tvar points = meta.data;\\n\\n\\t\\t\\t// Update Points\\n\\t\\t\\thelpers.each(points, function(point, index) {\\n\\t\\t\\t\\tme.updateElement(point, index, reset);\\n\\t\\t\\t});\\n\\t\\t},\\n\\n\\t\\t/**\\n\\t\\t * @protected\\n\\t\\t */\\n\\t\\tupdateElement: function(point, index, reset) {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\tvar meta = me.getMeta();\\n\\t\\t\\tvar custom = point.custom || {};\\n\\t\\t\\tvar xScale = me.getScaleForId(meta.xAxisID);\\n\\t\\t\\tvar yScale = me.getScaleForId(meta.yAxisID);\\n\\t\\t\\tvar options = me._resolveElementOptions(point, index);\\n\\t\\t\\tvar data = me.getDataset().data[index];\\n\\t\\t\\tvar dsIndex = me.index;\\n\\n\\t\\t\\tvar x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\\n\\t\\t\\tvar y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\\n\\n\\t\\t\\tpoint._xScale = xScale;\\n\\t\\t\\tpoint._yScale = yScale;\\n\\t\\t\\tpoint._options = options;\\n\\t\\t\\tpoint._datasetIndex = dsIndex;\\n\\t\\t\\tpoint._index = index;\\n\\t\\t\\tpoint._model = {\\n\\t\\t\\t\\tbackgroundColor: options.backgroundColor,\\n\\t\\t\\t\\tborderColor: options.borderColor,\\n\\t\\t\\t\\tborderWidth: options.borderWidth,\\n\\t\\t\\t\\thitRadius: options.hitRadius,\\n\\t\\t\\t\\tpointStyle: options.pointStyle,\\n\\t\\t\\t\\tradius: reset ? 0 : options.radius,\\n\\t\\t\\t\\tskip: custom.skip || isNaN(x) || isNaN(y),\\n\\t\\t\\t\\tx: x,\\n\\t\\t\\t\\ty: y,\\n\\t\\t\\t};\\n\\n\\t\\t\\tpoint.pivot();\\n\\t\\t},\\n\\n\\t\\t/**\\n\\t\\t * @protected\\n\\t\\t */\\n\\t\\tsetHoverStyle: function(point) {\\n\\t\\t\\tvar model = point._model;\\n\\t\\t\\tvar options = point._options;\\n\\n\\t\\t\\tmodel.backgroundColor = helpers.valueOrDefault(options.hoverBackgroundColor, helpers.getHoverColor(options.backgroundColor));\\n\\t\\t\\tmodel.borderColor = helpers.valueOrDefault(options.hoverBorderColor, helpers.getHoverColor(options.borderColor));\\n\\t\\t\\tmodel.borderWidth = helpers.valueOrDefault(options.hoverBorderWidth, options.borderWidth);\\n\\t\\t\\tmodel.radius = options.radius + options.hoverRadius;\\n\\t\\t},\\n\\n\\t\\t/**\\n\\t\\t * @protected\\n\\t\\t */\\n\\t\\tremoveHoverStyle: function(point) {\\n\\t\\t\\tvar model = point._model;\\n\\t\\t\\tvar options = point._options;\\n\\n\\t\\t\\tmodel.backgroundColor = options.backgroundColor;\\n\\t\\t\\tmodel.borderColor = options.borderColor;\\n\\t\\t\\tmodel.borderWidth = options.borderWidth;\\n\\t\\t\\tmodel.radius = options.radius;\\n\\t\\t},\\n\\n\\t\\t/**\\n\\t\\t * @private\\n\\t\\t */\\n\\t\\t_resolveElementOptions: function(point, index) {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\tvar chart = me.chart;\\n\\t\\t\\tvar datasets = chart.data.datasets;\\n\\t\\t\\tvar dataset = datasets[me.index];\\n\\t\\t\\tvar custom = point.custom || {};\\n\\t\\t\\tvar options = chart.options.elements.point;\\n\\t\\t\\tvar resolve = helpers.options.resolve;\\n\\t\\t\\tvar data = dataset.data[index];\\n\\t\\t\\tvar values = {};\\n\\t\\t\\tvar i, ilen, key;\\n\\n\\t\\t\\t// Scriptable options\\n\\t\\t\\tvar context = {\\n\\t\\t\\t\\tchart: chart,\\n\\t\\t\\t\\tdataIndex: index,\\n\\t\\t\\t\\tdataset: dataset,\\n\\t\\t\\t\\tdatasetIndex: me.index\\n\\t\\t\\t};\\n\\n\\t\\t\\tvar keys = [\\n\\t\\t\\t\\t'backgroundColor',\\n\\t\\t\\t\\t'borderColor',\\n\\t\\t\\t\\t'borderWidth',\\n\\t\\t\\t\\t'hoverBackgroundColor',\\n\\t\\t\\t\\t'hoverBorderColor',\\n\\t\\t\\t\\t'hoverBorderWidth',\\n\\t\\t\\t\\t'hoverRadius',\\n\\t\\t\\t\\t'hitRadius',\\n\\t\\t\\t\\t'pointStyle'\\n\\t\\t\\t];\\n\\n\\t\\t\\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\\n\\t\\t\\t\\tkey = keys[i];\\n\\t\\t\\t\\tvalues[key] = resolve([\\n\\t\\t\\t\\t\\tcustom[key],\\n\\t\\t\\t\\t\\tdataset[key],\\n\\t\\t\\t\\t\\toptions[key]\\n\\t\\t\\t\\t], context, index);\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Custom radius resolution\\n\\t\\t\\tvalues.radius = resolve([\\n\\t\\t\\t\\tcustom.radius,\\n\\t\\t\\t\\tdata ? data.r : undefined,\\n\\t\\t\\t\\tdataset.radius,\\n\\t\\t\\t\\toptions.radius\\n\\t\\t\\t], context, index);\\n\\n\\t\\t\\treturn values;\\n\\t\\t}\\n\\t});\\n};\\n\\n},{\\\"25\\\":25,\\\"40\\\":40,\\\"45\\\":45}],17:[function(require,module,exports){\\n'use strict';\\n\\nvar defaults = require(25);\\nvar elements = require(40);\\nvar helpers = require(45);\\n\\ndefaults._set('doughnut', {\\n\\tanimation: {\\n\\t\\t// Boolean - Whether we animate the rotation of the Doughnut\\n\\t\\tanimateRotate: true,\\n\\t\\t// Boolean - Whether we animate scaling the Doughnut from the centre\\n\\t\\tanimateScale: false\\n\\t},\\n\\thover: {\\n\\t\\tmode: 'single'\\n\\t},\\n\\tlegendCallback: function(chart) {\\n\\t\\tvar text = [];\\n\\t\\ttext.push('<ul class=\\\"' + chart.id + '-legend\\\">');\\n\\n\\t\\tvar data = chart.data;\\n\\t\\tvar datasets = data.datasets;\\n\\t\\tvar labels = data.labels;\\n\\n\\t\\tif (datasets.length) {\\n\\t\\t\\tfor (var i = 0; i < datasets[0].data.length; ++i) {\\n\\t\\t\\t\\ttext.push('<li><span style=\\\"background-color:' + datasets[0].backgroundColor[i] + '\\\"></span>');\\n\\t\\t\\t\\tif (labels[i]) {\\n\\t\\t\\t\\t\\ttext.push(labels[i]);\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\ttext.push('</li>');\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\ttext.push('</ul>');\\n\\t\\treturn text.join('');\\n\\t},\\n\\tlegend: {\\n\\t\\tlabels: {\\n\\t\\t\\tgenerateLabels: function(chart) {\\n\\t\\t\\t\\tvar data = chart.data;\\n\\t\\t\\t\\tif (data.labels.length && data.datasets.length) {\\n\\t\\t\\t\\t\\treturn data.labels.map(function(label, i) {\\n\\t\\t\\t\\t\\t\\tvar meta = chart.getDatasetMeta(0);\\n\\t\\t\\t\\t\\t\\tvar ds = data.datasets[0];\\n\\t\\t\\t\\t\\t\\tvar arc = meta.data[i];\\n\\t\\t\\t\\t\\t\\tvar custom = arc && arc.custom || {};\\n\\t\\t\\t\\t\\t\\tvar valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\\n\\t\\t\\t\\t\\t\\tvar arcOpts = chart.options.elements.arc;\\n\\t\\t\\t\\t\\t\\tvar fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\\n\\t\\t\\t\\t\\t\\tvar stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\\n\\t\\t\\t\\t\\t\\tvar bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\\n\\n\\t\\t\\t\\t\\t\\treturn {\\n\\t\\t\\t\\t\\t\\t\\ttext: label,\\n\\t\\t\\t\\t\\t\\t\\tfillStyle: fill,\\n\\t\\t\\t\\t\\t\\t\\tstrokeStyle: stroke,\\n\\t\\t\\t\\t\\t\\t\\tlineWidth: bw,\\n\\t\\t\\t\\t\\t\\t\\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\\n\\n\\t\\t\\t\\t\\t\\t\\t// Extra data used for toggling the correct item\\n\\t\\t\\t\\t\\t\\t\\tindex: i\\n\\t\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\treturn [];\\n\\t\\t\\t}\\n\\t\\t},\\n\\n\\t\\tonClick: function(e, legendItem) {\\n\\t\\t\\tvar index = legendItem.index;\\n\\t\\t\\tvar chart = this.chart;\\n\\t\\t\\tvar i, ilen, meta;\\n\\n\\t\\t\\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\\n\\t\\t\\t\\tmeta = chart.getDatasetMeta(i);\\n\\t\\t\\t\\t// toggle visibility of index if exists\\n\\t\\t\\t\\tif (meta.data[index]) {\\n\\t\\t\\t\\t\\tmeta.data[index].hidden = !meta.data[index].hidden;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\tchart.update();\\n\\t\\t}\\n\\t},\\n\\n\\t// The percentage of the chart that we cut out of the middle.\\n\\tcutoutPercentage: 50,\\n\\n\\t// The rotation of the chart, where the first data arc begins.\\n\\trotation: Math.PI * -0.5,\\n\\n\\t// The total circumference of the chart.\\n\\tcircumference: Math.PI * 2.0,\\n\\n\\t// Need to override these to give a nice default\\n\\ttooltips: {\\n\\t\\tcallbacks: {\\n\\t\\t\\ttitle: function() {\\n\\t\\t\\t\\treturn '';\\n\\t\\t\\t},\\n\\t\\t\\tlabel: function(tooltipItem, data) {\\n\\t\\t\\t\\tvar dataLabel = data.labels[tooltipItem.index];\\n\\t\\t\\t\\tvar value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\\n\\n\\t\\t\\t\\tif (helpers.isArray(dataLabel)) {\\n\\t\\t\\t\\t\\t// show value on first line of multiline label\\n\\t\\t\\t\\t\\t// need to clone because we are changing the value\\n\\t\\t\\t\\t\\tdataLabel = dataLabel.slice();\\n\\t\\t\\t\\t\\tdataLabel[0] += value;\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tdataLabel += value;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\treturn dataLabel;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n});\\n\\ndefaults._set('pie', helpers.clone(defaults.doughnut));\\ndefaults._set('pie', {\\n\\tcutoutPercentage: 0\\n});\\n\\nmodule.exports = function(Chart) {\\n\\n\\tChart.controllers.doughnut = Chart.controllers.pie = Chart.DatasetController.extend({\\n\\n\\t\\tdataElementType: elements.Arc,\\n\\n\\t\\tlinkScales: helpers.noop,\\n\\n\\t\\t// Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\\n\\t\\tgetRingIndex: function(datasetIndex) {\\n\\t\\t\\tvar ringIndex = 0;\\n\\n\\t\\t\\tfor (var j = 0; j < datasetIndex; ++j) {\\n\\t\\t\\t\\tif (this.chart.isDatasetVisible(j)) {\\n\\t\\t\\t\\t\\t++ringIndex;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn ringIndex;\\n\\t\\t},\\n\\n\\t\\tupdate: function(reset) {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\tvar chart = me.chart;\\n\\t\\t\\tvar chartArea = chart.chartArea;\\n\\t\\t\\tvar opts = chart.options;\\n\\t\\t\\tvar arcOpts = opts.elements.arc;\\n\\t\\t\\tvar availableWidth = chartArea.right - chartArea.left - arcOpts.borderWidth;\\n\\t\\t\\tvar availableHeight = chartArea.bottom - chartArea.top - arcOpts.borderWidth;\\n\\t\\t\\tvar minSize = Math.min(availableWidth, availableHeight);\\n\\t\\t\\tvar offset = {x: 0, y: 0};\\n\\t\\t\\tvar meta = me.getMeta();\\n\\t\\t\\tvar cutoutPercentage = opts.cutoutPercentage;\\n\\t\\t\\tvar circumference = opts.circumference;\\n\\n\\t\\t\\t// If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\\n\\t\\t\\tif (circumference < Math.PI * 2.0) {\\n\\t\\t\\t\\tvar startAngle = opts.rotation % (Math.PI * 2.0);\\n\\t\\t\\t\\tstartAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\\n\\t\\t\\t\\tvar endAngle = startAngle + circumference;\\n\\t\\t\\t\\tvar start = {x: Math.cos(startAngle), y: Math.sin(startAngle)};\\n\\t\\t\\t\\tvar end = {x: Math.cos(endAngle), y: Math.sin(endAngle)};\\n\\t\\t\\t\\tvar contains0 = (startAngle <= 0 && endAngle >= 0) || (startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle);\\n\\t\\t\\t\\tvar contains90 = (startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle);\\n\\t\\t\\t\\tvar contains180 = (startAngle <= -Math.PI && -Math.PI <= endAngle) || (startAngle <= Math.PI && Math.PI <= endAngle);\\n\\t\\t\\t\\tvar contains270 = (startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle);\\n\\t\\t\\t\\tvar cutout = cutoutPercentage / 100.0;\\n\\t\\t\\t\\tvar min = {x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)), y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))};\\n\\t\\t\\t\\tvar max = {x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)), y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))};\\n\\t\\t\\t\\tvar size = {width: (max.x - min.x) * 0.5, height: (max.y - min.y) * 0.5};\\n\\t\\t\\t\\tminSize = Math.min(availableWidth / size.width, availableHeight / size.height);\\n\\t\\t\\t\\toffset = {x: (max.x + min.x) * -0.5, y: (max.y + min.y) * -0.5};\\n\\t\\t\\t}\\n\\n\\t\\t\\tchart.borderWidth = me.getMaxBorderWidth(meta.data);\\n\\t\\t\\tchart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\\n\\t\\t\\tchart.innerRadius = Math.max(cutoutPercentage ? (chart.outerRadius / 100) * (cutoutPercentage) : 0, 0);\\n\\t\\t\\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\\n\\t\\t\\tchart.offsetX = offset.x * chart.outerRadius;\\n\\t\\t\\tchart.offsetY = offset.y * chart.outerRadius;\\n\\n\\t\\t\\tmeta.total = me.calculateTotal();\\n\\n\\t\\t\\tme.outerRadius = chart.outerRadius - (chart.radiusLength * me.getRingIndex(me.index));\\n\\t\\t\\tme.innerRadius = Math.max(me.outerRadius - chart.radiusLength, 0);\\n\\n\\t\\t\\thelpers.each(meta.data, function(arc, index) {\\n\\t\\t\\t\\tme.updateElement(arc, index, reset);\\n\\t\\t\\t});\\n\\t\\t},\\n\\n\\t\\tupdateElement: function(arc, index, reset) {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\tvar chart = me.chart;\\n\\t\\t\\tvar chartArea = chart.chartArea;\\n\\t\\t\\tvar opts = chart.options;\\n\\t\\t\\tvar animationOpts = opts.animation;\\n\\t\\t\\tvar centerX = (chartArea.left + chartArea.right) / 2;\\n\\t\\t\\tvar centerY = (chartArea.top + chartArea.bottom) / 2;\\n\\t\\t\\tvar startAngle = opts.rotation; // non reset case handled later\\n\\t\\t\\tvar endAngle = opts.rotation; // non reset case handled later\\n\\t\\t\\tvar dataset = me.getDataset();\\n\\t\\t\\tvar circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\\n\\t\\t\\tvar innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\\n\\t\\t\\tvar outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\\n\\t\\t\\tvar valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\\n\\n\\t\\t\\thelpers.extend(arc, {\\n\\t\\t\\t\\t// Utility\\n\\t\\t\\t\\t_datasetIndex: me.index,\\n\\t\\t\\t\\t_index: index,\\n\\n\\t\\t\\t\\t// Desired view properties\\n\\t\\t\\t\\t_model: {\\n\\t\\t\\t\\t\\tx: centerX + chart.offsetX,\\n\\t\\t\\t\\t\\ty: centerY + chart.offsetY,\\n\\t\\t\\t\\t\\tstartAngle: startAngle,\\n\\t\\t\\t\\t\\tendAngle: endAngle,\\n\\t\\t\\t\\t\\tcircumference: circumference,\\n\\t\\t\\t\\t\\touterRadius: outerRadius,\\n\\t\\t\\t\\t\\tinnerRadius: innerRadius,\\n\\t\\t\\t\\t\\tlabel: valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\\n\\t\\t\\t\\t}\\n\\t\\t\\t});\\n\\n\\t\\t\\tvar model = arc._model;\\n\\t\\t\\t// Resets the visual styles\\n\\t\\t\\tthis.removeHoverStyle(arc);\\n\\n\\t\\t\\t// Set correct angles if not resetting\\n\\t\\t\\tif (!reset || !animationOpts.animateRotate) {\\n\\t\\t\\t\\tif (index === 0) {\\n\\t\\t\\t\\t\\tmodel.startAngle = opts.rotation;\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tmodel.startAngle = me.getMeta().data[index - 1]._model.endAngle;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tmodel.endAngle = model.startAngle + model.circumference;\\n\\t\\t\\t}\\n\\n\\t\\t\\tarc.pivot();\\n\\t\\t},\\n\\n\\t\\tremoveHoverStyle: function(arc) {\\n\\t\\t\\tChart.DatasetController.prototype.removeHoverStyle.call(this, arc, this.chart.options.elements.arc);\\n\\t\\t},\\n\\n\\t\\tcalculateTotal: function() {\\n\\t\\t\\tvar dataset = this.getDataset();\\n\\t\\t\\tvar meta = this.getMeta();\\n\\t\\t\\tvar total = 0;\\n\\t\\t\\tvar value;\\n\\n\\t\\t\\thelpers.each(meta.data, function(element, index) {\\n\\t\\t\\t\\tvalue = dataset.data[index];\\n\\t\\t\\t\\tif (!isNaN(value) && !element.hidden) {\\n\\t\\t\\t\\t\\ttotal += Math.abs(value);\\n\\t\\t\\t\\t}\\n\\t\\t\\t});\\n\\n\\t\\t\\t/* if (total === 0) {\\n\\t\\t\\t\\ttotal = NaN;\\n\\t\\t\\t}*/\\n\\n\\t\\t\\treturn total;\\n\\t\\t},\\n\\n\\t\\tcalculateCircumference: function(value) {\\n\\t\\t\\tvar total = this.getMeta().total;\\n\\t\\t\\tif (total > 0 && !isNaN(value)) {\\n\\t\\t\\t\\treturn (Math.PI * 2.0) * (value / total);\\n\\t\\t\\t}\\n\\t\\t\\treturn 0;\\n\\t\\t},\\n\\n\\t\\t// gets the max border or hover width to properly scale pie charts\\n\\t\\tgetMaxBorderWidth: function(arcs) {\\n\\t\\t\\tvar max = 0;\\n\\t\\t\\tvar index = this.index;\\n\\t\\t\\tvar length = arcs.length;\\n\\t\\t\\tvar borderWidth;\\n\\t\\t\\tvar hoverWidth;\\n\\n\\t\\t\\tfor (var i = 0; i < length; i++) {\\n\\t\\t\\t\\tborderWidth = arcs[i]._model ? arcs[i]._model.borderWidth : 0;\\n\\t\\t\\t\\thoverWidth = arcs[i]._chart ? arcs[i]._chart.config.data.datasets[index].hoverBorderWidth : 0;\\n\\n\\t\\t\\t\\tmax = borderWidth > max ? borderWidth : max;\\n\\t\\t\\t\\tmax = hoverWidth > max ? hoverWidth : max;\\n\\t\\t\\t}\\n\\t\\t\\treturn max;\\n\\t\\t}\\n\\t});\\n};\\n\\n},{\\\"25\\\":25,\\\"40\\\":40,\\\"45\\\":45}],18:[function(require,module,exports){\\n'use strict';\\n\\nvar defaults = require(25);\\nvar elements = require(40);\\nvar helpers = require(45);\\n\\ndefaults._set('line', {\\n\\tshowLines: true,\\n\\tspanGaps: false,\\n\\n\\thover: {\\n\\t\\tmode: 'label'\\n\\t},\\n\\n\\tscales: {\\n\\t\\txAxes: [{\\n\\t\\t\\ttype: 'category',\\n\\t\\t\\tid: 'x-axis-0'\\n\\t\\t}],\\n\\t\\tyAxes: [{\\n\\t\\t\\ttype: 'linear',\\n\\t\\t\\tid: 'y-axis-0'\\n\\t\\t}]\\n\\t}\\n});\\n\\nmodule.exports = function(Chart) {\\n\\n\\tfunction lineEnabled(dataset, options) {\\n\\t\\treturn helpers.valueOrDefault(dataset.showLine, options.showLines);\\n\\t}\\n\\n\\tChart.controllers.line = Chart.DatasetController.extend({\\n\\n\\t\\tdatasetElementType: elements.Line,\\n\\n\\t\\tdataElementType: elements.Point,\\n\\n\\t\\tupdate: function(reset) {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\tvar meta = me.getMeta();\\n\\t\\t\\tvar line = meta.dataset;\\n\\t\\t\\tvar points = meta.data || [];\\n\\t\\t\\tvar options = me.chart.options;\\n\\t\\t\\tvar lineElementOptions = options.elements.line;\\n\\t\\t\\tvar scale = me.getScaleForId(meta.yAxisID);\\n\\t\\t\\tvar i, ilen, custom;\\n\\t\\t\\tvar dataset = me.getDataset();\\n\\t\\t\\tvar showLine = lineEnabled(dataset, options);\\n\\n\\t\\t\\t// Update Line\\n\\t\\t\\tif (showLine) {\\n\\t\\t\\t\\tcustom = line.custom || {};\\n\\n\\t\\t\\t\\t// Compatibility: If the properties are defined with only the old name, use those values\\n\\t\\t\\t\\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\\n\\t\\t\\t\\t\\tdataset.lineTension = dataset.tension;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// Utility\\n\\t\\t\\t\\tline._scale = scale;\\n\\t\\t\\t\\tline._datasetIndex = me.index;\\n\\t\\t\\t\\t// Data\\n\\t\\t\\t\\tline._children = points;\\n\\t\\t\\t\\t// Model\\n\\t\\t\\t\\tline._model = {\\n\\t\\t\\t\\t\\t// Appearance\\n\\t\\t\\t\\t\\t// The default behavior of lines is to break at null values, according\\n\\t\\t\\t\\t\\t// to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\\n\\t\\t\\t\\t\\t// This option gives lines the ability to span gaps\\n\\t\\t\\t\\t\\tspanGaps: dataset.spanGaps ? dataset.spanGaps : options.spanGaps,\\n\\t\\t\\t\\t\\ttension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),\\n\\t\\t\\t\\t\\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),\\n\\t\\t\\t\\t\\tborderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),\\n\\t\\t\\t\\t\\tborderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),\\n\\t\\t\\t\\t\\tborderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),\\n\\t\\t\\t\\t\\tborderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),\\n\\t\\t\\t\\t\\tborderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),\\n\\t\\t\\t\\t\\tborderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),\\n\\t\\t\\t\\t\\tfill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),\\n\\t\\t\\t\\t\\tsteppedLine: custom.steppedLine ? custom.steppedLine : helpers.valueOrDefault(dataset.steppedLine, lineElementOptions.stepped),\\n\\t\\t\\t\\t\\tcubicInterpolationMode: custom.cubicInterpolationMode ? custom.cubicInterpolationMode : helpers.valueOrDefault(dataset.cubicInterpolationMode, lineElementOptions.cubicInterpolationMode),\\n\\t\\t\\t\\t};\\n\\n\\t\\t\\t\\tline.pivot();\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Update Points\\n\\t\\t\\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\\n\\t\\t\\t\\tme.updateElement(points[i], i, reset);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (showLine && line._model.tension !== 0) {\\n\\t\\t\\t\\tme.updateBezierControlPoints();\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Now pivot the point for animation\\n\\t\\t\\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\\n\\t\\t\\t\\tpoints[i].pivot();\\n\\t\\t\\t}\\n\\t\\t},\\n\\n\\t\\tgetPointBackgroundColor: function(point, index) {\\n\\t\\t\\tvar backgroundColor = this.chart.options.elements.point.backgroundColor;\\n\\t\\t\\tvar dataset = this.getDataset();\\n\\t\\t\\tvar custom = point.custom || {};\\n\\n\\t\\t\\tif (custom.backgroundColor) {\\n\\t\\t\\t\\tbackgroundColor = custom.backgroundColor;\\n\\t\\t\\t} else if (dataset.pointBackgroundColor) {\\n\\t\\t\\t\\tbackgroundColor = helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, backgroundColor);\\n\\t\\t\\t} else if (dataset.backgroundColor) {\\n\\t\\t\\t\\tbackgroundColor = dataset.backgroundColor;\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn backgroundColor;\\n\\t\\t},\\n\\n\\t\\tgetPointBorderColor: function(point, index) {\\n\\t\\t\\tvar borderColor = this.chart.options.elements.point.borderColor;\\n\\t\\t\\tvar dataset = this.getDataset();\\n\\t\\t\\tvar custom = point.custom || {};\\n\\n\\t\\t\\tif (custom.borderColor) {\\n\\t\\t\\t\\tborderColor = custom.borderColor;\\n\\t\\t\\t} else if (dataset.pointBorderColor) {\\n\\t\\t\\t\\tborderColor = helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, borderColor);\\n\\t\\t\\t} else if (dataset.borderColor) {\\n\\t\\t\\t\\tborderColor = dataset.borderColor;\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn borderColor;\\n\\t\\t},\\n\\n\\t\\tgetPointBorderWidth: function(point, index) {\\n\\t\\t\\tvar borderWidth = this.chart.options.elements.point.borderWidth;\\n\\t\\t\\tvar dataset = this.getDataset();\\n\\t\\t\\tvar custom = point.custom || {};\\n\\n\\t\\t\\tif (!isNaN(custom.borderWidth)) {\\n\\t\\t\\t\\tborderWidth = custom.borderWidth;\\n\\t\\t\\t} else if (!isNaN(dataset.pointBorderWidth) || helpers.isArray(dataset.pointBorderWidth)) {\\n\\t\\t\\t\\tborderWidth = helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, borderWidth);\\n\\t\\t\\t} else if (!isNaN(dataset.borderWidth)) {\\n\\t\\t\\t\\tborderWidth = dataset.borderWidth;\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn borderWidth;\\n\\t\\t},\\n\\n\\t\\tupdateElement: function(point, index, reset) {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\tvar meta = me.getMeta();\\n\\t\\t\\tvar custom = point.custom || {};\\n\\t\\t\\tvar dataset = me.getDataset();\\n\\t\\t\\tvar datasetIndex = me.index;\\n\\t\\t\\tvar value = dataset.data[index];\\n\\t\\t\\tvar yScale = me.getScaleForId(meta.yAxisID);\\n\\t\\t\\tvar xScale = me.getScaleForId(meta.xAxisID);\\n\\t\\t\\tvar pointOptions = me.chart.options.elements.point;\\n\\t\\t\\tvar x, y;\\n\\n\\t\\t\\t// Compatibility: If the properties are defined with only the old name, use those values\\n\\t\\t\\tif ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\\n\\t\\t\\t\\tdataset.pointRadius = dataset.radius;\\n\\t\\t\\t}\\n\\t\\t\\tif ((dataset.hitRadius !== undefined) && (dataset.pointHitRadius === undefined)) {\\n\\t\\t\\t\\tdataset.pointHitRadius = dataset.hitRadius;\\n\\t\\t\\t}\\n\\n\\t\\t\\tx = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\\n\\t\\t\\ty = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex);\\n\\n\\t\\t\\t// Utility\\n\\t\\t\\tpoint._xScale = xScale;\\n\\t\\t\\tpoint._yScale = yScale;\\n\\t\\t\\tpoint._datasetIndex = datasetIndex;\\n\\t\\t\\tpoint._index = index;\\n\\n\\t\\t\\t// Desired view properties\\n\\t\\t\\tpoint._model = {\\n\\t\\t\\t\\tx: x,\\n\\t\\t\\t\\ty: y,\\n\\t\\t\\t\\tskip: custom.skip || isNaN(x) || isNaN(y),\\n\\t\\t\\t\\t// Appearance\\n\\t\\t\\t\\tradius: custom.radius || helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointOptions.radius),\\n\\t\\t\\t\\tpointStyle: custom.pointStyle || helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointOptions.pointStyle),\\n\\t\\t\\t\\tbackgroundColor: me.getPointBackgroundColor(point, index),\\n\\t\\t\\t\\tborderColor: me.getPointBorderColor(point, index),\\n\\t\\t\\t\\tborderWidth: me.getPointBorderWidth(point, index),\\n\\t\\t\\t\\ttension: meta.dataset._model ? meta.dataset._model.tension : 0,\\n\\t\\t\\t\\tsteppedLine: meta.dataset._model ? meta.dataset._model.steppedLine : false,\\n\\t\\t\\t\\t// Tooltip\\n\\t\\t\\t\\thitRadius: custom.hitRadius || helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointOptions.hitRadius)\\n\\t\\t\\t};\\n\\t\\t},\\n\\n\\t\\tcalculatePointY: function(value, index, datasetIndex) {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\tvar chart = me.chart;\\n\\t\\t\\tvar meta = me.getMeta();\\n\\t\\t\\tvar yScale = me.getScaleForId(meta.yAxisID);\\n\\t\\t\\tvar sumPos = 0;\\n\\t\\t\\tvar sumNeg = 0;\\n\\t\\t\\tvar i, ds, dsMeta;\\n\\n\\t\\t\\tif (yScale.options.stacked) {\\n\\t\\t\\t\\tfor (i = 0; i < datasetIndex; i++) {\\n\\t\\t\\t\\t\\tds = chart.data.datasets[i];\\n\\t\\t\\t\\t\\tdsMeta = chart.getDatasetMeta(i);\\n\\t\\t\\t\\t\\tif (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\\n\\t\\t\\t\\t\\t\\tvar stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\\n\\t\\t\\t\\t\\t\\tif (stackedRightValue < 0) {\\n\\t\\t\\t\\t\\t\\t\\tsumNeg += stackedRightValue || 0;\\n\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\tsumPos += stackedRightValue || 0;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tvar rightValue = Number(yScale.getRightValue(value));\\n\\t\\t\\t\\tif (rightValue < 0) {\\n\\t\\t\\t\\t\\treturn yScale.getPixelForValue(sumNeg + rightValue);\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\treturn yScale.getPixelForValue(sumPos + rightValue);\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn yScale.getPixelForValue(value);\\n\\t\\t},\\n\\n\\t\\tupdateBezierControlPoints: function() {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\tvar meta = me.getMeta();\\n\\t\\t\\tvar area = me.chart.chartArea;\\n\\t\\t\\tvar points = (meta.data || []);\\n\\t\\t\\tvar i, ilen, point, model, controlPoints;\\n\\n\\t\\t\\t// Only consider points that are drawn in case the spanGaps option is used\\n\\t\\t\\tif (meta.dataset._model.spanGaps) {\\n\\t\\t\\t\\tpoints = points.filter(function(pt) {\\n\\t\\t\\t\\t\\treturn !pt._model.skip;\\n\\t\\t\\t\\t});\\n\\t\\t\\t}\\n\\n\\t\\t\\tfunction capControlPoint(pt, min, max) {\\n\\t\\t\\t\\treturn Math.max(Math.min(pt, max), min);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (meta.dataset._model.cubicInterpolationMode === 'monotone') {\\n\\t\\t\\t\\thelpers.splineCurveMonotone(points);\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\\n\\t\\t\\t\\t\\tpoint = points[i];\\n\\t\\t\\t\\t\\tmodel = point._model;\\n\\t\\t\\t\\t\\tcontrolPoints = helpers.splineCurve(\\n\\t\\t\\t\\t\\t\\thelpers.previousItem(points, i)._model,\\n\\t\\t\\t\\t\\t\\tmodel,\\n\\t\\t\\t\\t\\t\\thelpers.nextItem(points, i)._model,\\n\\t\\t\\t\\t\\t\\tmeta.dataset._model.tension\\n\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t\\tmodel.controlPointPreviousX = controlPoints.previous.x;\\n\\t\\t\\t\\t\\tmodel.controlPointPreviousY = controlPoints.previous.y;\\n\\t\\t\\t\\t\\tmodel.controlPointNextX = controlPoints.next.x;\\n\\t\\t\\t\\t\\tmodel.controlPointNextY = controlPoints.next.y;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (me.chart.options.elements.line.capBezierPoints) {\\n\\t\\t\\t\\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\\n\\t\\t\\t\\t\\tmodel = points[i]._model;\\n\\t\\t\\t\\t\\tmodel.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\\n\\t\\t\\t\\t\\tmodel.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\\n\\t\\t\\t\\t\\tmodel.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\\n\\t\\t\\t\\t\\tmodel.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t},\\n\\n\\t\\tdraw: function() {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\tvar chart = me.chart;\\n\\t\\t\\tvar meta = me.getMeta();\\n\\t\\t\\tvar points = meta.data || [];\\n\\t\\t\\tvar area = chart.chartArea;\\n\\t\\t\\tvar ilen = points.length;\\n\\t\\t\\tvar i = 0;\\n\\n\\t\\t\\thelpers.canvas.clipArea(chart.ctx, area);\\n\\n\\t\\t\\tif (lineEnabled(me.getDataset(), chart.options)) {\\n\\t\\t\\t\\tmeta.dataset.draw();\\n\\t\\t\\t}\\n\\n\\t\\t\\thelpers.canvas.unclipArea(chart.ctx);\\n\\n\\t\\t\\t// Draw the points\\n\\t\\t\\tfor (; i < ilen; ++i) {\\n\\t\\t\\t\\tpoints[i].draw(area);\\n\\t\\t\\t}\\n\\t\\t},\\n\\n\\t\\tsetHoverStyle: function(point) {\\n\\t\\t\\t// Point\\n\\t\\t\\tvar dataset = this.chart.data.datasets[point._datasetIndex];\\n\\t\\t\\tvar index = point._index;\\n\\t\\t\\tvar custom = point.custom || {};\\n\\t\\t\\tvar model = point._model;\\n\\n\\t\\t\\tmodel.radius = custom.hoverRadius || helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\\n\\t\\t\\tmodel.backgroundColor = custom.hoverBackgroundColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\\n\\t\\t\\tmodel.borderColor = custom.hoverBorderColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\\n\\t\\t\\tmodel.borderWidth = custom.hoverBorderWidth || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\\n\\t\\t},\\n\\n\\t\\tremoveHoverStyle: function(point) {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\tvar dataset = me.chart.data.datasets[point._datasetIndex];\\n\\t\\t\\tvar index = point._index;\\n\\t\\t\\tvar custom = point.custom || {};\\n\\t\\t\\tvar model = point._model;\\n\\n\\t\\t\\t// Compatibility: If the properties are defined with only the old name, use those values\\n\\t\\t\\tif ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\\n\\t\\t\\t\\tdataset.pointRadius = dataset.radius;\\n\\t\\t\\t}\\n\\n\\t\\t\\tmodel.radius = custom.radius || helpers.valueAtIndexOrDefault(dataset.pointRadius, index, me.chart.options.elements.point.radius);\\n\\t\\t\\tmodel.backgroundColor = me.getPointBackgroundColor(point, index);\\n\\t\\t\\tmodel.borderColor = me.getPointBorderColor(point, index);\\n\\t\\t\\tmodel.borderWidth = me.getPointBorderWidth(point, index);\\n\\t\\t}\\n\\t});\\n};\\n\\n},{\\\"25\\\":25,\\\"40\\\":40,\\\"45\\\":45}],19:[function(require,module,exports){\\n'use strict';\\n\\nvar defaults = require(25);\\nvar elements = require(40);\\nvar helpers = require(45);\\n\\ndefaults._set('polarArea', {\\n\\tscale: {\\n\\t\\ttype: 'radialLinear',\\n\\t\\tangleLines: {\\n\\t\\t\\tdisplay: false\\n\\t\\t},\\n\\t\\tgridLines: {\\n\\t\\t\\tcircular: true\\n\\t\\t},\\n\\t\\tpointLabels: {\\n\\t\\t\\tdisplay: false\\n\\t\\t},\\n\\t\\tticks: {\\n\\t\\t\\tbeginAtZero: true\\n\\t\\t}\\n\\t},\\n\\n\\t// Boolean - Whether to animate the rotation of the chart\\n\\tanimation: {\\n\\t\\tanimateRotate: true,\\n\\t\\tanimateScale: true\\n\\t},\\n\\n\\tstartAngle: -0.5 * Math.PI,\\n\\tlegendCallback: function(chart) {\\n\\t\\tvar text = [];\\n\\t\\ttext.push('<ul class=\\\"' + chart.id + '-legend\\\">');\\n\\n\\t\\tvar data = chart.data;\\n\\t\\tvar datasets = data.datasets;\\n\\t\\tvar labels = data.labels;\\n\\n\\t\\tif (datasets.length) {\\n\\t\\t\\tfor (var i = 0; i < datasets[0].data.length; ++i) {\\n\\t\\t\\t\\ttext.push('<li><span style=\\\"background-color:' + datasets[0].backgroundColor[i] + '\\\"></span>');\\n\\t\\t\\t\\tif (labels[i]) {\\n\\t\\t\\t\\t\\ttext.push(labels[i]);\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\ttext.push('</li>');\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\ttext.push('</ul>');\\n\\t\\treturn text.join('');\\n\\t},\\n\\tlegend: {\\n\\t\\tlabels: {\\n\\t\\t\\tgenerateLabels: function(chart) {\\n\\t\\t\\t\\tvar data = chart.data;\\n\\t\\t\\t\\tif (data.labels.length && data.datasets.length) {\\n\\t\\t\\t\\t\\treturn data.labels.map(function(label, i) {\\n\\t\\t\\t\\t\\t\\tvar meta = chart.getDatasetMeta(0);\\n\\t\\t\\t\\t\\t\\tvar ds = data.datasets[0];\\n\\t\\t\\t\\t\\t\\tvar arc = meta.data[i];\\n\\t\\t\\t\\t\\t\\tvar custom = arc.custom || {};\\n\\t\\t\\t\\t\\t\\tvar valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\\n\\t\\t\\t\\t\\t\\tvar arcOpts = chart.options.elements.arc;\\n\\t\\t\\t\\t\\t\\tvar fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\\n\\t\\t\\t\\t\\t\\tvar stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\\n\\t\\t\\t\\t\\t\\tvar bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\\n\\n\\t\\t\\t\\t\\t\\treturn {\\n\\t\\t\\t\\t\\t\\t\\ttext: label,\\n\\t\\t\\t\\t\\t\\t\\tfillStyle: fill,\\n\\t\\t\\t\\t\\t\\t\\tstrokeStyle: stroke,\\n\\t\\t\\t\\t\\t\\t\\tlineWidth: bw,\\n\\t\\t\\t\\t\\t\\t\\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\\n\\n\\t\\t\\t\\t\\t\\t\\t// Extra data used for toggling the correct item\\n\\t\\t\\t\\t\\t\\t\\tindex: i\\n\\t\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\treturn [];\\n\\t\\t\\t}\\n\\t\\t},\\n\\n\\t\\tonClick: function(e, legendItem) {\\n\\t\\t\\tvar index = legendItem.index;\\n\\t\\t\\tvar chart = this.chart;\\n\\t\\t\\tvar i, ilen, meta;\\n\\n\\t\\t\\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\\n\\t\\t\\t\\tmeta = chart.getDatasetMeta(i);\\n\\t\\t\\t\\tmeta.data[index].hidden = !meta.data[index].hidden;\\n\\t\\t\\t}\\n\\n\\t\\t\\tchart.update();\\n\\t\\t}\\n\\t},\\n\\n\\t// Need to override these to give a nice default\\n\\ttooltips: {\\n\\t\\tcallbacks: {\\n\\t\\t\\ttitle: function() {\\n\\t\\t\\t\\treturn '';\\n\\t\\t\\t},\\n\\t\\t\\tlabel: function(item, data) {\\n\\t\\t\\t\\treturn data.labels[item.index] + ': ' + item.yLabel;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n});\\n\\nmodule.exports = function(Chart) {\\n\\n\\tChart.controllers.polarArea = Chart.DatasetController.extend({\\n\\n\\t\\tdataElementType: elements.Arc,\\n\\n\\t\\tlinkScales: helpers.noop,\\n\\n\\t\\tupdate: function(reset) {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\tvar chart = me.chart;\\n\\t\\t\\tvar chartArea = chart.chartArea;\\n\\t\\t\\tvar meta = me.getMeta();\\n\\t\\t\\tvar opts = chart.options;\\n\\t\\t\\tvar arcOpts = opts.elements.arc;\\n\\t\\t\\tvar minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\\n\\t\\t\\tchart.outerRadius = Math.max((minSize - arcOpts.borderWidth / 2) / 2, 0);\\n\\t\\t\\tchart.innerRadius = Math.max(opts.cutoutPercentage ? (chart.outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\\n\\t\\t\\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\\n\\n\\t\\t\\tme.outerRadius = chart.outerRadius - (chart.radiusLength * me.index);\\n\\t\\t\\tme.innerRadius = me.outerRadius - chart.radiusLength;\\n\\n\\t\\t\\tmeta.count = me.countVisibleElements();\\n\\n\\t\\t\\thelpers.each(meta.data, function(arc, index) {\\n\\t\\t\\t\\tme.updateElement(arc, index, reset);\\n\\t\\t\\t});\\n\\t\\t},\\n\\n\\t\\tupdateElement: function(arc, index, reset) {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\tvar chart = me.chart;\\n\\t\\t\\tvar dataset = me.getDataset();\\n\\t\\t\\tvar opts = chart.options;\\n\\t\\t\\tvar animationOpts = opts.animation;\\n\\t\\t\\tvar scale = chart.scale;\\n\\t\\t\\tvar labels = chart.data.labels;\\n\\n\\t\\t\\tvar circumference = me.calculateCircumference(dataset.data[index]);\\n\\t\\t\\tvar centerX = scale.xCenter;\\n\\t\\t\\tvar centerY = scale.yCenter;\\n\\n\\t\\t\\t// If there is NaN data before us, we need to calculate the starting angle correctly.\\n\\t\\t\\t// We could be way more efficient here, but its unlikely that the polar area chart will have a lot of data\\n\\t\\t\\tvar visibleCount = 0;\\n\\t\\t\\tvar meta = me.getMeta();\\n\\t\\t\\tfor (var i = 0; i < index; ++i) {\\n\\t\\t\\t\\tif (!isNaN(dataset.data[i]) && !meta.data[i].hidden) {\\n\\t\\t\\t\\t\\t++visibleCount;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\t// var negHalfPI = -0.5 * Math.PI;\\n\\t\\t\\tvar datasetStartAngle = opts.startAngle;\\n\\t\\t\\tvar distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\\n\\t\\t\\tvar startAngle = datasetStartAngle + (circumference * visibleCount);\\n\\t\\t\\tvar endAngle = startAngle + (arc.hidden ? 0 : circumference);\\n\\n\\t\\t\\tvar resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\\n\\n\\t\\t\\thelpers.extend(arc, {\\n\\t\\t\\t\\t// Utility\\n\\t\\t\\t\\t_datasetIndex: me.index,\\n\\t\\t\\t\\t_index: index,\\n\\t\\t\\t\\t_scale: scale,\\n\\n\\t\\t\\t\\t// Desired view properties\\n\\t\\t\\t\\t_model: {\\n\\t\\t\\t\\t\\tx: centerX,\\n\\t\\t\\t\\t\\ty: centerY,\\n\\t\\t\\t\\t\\tinnerRadius: 0,\\n\\t\\t\\t\\t\\touterRadius: reset ? resetRadius : distance,\\n\\t\\t\\t\\t\\tstartAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\\n\\t\\t\\t\\t\\tendAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\\n\\t\\t\\t\\t\\tlabel: helpers.valueAtIndexOrDefault(labels, index, labels[index])\\n\\t\\t\\t\\t}\\n\\t\\t\\t});\\n\\n\\t\\t\\t// Apply border and fill style\\n\\t\\t\\tme.removeHoverStyle(arc);\\n\\n\\t\\t\\tarc.pivot();\\n\\t\\t},\\n\\n\\t\\tremoveHoverStyle: function(arc) {\\n\\t\\t\\tChart.DatasetController.prototype.removeHoverStyle.call(this, arc, this.chart.options.elements.arc);\\n\\t\\t},\\n\\n\\t\\tcountVisibleElements: function() {\\n\\t\\t\\tvar dataset = this.getDataset();\\n\\t\\t\\tvar meta = this.getMeta();\\n\\t\\t\\tvar count = 0;\\n\\n\\t\\t\\thelpers.each(meta.data, function(element, index) {\\n\\t\\t\\t\\tif (!isNaN(dataset.data[index]) && !element.hidden) {\\n\\t\\t\\t\\t\\tcount++;\\n\\t\\t\\t\\t}\\n\\t\\t\\t});\\n\\n\\t\\t\\treturn count;\\n\\t\\t},\\n\\n\\t\\tcalculateCircumference: function(value) {\\n\\t\\t\\tvar count = this.getMeta().count;\\n\\t\\t\\tif (count > 0 && !isNaN(value)) {\\n\\t\\t\\t\\treturn (2 * Math.PI) / count;\\n\\t\\t\\t}\\n\\t\\t\\treturn 0;\\n\\t\\t}\\n\\t});\\n};\\n\\n},{\\\"25\\\":25,\\\"40\\\":40,\\\"45\\\":45}],20:[function(require,module,exports){\\n'use strict';\\n\\nvar defaults = require(25);\\nvar elements = require(40);\\nvar helpers = require(45);\\n\\ndefaults._set('radar', {\\n\\tscale: {\\n\\t\\ttype: 'radialLinear'\\n\\t},\\n\\telements: {\\n\\t\\tline: {\\n\\t\\t\\ttension: 0 // no bezier in radar\\n\\t\\t}\\n\\t}\\n});\\n\\nmodule.exports = function(Chart) {\\n\\n\\tChart.controllers.radar = Chart.DatasetController.extend({\\n\\n\\t\\tdatasetElementType: elements.Line,\\n\\n\\t\\tdataElementType: elements.Point,\\n\\n\\t\\tlinkScales: helpers.noop,\\n\\n\\t\\tupdate: function(reset) {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\tvar meta = me.getMeta();\\n\\t\\t\\tvar line = meta.dataset;\\n\\t\\t\\tvar points = meta.data;\\n\\t\\t\\tvar custom = line.custom || {};\\n\\t\\t\\tvar dataset = me.getDataset();\\n\\t\\t\\tvar lineElementOptions = me.chart.options.elements.line;\\n\\t\\t\\tvar scale = me.chart.scale;\\n\\n\\t\\t\\t// Compatibility: If the properties are defined with only the old name, use those values\\n\\t\\t\\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\\n\\t\\t\\t\\tdataset.lineTension = dataset.tension;\\n\\t\\t\\t}\\n\\n\\t\\t\\thelpers.extend(meta.dataset, {\\n\\t\\t\\t\\t// Utility\\n\\t\\t\\t\\t_datasetIndex: me.index,\\n\\t\\t\\t\\t_scale: scale,\\n\\t\\t\\t\\t// Data\\n\\t\\t\\t\\t_children: points,\\n\\t\\t\\t\\t_loop: true,\\n\\t\\t\\t\\t// Model\\n\\t\\t\\t\\t_model: {\\n\\t\\t\\t\\t\\t// Appearance\\n\\t\\t\\t\\t\\ttension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),\\n\\t\\t\\t\\t\\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),\\n\\t\\t\\t\\t\\tborderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),\\n\\t\\t\\t\\t\\tborderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),\\n\\t\\t\\t\\t\\tfill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),\\n\\t\\t\\t\\t\\tborderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),\\n\\t\\t\\t\\t\\tborderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),\\n\\t\\t\\t\\t\\tborderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),\\n\\t\\t\\t\\t\\tborderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),\\n\\t\\t\\t\\t}\\n\\t\\t\\t});\\n\\n\\t\\t\\tmeta.dataset.pivot();\\n\\n\\t\\t\\t// Update Points\\n\\t\\t\\thelpers.each(points, function(point, index) {\\n\\t\\t\\t\\tme.updateElement(point, index, reset);\\n\\t\\t\\t}, me);\\n\\n\\t\\t\\t// Update bezier control points\\n\\t\\t\\tme.updateBezierControlPoints();\\n\\t\\t},\\n\\t\\tupdateElement: function(point, index, reset) {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\tvar custom = point.custom || {};\\n\\t\\t\\tvar dataset = me.getDataset();\\n\\t\\t\\tvar scale = me.chart.scale;\\n\\t\\t\\tvar pointElementOptions = me.chart.options.elements.point;\\n\\t\\t\\tvar pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\\n\\n\\t\\t\\t// Compatibility: If the properties are defined with only the old name, use those values\\n\\t\\t\\tif ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\\n\\t\\t\\t\\tdataset.pointRadius = dataset.radius;\\n\\t\\t\\t}\\n\\t\\t\\tif ((dataset.hitRadius !== undefined) && (dataset.pointHitRadius === undefined)) {\\n\\t\\t\\t\\tdataset.pointHitRadius = dataset.hitRadius;\\n\\t\\t\\t}\\n\\n\\t\\t\\thelpers.extend(point, {\\n\\t\\t\\t\\t// Utility\\n\\t\\t\\t\\t_datasetIndex: me.index,\\n\\t\\t\\t\\t_index: index,\\n\\t\\t\\t\\t_scale: scale,\\n\\n\\t\\t\\t\\t// Desired view properties\\n\\t\\t\\t\\t_model: {\\n\\t\\t\\t\\t\\tx: reset ? scale.xCenter : pointPosition.x, // value not used in dataset scale, but we want a consistent API between scales\\n\\t\\t\\t\\t\\ty: reset ? scale.yCenter : pointPosition.y,\\n\\n\\t\\t\\t\\t\\t// Appearance\\n\\t\\t\\t\\t\\ttension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, me.chart.options.elements.line.tension),\\n\\t\\t\\t\\t\\tradius: custom.radius ? custom.radius : helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointElementOptions.radius),\\n\\t\\t\\t\\t\\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor),\\n\\t\\t\\t\\t\\tborderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor),\\n\\t\\t\\t\\t\\tborderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth),\\n\\t\\t\\t\\t\\tpointStyle: custom.pointStyle ? custom.pointStyle : helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointElementOptions.pointStyle),\\n\\n\\t\\t\\t\\t\\t// Tooltip\\n\\t\\t\\t\\t\\thitRadius: custom.hitRadius ? custom.hitRadius : helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointElementOptions.hitRadius)\\n\\t\\t\\t\\t}\\n\\t\\t\\t});\\n\\n\\t\\t\\tpoint._model.skip = custom.skip ? custom.skip : (isNaN(point._model.x) || isNaN(point._model.y));\\n\\t\\t},\\n\\t\\tupdateBezierControlPoints: function() {\\n\\t\\t\\tvar chartArea = this.chart.chartArea;\\n\\t\\t\\tvar meta = this.getMeta();\\n\\n\\t\\t\\thelpers.each(meta.data, function(point, index) {\\n\\t\\t\\t\\tvar model = point._model;\\n\\t\\t\\t\\tvar controlPoints = helpers.splineCurve(\\n\\t\\t\\t\\t\\thelpers.previousItem(meta.data, index, true)._model,\\n\\t\\t\\t\\t\\tmodel,\\n\\t\\t\\t\\t\\thelpers.nextItem(meta.data, index, true)._model,\\n\\t\\t\\t\\t\\tmodel.tension\\n\\t\\t\\t\\t);\\n\\n\\t\\t\\t\\t// Prevent the bezier going outside of the bounds of the graph\\n\\t\\t\\t\\tmodel.controlPointPreviousX = Math.max(Math.min(controlPoints.previous.x, chartArea.right), chartArea.left);\\n\\t\\t\\t\\tmodel.controlPointPreviousY = Math.max(Math.min(controlPoints.previous.y, chartArea.bottom), chartArea.top);\\n\\n\\t\\t\\t\\tmodel.controlPointNextX = Math.max(Math.min(controlPoints.next.x, chartArea.right), chartArea.left);\\n\\t\\t\\t\\tmodel.controlPointNextY = Math.max(Math.min(controlPoints.next.y, chartArea.bottom), chartArea.top);\\n\\n\\t\\t\\t\\t// Now pivot the point for animation\\n\\t\\t\\t\\tpoint.pivot();\\n\\t\\t\\t});\\n\\t\\t},\\n\\n\\t\\tsetHoverStyle: function(point) {\\n\\t\\t\\t// Point\\n\\t\\t\\tvar dataset = this.chart.data.datasets[point._datasetIndex];\\n\\t\\t\\tvar custom = point.custom || {};\\n\\t\\t\\tvar index = point._index;\\n\\t\\t\\tvar model = point._model;\\n\\n\\t\\t\\tmodel.radius = custom.hoverRadius ? custom.hoverRadius : helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\\n\\t\\t\\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\\n\\t\\t\\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\\n\\t\\t\\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\\n\\t\\t},\\n\\n\\t\\tremoveHoverStyle: function(point) {\\n\\t\\t\\tvar dataset = this.chart.data.datasets[point._datasetIndex];\\n\\t\\t\\tvar custom = point.custom || {};\\n\\t\\t\\tvar index = point._index;\\n\\t\\t\\tvar model = point._model;\\n\\t\\t\\tvar pointElementOptions = this.chart.options.elements.point;\\n\\n\\t\\t\\tmodel.radius = custom.radius ? custom.radius : helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointElementOptions.radius);\\n\\t\\t\\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor);\\n\\t\\t\\tmodel.borderColor = custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor);\\n\\t\\t\\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth);\\n\\t\\t}\\n\\t});\\n};\\n\\n},{\\\"25\\\":25,\\\"40\\\":40,\\\"45\\\":45}],21:[function(require,module,exports){\\n'use strict';\\n\\nvar defaults = require(25);\\n\\ndefaults._set('scatter', {\\n\\thover: {\\n\\t\\tmode: 'single'\\n\\t},\\n\\n\\tscales: {\\n\\t\\txAxes: [{\\n\\t\\t\\tid: 'x-axis-1',    // need an ID so datasets can reference the scale\\n\\t\\t\\ttype: 'linear',    // scatter should not use a category axis\\n\\t\\t\\tposition: 'bottom'\\n\\t\\t}],\\n\\t\\tyAxes: [{\\n\\t\\t\\tid: 'y-axis-1',\\n\\t\\t\\ttype: 'linear',\\n\\t\\t\\tposition: 'left'\\n\\t\\t}]\\n\\t},\\n\\n\\tshowLines: false,\\n\\n\\ttooltips: {\\n\\t\\tcallbacks: {\\n\\t\\t\\ttitle: function() {\\n\\t\\t\\t\\treturn '';     // doesn't make sense for scatter since data are formatted as a point\\n\\t\\t\\t},\\n\\t\\t\\tlabel: function(item) {\\n\\t\\t\\t\\treturn '(' + item.xLabel + ', ' + item.yLabel + ')';\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n});\\n\\nmodule.exports = function(Chart) {\\n\\n\\t// Scatter charts use line controllers\\n\\tChart.controllers.scatter = Chart.controllers.line;\\n\\n};\\n\\n},{\\\"25\\\":25}],22:[function(require,module,exports){\\n/* global window: false */\\n'use strict';\\n\\nvar defaults = require(25);\\nvar Element = require(26);\\nvar helpers = require(45);\\n\\ndefaults._set('global', {\\n\\tanimation: {\\n\\t\\tduration: 1000,\\n\\t\\teasing: 'easeOutQuart',\\n\\t\\tonProgress: helpers.noop,\\n\\t\\tonComplete: helpers.noop\\n\\t}\\n});\\n\\nmodule.exports = function(Chart) {\\n\\n\\tChart.Animation = Element.extend({\\n\\t\\tchart: null, // the animation associated chart instance\\n\\t\\tcurrentStep: 0, // the current animation step\\n\\t\\tnumSteps: 60, // default number of steps\\n\\t\\teasing: '', // the easing to use for this animation\\n\\t\\trender: null, // render function used by the animation service\\n\\n\\t\\tonAnimationProgress: null, // user specified callback to fire on each step of the animation\\n\\t\\tonAnimationComplete: null, // user specified callback to fire when the animation finishes\\n\\t});\\n\\n\\tChart.animationService = {\\n\\t\\tframeDuration: 17,\\n\\t\\tanimations: [],\\n\\t\\tdropFrames: 0,\\n\\t\\trequest: null,\\n\\n\\t\\t/**\\n\\t\\t * @param {Chart} chart - The chart to animate.\\n\\t\\t * @param {Chart.Animation} animation - The animation that we will animate.\\n\\t\\t * @param {Number} duration - The animation duration in ms.\\n\\t\\t * @param {Boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\\n\\t\\t */\\n\\t\\taddAnimation: function(chart, animation, duration, lazy) {\\n\\t\\t\\tvar animations = this.animations;\\n\\t\\t\\tvar i, ilen;\\n\\n\\t\\t\\tanimation.chart = chart;\\n\\n\\t\\t\\tif (!lazy) {\\n\\t\\t\\t\\tchart.animating = true;\\n\\t\\t\\t}\\n\\n\\t\\t\\tfor (i = 0, ilen = animations.length; i < ilen; ++i) {\\n\\t\\t\\t\\tif (animations[i].chart === chart) {\\n\\t\\t\\t\\t\\tanimations[i] = animation;\\n\\t\\t\\t\\t\\treturn;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\tanimations.push(animation);\\n\\n\\t\\t\\t// If there are no animations queued, manually kickstart a digest, for lack of a better word\\n\\t\\t\\tif (animations.length === 1) {\\n\\t\\t\\t\\tthis.requestAnimationFrame();\\n\\t\\t\\t}\\n\\t\\t},\\n\\n\\t\\tcancelAnimation: function(chart) {\\n\\t\\t\\tvar index = helpers.findIndex(this.animations, function(animation) {\\n\\t\\t\\t\\treturn animation.chart === chart;\\n\\t\\t\\t});\\n\\n\\t\\t\\tif (index !== -1) {\\n\\t\\t\\t\\tthis.animations.splice(index, 1);\\n\\t\\t\\t\\tchart.animating = false;\\n\\t\\t\\t}\\n\\t\\t},\\n\\n\\t\\trequestAnimationFrame: function() {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\tif (me.request === null) {\\n\\t\\t\\t\\t// Skip animation frame requests until the active one is executed.\\n\\t\\t\\t\\t// This can happen when processing mouse events, e.g. 'mousemove'\\n\\t\\t\\t\\t// and 'mouseout' events will trigger multiple renders.\\n\\t\\t\\t\\tme.request = helpers.requestAnimFrame.call(window, function() {\\n\\t\\t\\t\\t\\tme.request = null;\\n\\t\\t\\t\\t\\tme.startDigest();\\n\\t\\t\\t\\t});\\n\\t\\t\\t}\\n\\t\\t},\\n\\n\\t\\t/**\\n\\t\\t * @private\\n\\t\\t */\\n\\t\\tstartDigest: function() {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\tvar startTime = Date.now();\\n\\t\\t\\tvar framesToDrop = 0;\\n\\n\\t\\t\\tif (me.dropFrames > 1) {\\n\\t\\t\\t\\tframesToDrop = Math.floor(me.dropFrames);\\n\\t\\t\\t\\tme.dropFrames = me.dropFrames % 1;\\n\\t\\t\\t}\\n\\n\\t\\t\\tme.advance(1 + framesToDrop);\\n\\n\\t\\t\\tvar endTime = Date.now();\\n\\n\\t\\t\\tme.dropFrames += (endTime - startTime) / me.frameDuration;\\n\\n\\t\\t\\t// Do we have more stuff to animate?\\n\\t\\t\\tif (me.animations.length > 0) {\\n\\t\\t\\t\\tme.requestAnimationFrame();\\n\\t\\t\\t}\\n\\t\\t},\\n\\n\\t\\t/**\\n\\t\\t * @private\\n\\t\\t */\\n\\t\\tadvance: function(count) {\\n\\t\\t\\tvar animations = this.animations;\\n\\t\\t\\tvar animation, chart;\\n\\t\\t\\tvar i = 0;\\n\\n\\t\\t\\twhile (i < animations.length) {\\n\\t\\t\\t\\tanimation = animations[i];\\n\\t\\t\\t\\tchart = animation.chart;\\n\\n\\t\\t\\t\\tanimation.currentStep = (animation.currentStep || 0) + count;\\n\\t\\t\\t\\tanimation.currentStep = Math.min(animation.currentStep, animation.numSteps);\\n\\n\\t\\t\\t\\thelpers.callback(animation.render, [chart, animation], chart);\\n\\t\\t\\t\\thelpers.callback(animation.onAnimationProgress, [animation], chart);\\n\\n\\t\\t\\t\\tif (animation.currentStep >= animation.numSteps) {\\n\\t\\t\\t\\t\\thelpers.callback(animation.onAnimationComplete, [animation], chart);\\n\\t\\t\\t\\t\\tchart.animating = false;\\n\\t\\t\\t\\t\\tanimations.splice(i, 1);\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t++i;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t};\\n\\n\\t/**\\n\\t * Provided for backward compatibility, use Chart.Animation instead\\n\\t * @prop Chart.Animation#animationObject\\n\\t * @deprecated since version 2.6.0\\n\\t * @todo remove at version 3\\n\\t */\\n\\tObject.defineProperty(Chart.Animation.prototype, 'animationObject', {\\n\\t\\tget: function() {\\n\\t\\t\\treturn this;\\n\\t\\t}\\n\\t});\\n\\n\\t/**\\n\\t * Provided for backward compatibility, use Chart.Animation#chart instead\\n\\t * @prop Chart.Animation#chartInstance\\n\\t * @deprecated since version 2.6.0\\n\\t * @todo remove at version 3\\n\\t */\\n\\tObject.defineProperty(Chart.Animation.prototype, 'chartInstance', {\\n\\t\\tget: function() {\\n\\t\\t\\treturn this.chart;\\n\\t\\t},\\n\\t\\tset: function(value) {\\n\\t\\t\\tthis.chart = value;\\n\\t\\t}\\n\\t});\\n\\n};\\n\\n},{\\\"25\\\":25,\\\"26\\\":26,\\\"45\\\":45}],23:[function(require,module,exports){\\n'use strict';\\n\\nvar defaults = require(25);\\nvar helpers = require(45);\\nvar Interaction = require(28);\\nvar platform = require(48);\\n\\nmodule.exports = function(Chart) {\\n\\tvar plugins = Chart.plugins;\\n\\n\\t// Create a dictionary of chart types, to allow for extension of existing types\\n\\tChart.types = {};\\n\\n\\t// Store a reference to each instance - allowing us to globally resize chart instances on window resize.\\n\\t// Destroy method on the chart will remove the instance of the chart from this reference.\\n\\tChart.instances = {};\\n\\n\\t// Controllers available for dataset visualization eg. bar, line, slice, etc.\\n\\tChart.controllers = {};\\n\\n\\t/**\\n\\t * Initializes the given config with global and chart default values.\\n\\t */\\n\\tfunction initConfig(config) {\\n\\t\\tconfig = config || {};\\n\\n\\t\\t// Do NOT use configMerge() for the data object because this method merges arrays\\n\\t\\t// and so would change references to labels and datasets, preventing data updates.\\n\\t\\tvar data = config.data = config.data || {};\\n\\t\\tdata.datasets = data.datasets || [];\\n\\t\\tdata.labels = data.labels || [];\\n\\n\\t\\tconfig.options = helpers.configMerge(\\n\\t\\t\\tdefaults.global,\\n\\t\\t\\tdefaults[config.type],\\n\\t\\t\\tconfig.options || {});\\n\\n\\t\\treturn config;\\n\\t}\\n\\n\\t/**\\n\\t * Updates the config of the chart\\n\\t * @param chart {Chart} chart to update the options for\\n\\t */\\n\\tfunction updateConfig(chart) {\\n\\t\\tvar newOptions = chart.options;\\n\\n\\t\\t// Update Scale(s) with options\\n\\t\\tif (newOptions.scale) {\\n\\t\\t\\tchart.scale.options = newOptions.scale;\\n\\t\\t} else if (newOptions.scales) {\\n\\t\\t\\tnewOptions.scales.xAxes.concat(newOptions.scales.yAxes).forEach(function(scaleOptions) {\\n\\t\\t\\t\\tchart.scales[scaleOptions.id].options = scaleOptions;\\n\\t\\t\\t});\\n\\t\\t}\\n\\n\\t\\t// Tooltip\\n\\t\\tchart.tooltip._options = newOptions.tooltips;\\n\\t}\\n\\n\\tfunction positionIsHorizontal(position) {\\n\\t\\treturn position === 'top' || position === 'bottom';\\n\\t}\\n\\n\\thelpers.extend(Chart.prototype, /** @lends Chart */ {\\n\\t\\t/**\\n\\t\\t * @private\\n\\t\\t */\\n\\t\\tconstruct: function(item, config) {\\n\\t\\t\\tvar me = this;\\n\\n\\t\\t\\tconfig = initConfig(config);\\n\\n\\t\\t\\tvar context = platform.acquireContext(item, config);\\n\\t\\t\\tvar canvas = context && context.canvas;\\n\\t\\t\\tvar height = canvas && canvas.height;\\n\\t\\t\\tvar width = canvas && canvas.width;\\n\\n\\t\\t\\tme.id = helpers.uid();\\n\\t\\t\\tme.ctx = context;\\n\\t\\t\\tme.canvas = canvas;\\n\\t\\t\\tme.config = config;\\n\\t\\t\\tme.width = width;\\n\\t\\t\\tme.height = height;\\n\\t\\t\\tme.aspectRatio = height ? width / height : null;\\n\\t\\t\\tme.options = config.options;\\n\\t\\t\\tme._bufferedRender = false;\\n\\n\\t\\t\\t/**\\n\\t\\t\\t * Provided for backward compatibility, Chart and Chart.Controller have been merged,\\n\\t\\t\\t * the \\\"instance\\\" still need to be defined since it might be called from plugins.\\n\\t\\t\\t * @prop Chart#chart\\n\\t\\t\\t * @deprecated since version 2.6.0\\n\\t\\t\\t * @todo remove at version 3\\n\\t\\t\\t * @private\\n\\t\\t\\t */\\n\\t\\t\\tme.chart = me;\\n\\t\\t\\tme.controller = me; // chart.chart.controller #inception\\n\\n\\t\\t\\t// Add the chart instance to the global namespace\\n\\t\\t\\tChart.instances[me.id] = me;\\n\\n\\t\\t\\t// Define alias to the config data: `chart.data === chart.config.data`\\n\\t\\t\\tObject.defineProperty(me, 'data', {\\n\\t\\t\\t\\tget: function() {\\n\\t\\t\\t\\t\\treturn me.config.data;\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\tset: function(value) {\\n\\t\\t\\t\\t\\tme.config.data = value;\\n\\t\\t\\t\\t}\\n\\t\\t\\t});\\n\\n\\t\\t\\tif (!context || !canvas) {\\n\\t\\t\\t\\t// The given item is not a compatible context2d element, let's return before finalizing\\n\\t\\t\\t\\t// the chart initialization but after setting basic chart / controller properties that\\n\\t\\t\\t\\t// can help to figure out that the chart is not valid (e.g chart.canvas !== null);\\n\\t\\t\\t\\t// https://github.com/chartjs/Chart.js/issues/2807\\n\\t\\t\\t\\tconsole.error(\\\"Failed to create chart: can't acquire context from the given item\\\");\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\n\\t\\t\\tme.initialize();\\n\\t\\t\\tme.update();\\n\\t\\t},\\n\\n\\t\\t/**\\n\\t\\t * @private\\n\\t\\t */\\n\\t\\tinitialize: function() {\\n\\t\\t\\tvar me = this;\\n\\n\\t\\t\\t// Before init plugin notification\\n\\t\\t\\tplugins.notify(me, 'beforeInit');\\n\\n\\t\\t\\thelpers.retinaScale(me, me.options.devicePixelRatio);\\n\\n\\t\\t\\tme.bindEvents();\\n\\n\\t\\t\\tif (me.options.responsive) {\\n\\t\\t\\t\\t// Initial resize before chart draws (must be silent to preserve initial animations).\\n\\t\\t\\t\\tme.resize(true);\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Make sure scales have IDs and are built before we build any controllers.\\n\\t\\t\\tme.ensureScalesHaveIDs();\\n\\t\\t\\tme.buildScales();\\n\\t\\t\\tme.initToolTip();\\n\\n\\t\\t\\t// After init plugin notification\\n\\t\\t\\tplugins.notify(me, 'afterInit');\\n\\n\\t\\t\\treturn me;\\n\\t\\t},\\n\\n\\t\\tclear: function() {\\n\\t\\t\\thelpers.canvas.clear(this);\\n\\t\\t\\treturn this;\\n\\t\\t},\\n\\n\\t\\tstop: function() {\\n\\t\\t\\t// Stops any current animation loop occurring\\n\\t\\t\\tChart.animationService.cancelAnimation(this);\\n\\t\\t\\treturn this;\\n\\t\\t},\\n\\n\\t\\tresize: function(silent) {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\tvar options = me.options;\\n\\t\\t\\tvar canvas = me.canvas;\\n\\t\\t\\tvar aspectRatio = (options.maintainAspectRatio && me.aspectRatio) || null;\\n\\n\\t\\t\\t// the canvas render width and height will be casted to integers so make sure that\\n\\t\\t\\t// the canvas display style uses the same integer values to avoid blurring effect.\\n\\n\\t\\t\\t// Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collased\\n\\t\\t\\tvar newWidth = Math.max(0, Math.floor(helpers.getMaximumWidth(canvas)));\\n\\t\\t\\tvar newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers.getMaximumHeight(canvas)));\\n\\n\\t\\t\\tif (me.width === newWidth && me.height === newHeight) {\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\n\\t\\t\\tcanvas.width = me.width = newWidth;\\n\\t\\t\\tcanvas.height = me.height = newHeight;\\n\\t\\t\\tcanvas.style.width = newWidth + 'px';\\n\\t\\t\\tcanvas.style.height = newHeight + 'px';\\n\\n\\t\\t\\thelpers.retinaScale(me, options.devicePixelRatio);\\n\\n\\t\\t\\tif (!silent) {\\n\\t\\t\\t\\t// Notify any plugins about the resize\\n\\t\\t\\t\\tvar newSize = {width: newWidth, height: newHeight};\\n\\t\\t\\t\\tplugins.notify(me, 'resize', [newSize]);\\n\\n\\t\\t\\t\\t// Notify of resize\\n\\t\\t\\t\\tif (me.options.onResize) {\\n\\t\\t\\t\\t\\tme.options.onResize(me, newSize);\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tme.stop();\\n\\t\\t\\t\\tme.update(me.options.responsiveAnimationDuration);\\n\\t\\t\\t}\\n\\t\\t},\\n\\n\\t\\tensureScalesHaveIDs: function() {\\n\\t\\t\\tvar options = this.options;\\n\\t\\t\\tvar scalesOptions = options.scales || {};\\n\\t\\t\\tvar scaleOptions = options.scale;\\n\\n\\t\\t\\thelpers.each(scalesOptions.xAxes, function(xAxisOptions, index) {\\n\\t\\t\\t\\txAxisOptions.id = xAxisOptions.id || ('x-axis-' + index);\\n\\t\\t\\t});\\n\\n\\t\\t\\thelpers.each(scalesOptions.yAxes, function(yAxisOptions, index) {\\n\\t\\t\\t\\tyAxisOptions.id = yAxisOptions.id || ('y-axis-' + index);\\n\\t\\t\\t});\\n\\n\\t\\t\\tif (scaleOptions) {\\n\\t\\t\\t\\tscaleOptions.id = scaleOptions.id || 'scale';\\n\\t\\t\\t}\\n\\t\\t},\\n\\n\\t\\t/**\\n\\t\\t * Builds a map of scale ID to scale object for future lookup.\\n\\t\\t */\\n\\t\\tbuildScales: function() {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\tvar options = me.options;\\n\\t\\t\\tvar scales = me.scales = {};\\n\\t\\t\\tvar items = [];\\n\\n\\t\\t\\tif (options.scales) {\\n\\t\\t\\t\\titems = items.concat(\\n\\t\\t\\t\\t\\t(options.scales.xAxes || []).map(function(xAxisOptions) {\\n\\t\\t\\t\\t\\t\\treturn {options: xAxisOptions, dtype: 'category', dposition: 'bottom'};\\n\\t\\t\\t\\t\\t}),\\n\\t\\t\\t\\t\\t(options.scales.yAxes || []).map(function(yAxisOptions) {\\n\\t\\t\\t\\t\\t\\treturn {options: yAxisOptions, dtype: 'linear', dposition: 'left'};\\n\\t\\t\\t\\t\\t})\\n\\t\\t\\t\\t);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (options.scale) {\\n\\t\\t\\t\\titems.push({\\n\\t\\t\\t\\t\\toptions: options.scale,\\n\\t\\t\\t\\t\\tdtype: 'radialLinear',\\n\\t\\t\\t\\t\\tisDefault: true,\\n\\t\\t\\t\\t\\tdposition: 'chartArea'\\n\\t\\t\\t\\t});\\n\\t\\t\\t}\\n\\n\\t\\t\\thelpers.each(items, function(item) {\\n\\t\\t\\t\\tvar scaleOptions = item.options;\\n\\t\\t\\t\\tvar scaleType = helpers.valueOrDefault(scaleOptions.type, item.dtype);\\n\\t\\t\\t\\tvar scaleClass = Chart.scaleService.getScaleConstructor(scaleType);\\n\\t\\t\\t\\tif (!scaleClass) {\\n\\t\\t\\t\\t\\treturn;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\\n\\t\\t\\t\\t\\tscaleOptions.position = item.dposition;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tvar scale = new scaleClass({\\n\\t\\t\\t\\t\\tid: scaleOptions.id,\\n\\t\\t\\t\\t\\toptions: scaleOptions,\\n\\t\\t\\t\\t\\tctx: me.ctx,\\n\\t\\t\\t\\t\\tchart: me\\n\\t\\t\\t\\t});\\n\\n\\t\\t\\t\\tscales[scale.id] = scale;\\n\\t\\t\\t\\tscale.mergeTicksOptions();\\n\\n\\t\\t\\t\\t// TODO(SB): I think we should be able to remove this custom case (options.scale)\\n\\t\\t\\t\\t// and consider it as a regular scale part of the \\\"scales\\\"\\\" map only! This would\\n\\t\\t\\t\\t// make the logic easier and remove some useless? custom code.\\n\\t\\t\\t\\tif (item.isDefault) {\\n\\t\\t\\t\\t\\tme.scale = scale;\\n\\t\\t\\t\\t}\\n\\t\\t\\t});\\n\\n\\t\\t\\tChart.scaleService.addScalesToLayout(this);\\n\\t\\t},\\n\\n\\t\\tbuildOrUpdateControllers: function() {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\tvar types = [];\\n\\t\\t\\tvar newControllers = [];\\n\\n\\t\\t\\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\\n\\t\\t\\t\\tvar meta = me.getDatasetMeta(datasetIndex);\\n\\t\\t\\t\\tvar type = dataset.type || me.config.type;\\n\\n\\t\\t\\t\\tif (meta.type && meta.type !== type) {\\n\\t\\t\\t\\t\\tme.destroyDatasetMeta(datasetIndex);\\n\\t\\t\\t\\t\\tmeta = me.getDatasetMeta(datasetIndex);\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tmeta.type = type;\\n\\n\\t\\t\\t\\ttypes.push(meta.type);\\n\\n\\t\\t\\t\\tif (meta.controller) {\\n\\t\\t\\t\\t\\tmeta.controller.updateIndex(datasetIndex);\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tvar ControllerClass = Chart.controllers[meta.type];\\n\\t\\t\\t\\t\\tif (ControllerClass === undefined) {\\n\\t\\t\\t\\t\\t\\tthrow new Error('\\\"' + meta.type + '\\\" is not a chart type.');\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tmeta.controller = new ControllerClass(me, datasetIndex);\\n\\t\\t\\t\\t\\tnewControllers.push(meta.controller);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}, me);\\n\\n\\t\\t\\treturn newControllers;\\n\\t\\t},\\n\\n\\t\\t/**\\n\\t\\t * Reset the elements of all datasets\\n\\t\\t * @private\\n\\t\\t */\\n\\t\\tresetElements: function() {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\\n\\t\\t\\t\\tme.getDatasetMeta(datasetIndex).controller.reset();\\n\\t\\t\\t}, me);\\n\\t\\t},\\n\\n\\t\\t/**\\n\\t\\t* Resets the chart back to it's state before the initial animation\\n\\t\\t*/\\n\\t\\treset: function() {\\n\\t\\t\\tthis.resetElements();\\n\\t\\t\\tthis.tooltip.initialize();\\n\\t\\t},\\n\\n\\t\\tupdate: function(config) {\\n\\t\\t\\tvar me = this;\\n\\n\\t\\t\\tif (!config || typeof config !== 'object') {\\n\\t\\t\\t\\t// backwards compatibility\\n\\t\\t\\t\\tconfig = {\\n\\t\\t\\t\\t\\tduration: config,\\n\\t\\t\\t\\t\\tlazy: arguments[1]\\n\\t\\t\\t\\t};\\n\\t\\t\\t}\\n\\n\\t\\t\\tupdateConfig(me);\\n\\n\\t\\t\\tif (plugins.notify(me, 'beforeUpdate') === false) {\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\n\\t\\t\\t// In case the entire data object changed\\n\\t\\t\\tme.tooltip._data = me.data;\\n\\n\\t\\t\\t// Make sure dataset controllers are updated and new controllers are reset\\n\\t\\t\\tvar newControllers = me.buildOrUpdateControllers();\\n\\n\\t\\t\\t// Make sure all dataset controllers have correct meta data counts\\n\\t\\t\\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\\n\\t\\t\\t\\tme.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\\n\\t\\t\\t}, me);\\n\\n\\t\\t\\tme.updateLayout();\\n\\n\\t\\t\\t// Can only reset the new controllers after the scales have been updated\\n\\t\\t\\thelpers.each(newControllers, function(controller) {\\n\\t\\t\\t\\tcontroller.reset();\\n\\t\\t\\t});\\n\\n\\t\\t\\tme.updateDatasets();\\n\\n\\t\\t\\t// Do this before render so that any plugins that need final scale updates can use it\\n\\t\\t\\tplugins.notify(me, 'afterUpdate');\\n\\n\\t\\t\\tif (me._bufferedRender) {\\n\\t\\t\\t\\tme._bufferedRequest = {\\n\\t\\t\\t\\t\\tduration: config.duration,\\n\\t\\t\\t\\t\\teasing: config.easing,\\n\\t\\t\\t\\t\\tlazy: config.lazy\\n\\t\\t\\t\\t};\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tme.render(config);\\n\\t\\t\\t}\\n\\t\\t},\\n\\n\\t\\t/**\\n\\t\\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\\n\\t\\t * hook, in which case, plugins will not be called on `afterLayout`.\\n\\t\\t * @private\\n\\t\\t */\\n\\t\\tupdateLayout: function() {\\n\\t\\t\\tvar me = this;\\n\\n\\t\\t\\tif (plugins.notify(me, 'beforeLayout') === false) {\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\n\\t\\t\\tChart.layoutService.update(this, this.width, this.height);\\n\\n\\t\\t\\t/**\\n\\t\\t\\t * Provided for backward compatibility, use `afterLayout` instead.\\n\\t\\t\\t * @method IPlugin#afterScaleUpdate\\n\\t\\t\\t * @deprecated since version 2.5.0\\n\\t\\t\\t * @todo remove at version 3\\n\\t\\t\\t * @private\\n\\t\\t\\t */\\n\\t\\t\\tplugins.notify(me, 'afterScaleUpdate');\\n\\t\\t\\tplugins.notify(me, 'afterLayout');\\n\\t\\t},\\n\\n\\t\\t/**\\n\\t\\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\\n\\t\\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\\n\\t\\t * @private\\n\\t\\t */\\n\\t\\tupdateDatasets: function() {\\n\\t\\t\\tvar me = this;\\n\\n\\t\\t\\tif (plugins.notify(me, 'beforeDatasetsUpdate') === false) {\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\n\\t\\t\\tfor (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\\n\\t\\t\\t\\tme.updateDataset(i);\\n\\t\\t\\t}\\n\\n\\t\\t\\tplugins.notify(me, 'afterDatasetsUpdate');\\n\\t\\t},\\n\\n\\t\\t/**\\n\\t\\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\\n\\t\\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\\n\\t\\t * @private\\n\\t\\t */\\n\\t\\tupdateDataset: function(index) {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\tvar meta = me.getDatasetMeta(index);\\n\\t\\t\\tvar args = {\\n\\t\\t\\t\\tmeta: meta,\\n\\t\\t\\t\\tindex: index\\n\\t\\t\\t};\\n\\n\\t\\t\\tif (plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\n\\t\\t\\tmeta.controller.update();\\n\\n\\t\\t\\tplugins.notify(me, 'afterDatasetUpdate', [args]);\\n\\t\\t},\\n\\n\\t\\trender: function(config) {\\n\\t\\t\\tvar me = this;\\n\\n\\t\\t\\tif (!config || typeof config !== 'object') {\\n\\t\\t\\t\\t// backwards compatibility\\n\\t\\t\\t\\tconfig = {\\n\\t\\t\\t\\t\\tduration: config,\\n\\t\\t\\t\\t\\tlazy: arguments[1]\\n\\t\\t\\t\\t};\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar duration = config.duration;\\n\\t\\t\\tvar lazy = config.lazy;\\n\\n\\t\\t\\tif (plugins.notify(me, 'beforeRender') === false) {\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar animationOptions = me.options.animation;\\n\\t\\t\\tvar onComplete = function(animation) {\\n\\t\\t\\t\\tplugins.notify(me, 'afterRender');\\n\\t\\t\\t\\thelpers.callback(animationOptions && animationOptions.onComplete, [animation], me);\\n\\t\\t\\t};\\n\\n\\t\\t\\tif (animationOptions && ((typeof duration !== 'undefined' && duration !== 0) || (typeof duration === 'undefined' && animationOptions.duration !== 0))) {\\n\\t\\t\\t\\tvar animation = new Chart.Animation({\\n\\t\\t\\t\\t\\tnumSteps: (duration || animationOptions.duration) / 16.66, // 60 fps\\n\\t\\t\\t\\t\\teasing: config.easing || animationOptions.easing,\\n\\n\\t\\t\\t\\t\\trender: function(chart, animationObject) {\\n\\t\\t\\t\\t\\t\\tvar easingFunction = helpers.easing.effects[animationObject.easing];\\n\\t\\t\\t\\t\\t\\tvar currentStep = animationObject.currentStep;\\n\\t\\t\\t\\t\\t\\tvar stepDecimal = currentStep / animationObject.numSteps;\\n\\n\\t\\t\\t\\t\\t\\tchart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\\n\\t\\t\\t\\t\\t},\\n\\n\\t\\t\\t\\t\\tonAnimationProgress: animationOptions.onProgress,\\n\\t\\t\\t\\t\\tonAnimationComplete: onComplete\\n\\t\\t\\t\\t});\\n\\n\\t\\t\\t\\tChart.animationService.addAnimation(me, animation, duration, lazy);\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tme.draw();\\n\\n\\t\\t\\t\\t// See https://github.com/chartjs/Chart.js/issues/3781\\n\\t\\t\\t\\tonComplete(new Chart.Animation({numSteps: 0, chart: me}));\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn me;\\n\\t\\t},\\n\\n\\t\\tdraw: function(easingValue) {\\n\\t\\t\\tvar me = this;\\n\\n\\t\\t\\tme.clear();\\n\\n\\t\\t\\tif (helpers.isNullOrUndef(easingValue)) {\\n\\t\\t\\t\\teasingValue = 1;\\n\\t\\t\\t}\\n\\n\\t\\t\\tme.transition(easingValue);\\n\\n\\t\\t\\tif (plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Draw all the scales\\n\\t\\t\\thelpers.each(me.boxes, function(box) {\\n\\t\\t\\t\\tbox.draw(me.chartArea);\\n\\t\\t\\t}, me);\\n\\n\\t\\t\\tif (me.scale) {\\n\\t\\t\\t\\tme.scale.draw();\\n\\t\\t\\t}\\n\\n\\t\\t\\tme.drawDatasets(easingValue);\\n\\n\\t\\t\\t// Finally draw the tooltip\\n\\t\\t\\tme.tooltip.draw();\\n\\n\\t\\t\\tplugins.notify(me, 'afterDraw', [easingValue]);\\n\\t\\t},\\n\\n\\t\\t/**\\n\\t\\t * @private\\n\\t\\t */\\n\\t\\ttransition: function(easingValue) {\\n\\t\\t\\tvar me = this;\\n\\n\\t\\t\\tfor (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\\n\\t\\t\\t\\tif (me.isDatasetVisible(i)) {\\n\\t\\t\\t\\t\\tme.getDatasetMeta(i).controller.transition(easingValue);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\tme.tooltip.transition(easingValue);\\n\\t\\t},\\n\\n\\t\\t/**\\n\\t\\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\\n\\t\\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\\n\\t\\t * @private\\n\\t\\t */\\n\\t\\tdrawDatasets: function(easingValue) {\\n\\t\\t\\tvar me = this;\\n\\n\\t\\t\\tif (plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Draw datasets reversed to support proper line stacking\\n\\t\\t\\tfor (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\\n\\t\\t\\t\\tif (me.isDatasetVisible(i)) {\\n\\t\\t\\t\\t\\tme.drawDataset(i, easingValue);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\tplugins.notify(me, 'afterDatasetsDraw', [easingValue]);\\n\\t\\t},\\n\\n\\t\\t/**\\n\\t\\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\\n\\t\\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\\n\\t\\t * @private\\n\\t\\t */\\n\\t\\tdrawDataset: function(index, easingValue) {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\tvar meta = me.getDatasetMeta(index);\\n\\t\\t\\tvar args = {\\n\\t\\t\\t\\tmeta: meta,\\n\\t\\t\\t\\tindex: index,\\n\\t\\t\\t\\teasingValue: easingValue\\n\\t\\t\\t};\\n\\n\\t\\t\\tif (plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\n\\t\\t\\tmeta.controller.draw(easingValue);\\n\\n\\t\\t\\tplugins.notify(me, 'afterDatasetDraw', [args]);\\n\\t\\t},\\n\\n\\t\\t// Get the single element that was clicked on\\n\\t\\t// @return : An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\\n\\t\\tgetElementAtEvent: function(e) {\\n\\t\\t\\treturn Interaction.modes.single(this, e);\\n\\t\\t},\\n\\n\\t\\tgetElementsAtEvent: function(e) {\\n\\t\\t\\treturn Interaction.modes.label(this, e, {intersect: true});\\n\\t\\t},\\n\\n\\t\\tgetElementsAtXAxis: function(e) {\\n\\t\\t\\treturn Interaction.modes['x-axis'](this, e, {intersect: true});\\n\\t\\t},\\n\\n\\t\\tgetElementsAtEventForMode: function(e, mode, options) {\\n\\t\\t\\tvar method = Interaction.modes[mode];\\n\\t\\t\\tif (typeof method === 'function') {\\n\\t\\t\\t\\treturn method(this, e, options);\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn [];\\n\\t\\t},\\n\\n\\t\\tgetDatasetAtEvent: function(e) {\\n\\t\\t\\treturn Interaction.modes.dataset(this, e, {intersect: true});\\n\\t\\t},\\n\\n\\t\\tgetDatasetMeta: function(datasetIndex) {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\tvar dataset = me.data.datasets[datasetIndex];\\n\\t\\t\\tif (!dataset._meta) {\\n\\t\\t\\t\\tdataset._meta = {};\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar meta = dataset._meta[me.id];\\n\\t\\t\\tif (!meta) {\\n\\t\\t\\t\\tmeta = dataset._meta[me.id] = {\\n\\t\\t\\t\\t\\ttype: null,\\n\\t\\t\\t\\t\\tdata: [],\\n\\t\\t\\t\\t\\tdataset: null,\\n\\t\\t\\t\\t\\tcontroller: null,\\n\\t\\t\\t\\t\\thidden: null,\\t\\t\\t// See isDatasetVisible() comment\\n\\t\\t\\t\\t\\txAxisID: null,\\n\\t\\t\\t\\t\\tyAxisID: null\\n\\t\\t\\t\\t};\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn meta;\\n\\t\\t},\\n\\n\\t\\tgetVisibleDatasetCount: function() {\\n\\t\\t\\tvar count = 0;\\n\\t\\t\\tfor (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\\n\\t\\t\\t\\tif (this.isDatasetVisible(i)) {\\n\\t\\t\\t\\t\\tcount++;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\treturn count;\\n\\t\\t},\\n\\n\\t\\tisDatasetVisible: function(datasetIndex) {\\n\\t\\t\\tvar meta = this.getDatasetMeta(datasetIndex);\\n\\n\\t\\t\\t// meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\\n\\t\\t\\t// the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\\n\\t\\t\\treturn typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\\n\\t\\t},\\n\\n\\t\\tgenerateLegend: function() {\\n\\t\\t\\treturn this.options.legendCallback(this);\\n\\t\\t},\\n\\n\\t\\t/**\\n\\t\\t * @private\\n\\t\\t */\\n\\t\\tdestroyDatasetMeta: function(datasetIndex) {\\n\\t\\t\\tvar id = this.id;\\n\\t\\t\\tvar dataset = this.data.datasets[datasetIndex];\\n\\t\\t\\tvar meta = dataset._meta && dataset._meta[id];\\n\\n\\t\\t\\tif (meta) {\\n\\t\\t\\t\\tmeta.controller.destroy();\\n\\t\\t\\t\\tdelete dataset._meta[id];\\n\\t\\t\\t}\\n\\t\\t},\\n\\n\\t\\tdestroy: function() {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\tvar canvas = me.canvas;\\n\\t\\t\\tvar i, ilen;\\n\\n\\t\\t\\tme.stop();\\n\\n\\t\\t\\t// dataset controllers need to cleanup associated data\\n\\t\\t\\tfor (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\\n\\t\\t\\t\\tme.destroyDatasetMeta(i);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (canvas) {\\n\\t\\t\\t\\tme.unbindEvents();\\n\\t\\t\\t\\thelpers.canvas.clear(me);\\n\\t\\t\\t\\tplatform.releaseContext(me.ctx);\\n\\t\\t\\t\\tme.canvas = null;\\n\\t\\t\\t\\tme.ctx = null;\\n\\t\\t\\t}\\n\\n\\t\\t\\tplugins.notify(me, 'destroy');\\n\\n\\t\\t\\tdelete Chart.instances[me.id];\\n\\t\\t},\\n\\n\\t\\ttoBase64Image: function() {\\n\\t\\t\\treturn this.canvas.toDataURL.apply(this.canvas, arguments);\\n\\t\\t},\\n\\n\\t\\tinitToolTip: function() {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\tme.tooltip = new Chart.Tooltip({\\n\\t\\t\\t\\t_chart: me,\\n\\t\\t\\t\\t_chartInstance: me, // deprecated, backward compatibility\\n\\t\\t\\t\\t_data: me.data,\\n\\t\\t\\t\\t_options: me.options.tooltips\\n\\t\\t\\t}, me);\\n\\t\\t},\\n\\n\\t\\t/**\\n\\t\\t * @private\\n\\t\\t */\\n\\t\\tbindEvents: function() {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\tvar listeners = me._listeners = {};\\n\\t\\t\\tvar listener = function() {\\n\\t\\t\\t\\tme.eventHandler.apply(me, arguments);\\n\\t\\t\\t};\\n\\n\\t\\t\\thelpers.each(me.options.events, function(type) {\\n\\t\\t\\t\\tplatform.addEventListener(me, type, listener);\\n\\t\\t\\t\\tlisteners[type] = listener;\\n\\t\\t\\t});\\n\\n\\t\\t\\t// Elements used to detect size change should not be injected for non responsive charts.\\n\\t\\t\\t// See https://github.com/chartjs/Chart.js/issues/2210\\n\\t\\t\\tif (me.options.responsive) {\\n\\t\\t\\t\\tlistener = function() {\\n\\t\\t\\t\\t\\tme.resize();\\n\\t\\t\\t\\t};\\n\\n\\t\\t\\t\\tplatform.addEventListener(me, 'resize', listener);\\n\\t\\t\\t\\tlisteners.resize = listener;\\n\\t\\t\\t}\\n\\t\\t},\\n\\n\\t\\t/**\\n\\t\\t * @private\\n\\t\\t */\\n\\t\\tunbindEvents: function() {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\tvar listeners = me._listeners;\\n\\t\\t\\tif (!listeners) {\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\n\\t\\t\\tdelete me._listeners;\\n\\t\\t\\thelpers.each(listeners, function(listener, type) {\\n\\t\\t\\t\\tplatform.removeEventListener(me, type, listener);\\n\\t\\t\\t});\\n\\t\\t},\\n\\n\\t\\tupdateHoverStyle: function(elements, mode, enabled) {\\n\\t\\t\\tvar method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\\n\\t\\t\\tvar element, i, ilen;\\n\\n\\t\\t\\tfor (i = 0, ilen = elements.length; i < ilen; ++i) {\\n\\t\\t\\t\\telement = elements[i];\\n\\t\\t\\t\\tif (element) {\\n\\t\\t\\t\\t\\tthis.getDatasetMeta(element._datasetIndex).controller[method](element);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t},\\n\\n\\t\\t/**\\n\\t\\t * @private\\n\\t\\t */\\n\\t\\teventHandler: function(e) {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\tvar tooltip = me.tooltip;\\n\\n\\t\\t\\tif (plugins.notify(me, 'beforeEvent', [e]) === false) {\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Buffer any update calls so that renders do not occur\\n\\t\\t\\tme._bufferedRender = true;\\n\\t\\t\\tme._bufferedRequest = null;\\n\\n\\t\\t\\tvar changed = me.handleEvent(e);\\n\\t\\t\\tchanged |= tooltip && tooltip.handleEvent(e);\\n\\n\\t\\t\\tplugins.notify(me, 'afterEvent', [e]);\\n\\n\\t\\t\\tvar bufferedRequest = me._bufferedRequest;\\n\\t\\t\\tif (bufferedRequest) {\\n\\t\\t\\t\\t// If we have an update that was triggered, we need to do a normal render\\n\\t\\t\\t\\tme.render(bufferedRequest);\\n\\t\\t\\t} else if (changed && !me.animating) {\\n\\t\\t\\t\\t// If entering, leaving, or changing elements, animate the change via pivot\\n\\t\\t\\t\\tme.stop();\\n\\n\\t\\t\\t\\t// We only need to render at this point. Updating will cause scales to be\\n\\t\\t\\t\\t// recomputed generating flicker & using more memory than necessary.\\n\\t\\t\\t\\tme.render(me.options.hover.animationDuration, true);\\n\\t\\t\\t}\\n\\n\\t\\t\\tme._bufferedRender = false;\\n\\t\\t\\tme._bufferedRequest = null;\\n\\n\\t\\t\\treturn me;\\n\\t\\t},\\n\\n\\t\\t/**\\n\\t\\t * Handle an event\\n\\t\\t * @private\\n\\t\\t * @param {IEvent} event the event to handle\\n\\t\\t * @return {Boolean} true if the chart needs to re-render\\n\\t\\t */\\n\\t\\thandleEvent: function(e) {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\tvar options = me.options || {};\\n\\t\\t\\tvar hoverOptions = options.hover;\\n\\t\\t\\tvar changed = false;\\n\\n\\t\\t\\tme.lastActive = me.lastActive || [];\\n\\n\\t\\t\\t// Find Active Elements for hover and tooltips\\n\\t\\t\\tif (e.type === 'mouseout') {\\n\\t\\t\\t\\tme.active = [];\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tme.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Invoke onHover hook\\n\\t\\t\\t// Need to call with native event here to not break backwards compatibility\\n\\t\\t\\thelpers.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\\n\\n\\t\\t\\tif (e.type === 'mouseup' || e.type === 'click') {\\n\\t\\t\\t\\tif (options.onClick) {\\n\\t\\t\\t\\t\\t// Use e.native here for backwards compatibility\\n\\t\\t\\t\\t\\toptions.onClick.call(me, e.native, me.active);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Remove styling for last active (even if it may still be active)\\n\\t\\t\\tif (me.lastActive.length) {\\n\\t\\t\\t\\tme.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Built in hover styling\\n\\t\\t\\tif (me.active.length && hoverOptions.mode) {\\n\\t\\t\\t\\tme.updateHoverStyle(me.active, hoverOptions.mode, true);\\n\\t\\t\\t}\\n\\n\\t\\t\\tchanged = !helpers.arrayEquals(me.active, me.lastActive);\\n\\n\\t\\t\\t// Remember Last Actives\\n\\t\\t\\tme.lastActive = me.active;\\n\\n\\t\\t\\treturn changed;\\n\\t\\t}\\n\\t});\\n\\n\\t/**\\n\\t * Provided for backward compatibility, use Chart instead.\\n\\t * @class Chart.Controller\\n\\t * @deprecated since version 2.6.0\\n\\t * @todo remove at version 3\\n\\t * @private\\n\\t */\\n\\tChart.Controller = Chart;\\n};\\n\\n},{\\\"25\\\":25,\\\"28\\\":28,\\\"45\\\":45,\\\"48\\\":48}],24:[function(require,module,exports){\\n'use strict';\\n\\nvar helpers = require(45);\\n\\nmodule.exports = function(Chart) {\\n\\n\\tvar arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\\n\\n\\t/**\\n\\t * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\\n\\t * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\\n\\t * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\\n\\t */\\n\\tfunction listenArrayEvents(array, listener) {\\n\\t\\tif (array._chartjs) {\\n\\t\\t\\tarray._chartjs.listeners.push(listener);\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tObject.defineProperty(array, '_chartjs', {\\n\\t\\t\\tconfigurable: true,\\n\\t\\t\\tenumerable: false,\\n\\t\\t\\tvalue: {\\n\\t\\t\\t\\tlisteners: [listener]\\n\\t\\t\\t}\\n\\t\\t});\\n\\n\\t\\tarrayEvents.forEach(function(key) {\\n\\t\\t\\tvar method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\\n\\t\\t\\tvar base = array[key];\\n\\n\\t\\t\\tObject.defineProperty(array, key, {\\n\\t\\t\\t\\tconfigurable: true,\\n\\t\\t\\t\\tenumerable: false,\\n\\t\\t\\t\\tvalue: function() {\\n\\t\\t\\t\\t\\tvar args = Array.prototype.slice.call(arguments);\\n\\t\\t\\t\\t\\tvar res = base.apply(this, args);\\n\\n\\t\\t\\t\\t\\thelpers.each(array._chartjs.listeners, function(object) {\\n\\t\\t\\t\\t\\t\\tif (typeof object[method] === 'function') {\\n\\t\\t\\t\\t\\t\\t\\tobject[method].apply(object, args);\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t});\\n\\n\\t\\t\\t\\t\\treturn res;\\n\\t\\t\\t\\t}\\n\\t\\t\\t});\\n\\t\\t});\\n\\t}\\n\\n\\t/**\\n\\t * Removes the given array event listener and cleanup extra attached properties (such as\\n\\t * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\\n\\t */\\n\\tfunction unlistenArrayEvents(array, listener) {\\n\\t\\tvar stub = array._chartjs;\\n\\t\\tif (!stub) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tvar listeners = stub.listeners;\\n\\t\\tvar index = listeners.indexOf(listener);\\n\\t\\tif (index !== -1) {\\n\\t\\t\\tlisteners.splice(index, 1);\\n\\t\\t}\\n\\n\\t\\tif (listeners.length > 0) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tarrayEvents.forEach(function(key) {\\n\\t\\t\\tdelete array[key];\\n\\t\\t});\\n\\n\\t\\tdelete array._chartjs;\\n\\t}\\n\\n\\t// Base class for all dataset controllers (line, bar, etc)\\n\\tChart.DatasetController = function(chart, datasetIndex) {\\n\\t\\tthis.initialize(chart, datasetIndex);\\n\\t};\\n\\n\\thelpers.extend(Chart.DatasetController.prototype, {\\n\\n\\t\\t/**\\n\\t\\t * Element type used to generate a meta dataset (e.g. Chart.element.Line).\\n\\t\\t * @type {Chart.core.element}\\n\\t\\t */\\n\\t\\tdatasetElementType: null,\\n\\n\\t\\t/**\\n\\t\\t * Element type used to generate a meta data (e.g. Chart.element.Point).\\n\\t\\t * @type {Chart.core.element}\\n\\t\\t */\\n\\t\\tdataElementType: null,\\n\\n\\t\\tinitialize: function(chart, datasetIndex) {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\tme.chart = chart;\\n\\t\\t\\tme.index = datasetIndex;\\n\\t\\t\\tme.linkScales();\\n\\t\\t\\tme.addElements();\\n\\t\\t},\\n\\n\\t\\tupdateIndex: function(datasetIndex) {\\n\\t\\t\\tthis.index = datasetIndex;\\n\\t\\t},\\n\\n\\t\\tlinkScales: function() {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\tvar meta = me.getMeta();\\n\\t\\t\\tvar dataset = me.getDataset();\\n\\n\\t\\t\\tif (meta.xAxisID === null) {\\n\\t\\t\\t\\tmeta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\\n\\t\\t\\t}\\n\\t\\t\\tif (meta.yAxisID === null) {\\n\\t\\t\\t\\tmeta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\\n\\t\\t\\t}\\n\\t\\t},\\n\\n\\t\\tgetDataset: function() {\\n\\t\\t\\treturn this.chart.data.datasets[this.index];\\n\\t\\t},\\n\\n\\t\\tgetMeta: function() {\\n\\t\\t\\treturn this.chart.getDatasetMeta(this.index);\\n\\t\\t},\\n\\n\\t\\tgetScaleForId: function(scaleID) {\\n\\t\\t\\treturn this.chart.scales[scaleID];\\n\\t\\t},\\n\\n\\t\\treset: function() {\\n\\t\\t\\tthis.update(true);\\n\\t\\t},\\n\\n\\t\\t/**\\n\\t\\t * @private\\n\\t\\t */\\n\\t\\tdestroy: function() {\\n\\t\\t\\tif (this._data) {\\n\\t\\t\\t\\tunlistenArrayEvents(this._data, this);\\n\\t\\t\\t}\\n\\t\\t},\\n\\n\\t\\tcreateMetaDataset: function() {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\tvar type = me.datasetElementType;\\n\\t\\t\\treturn type && new type({\\n\\t\\t\\t\\t_chart: me.chart,\\n\\t\\t\\t\\t_datasetIndex: me.index\\n\\t\\t\\t});\\n\\t\\t},\\n\\n\\t\\tcreateMetaData: function(index) {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\tvar type = me.dataElementType;\\n\\t\\t\\treturn type && new type({\\n\\t\\t\\t\\t_chart: me.chart,\\n\\t\\t\\t\\t_datasetIndex: me.index,\\n\\t\\t\\t\\t_index: index\\n\\t\\t\\t});\\n\\t\\t},\\n\\n\\t\\taddElements: function() {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\tvar meta = me.getMeta();\\n\\t\\t\\tvar data = me.getDataset().data || [];\\n\\t\\t\\tvar metaData = meta.data;\\n\\t\\t\\tvar i, ilen;\\n\\n\\t\\t\\tfor (i = 0, ilen = data.length; i < ilen; ++i) {\\n\\t\\t\\t\\tmetaData[i] = metaData[i] || me.createMetaData(i);\\n\\t\\t\\t}\\n\\n\\t\\t\\tmeta.dataset = meta.dataset || me.createMetaDataset();\\n\\t\\t},\\n\\n\\t\\taddElementAndReset: function(index) {\\n\\t\\t\\tvar element = this.createMetaData(index);\\n\\t\\t\\tthis.getMeta().data.splice(index, 0, element);\\n\\t\\t\\tthis.updateElement(element, index, true);\\n\\t\\t},\\n\\n\\t\\tbuildOrUpdateElements: function() {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\tvar dataset = me.getDataset();\\n\\t\\t\\tvar data = dataset.data || (dataset.data = []);\\n\\n\\t\\t\\t// In order to correctly handle data addition/deletion animation (an thus simulate\\n\\t\\t\\t// real-time charts), we need to monitor these data modifications and synchronize\\n\\t\\t\\t// the internal meta data accordingly.\\n\\t\\t\\tif (me._data !== data) {\\n\\t\\t\\t\\tif (me._data) {\\n\\t\\t\\t\\t\\t// This case happens when the user replaced the data array instance.\\n\\t\\t\\t\\t\\tunlistenArrayEvents(me._data, me);\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tlistenArrayEvents(data, me);\\n\\t\\t\\t\\tme._data = data;\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Re-sync meta data in case the user replaced the data array or if we missed\\n\\t\\t\\t// any updates and so make sure that we handle number of datapoints changing.\\n\\t\\t\\tme.resyncElements();\\n\\t\\t},\\n\\n\\t\\tupdate: helpers.noop,\\n\\n\\t\\ttransition: function(easingValue) {\\n\\t\\t\\tvar meta = this.getMeta();\\n\\t\\t\\tvar elements = meta.data || [];\\n\\t\\t\\tvar ilen = elements.length;\\n\\t\\t\\tvar i = 0;\\n\\n\\t\\t\\tfor (; i < ilen; ++i) {\\n\\t\\t\\t\\telements[i].transition(easingValue);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (meta.dataset) {\\n\\t\\t\\t\\tmeta.dataset.transition(easingValue);\\n\\t\\t\\t}\\n\\t\\t},\\n\\n\\t\\tdraw: function() {\\n\\t\\t\\tvar meta = this.getMeta();\\n\\t\\t\\tvar elements = meta.data || [];\\n\\t\\t\\tvar ilen = elements.length;\\n\\t\\t\\tvar i = 0;\\n\\n\\t\\t\\tif (meta.dataset) {\\n\\t\\t\\t\\tmeta.dataset.draw();\\n\\t\\t\\t}\\n\\n\\t\\t\\tfor (; i < ilen; ++i) {\\n\\t\\t\\t\\telements[i].draw();\\n\\t\\t\\t}\\n\\t\\t},\\n\\n\\t\\tremoveHoverStyle: function(element, elementOpts) {\\n\\t\\t\\tvar dataset = this.chart.data.datasets[element._datasetIndex];\\n\\t\\t\\tvar index = element._index;\\n\\t\\t\\tvar custom = element.custom || {};\\n\\t\\t\\tvar valueOrDefault = helpers.valueAtIndexOrDefault;\\n\\t\\t\\tvar model = element._model;\\n\\n\\t\\t\\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueOrDefault(dataset.backgroundColor, index, elementOpts.backgroundColor);\\n\\t\\t\\tmodel.borderColor = custom.borderColor ? custom.borderColor : valueOrDefault(dataset.borderColor, index, elementOpts.borderColor);\\n\\t\\t\\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : valueOrDefault(dataset.borderWidth, index, elementOpts.borderWidth);\\n\\t\\t},\\n\\n\\t\\tsetHoverStyle: function(element) {\\n\\t\\t\\tvar dataset = this.chart.data.datasets[element._datasetIndex];\\n\\t\\t\\tvar index = element._index;\\n\\t\\t\\tvar custom = element.custom || {};\\n\\t\\t\\tvar valueOrDefault = helpers.valueAtIndexOrDefault;\\n\\t\\t\\tvar getHoverColor = helpers.getHoverColor;\\n\\t\\t\\tvar model = element._model;\\n\\n\\t\\t\\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : valueOrDefault(dataset.hoverBackgroundColor, index, getHoverColor(model.backgroundColor));\\n\\t\\t\\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : valueOrDefault(dataset.hoverBorderColor, index, getHoverColor(model.borderColor));\\n\\t\\t\\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : valueOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\\n\\t\\t},\\n\\n\\t\\t/**\\n\\t\\t * @private\\n\\t\\t */\\n\\t\\tresyncElements: function() {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\tvar meta = me.getMeta();\\n\\t\\t\\tvar data = me.getDataset().data;\\n\\t\\t\\tvar numMeta = meta.data.length;\\n\\t\\t\\tvar numData = data.length;\\n\\n\\t\\t\\tif (numData < numMeta) {\\n\\t\\t\\t\\tmeta.data.splice(numData, numMeta - numData);\\n\\t\\t\\t} else if (numData > numMeta) {\\n\\t\\t\\t\\tme.insertElements(numMeta, numData - numMeta);\\n\\t\\t\\t}\\n\\t\\t},\\n\\n\\t\\t/**\\n\\t\\t * @private\\n\\t\\t */\\n\\t\\tinsertElements: function(start, count) {\\n\\t\\t\\tfor (var i = 0; i < count; ++i) {\\n\\t\\t\\t\\tthis.addElementAndReset(start + i);\\n\\t\\t\\t}\\n\\t\\t},\\n\\n\\t\\t/**\\n\\t\\t * @private\\n\\t\\t */\\n\\t\\tonDataPush: function() {\\n\\t\\t\\tthis.insertElements(this.getDataset().data.length - 1, arguments.length);\\n\\t\\t},\\n\\n\\t\\t/**\\n\\t\\t * @private\\n\\t\\t */\\n\\t\\tonDataPop: function() {\\n\\t\\t\\tthis.getMeta().data.pop();\\n\\t\\t},\\n\\n\\t\\t/**\\n\\t\\t * @private\\n\\t\\t */\\n\\t\\tonDataShift: function() {\\n\\t\\t\\tthis.getMeta().data.shift();\\n\\t\\t},\\n\\n\\t\\t/**\\n\\t\\t * @private\\n\\t\\t */\\n\\t\\tonDataSplice: function(start, count) {\\n\\t\\t\\tthis.getMeta().data.splice(start, count);\\n\\t\\t\\tthis.insertElements(start, arguments.length - 2);\\n\\t\\t},\\n\\n\\t\\t/**\\n\\t\\t * @private\\n\\t\\t */\\n\\t\\tonDataUnshift: function() {\\n\\t\\t\\tthis.insertElements(0, arguments.length);\\n\\t\\t}\\n\\t});\\n\\n\\tChart.DatasetController.extend = helpers.inherits;\\n};\\n\\n},{\\\"45\\\":45}],25:[function(require,module,exports){\\n'use strict';\\n\\nvar helpers = require(45);\\n\\nmodule.exports = {\\n\\t/**\\n\\t * @private\\n\\t */\\n\\t_set: function(scope, values) {\\n\\t\\treturn helpers.merge(this[scope] || (this[scope] = {}), values);\\n\\t}\\n};\\n\\n},{\\\"45\\\":45}],26:[function(require,module,exports){\\n'use strict';\\n\\nvar color = require(2);\\nvar helpers = require(45);\\n\\nfunction interpolate(start, view, model, ease) {\\n\\tvar keys = Object.keys(model);\\n\\tvar i, ilen, key, actual, origin, target, type, c0, c1;\\n\\n\\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\\n\\t\\tkey = keys[i];\\n\\n\\t\\ttarget = model[key];\\n\\n\\t\\t// if a value is added to the model after pivot() has been called, the view\\n\\t\\t// doesn't contain it, so let's initialize the view to the target value.\\n\\t\\tif (!view.hasOwnProperty(key)) {\\n\\t\\t\\tview[key] = target;\\n\\t\\t}\\n\\n\\t\\tactual = view[key];\\n\\n\\t\\tif (actual === target || key[0] === '_') {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tif (!start.hasOwnProperty(key)) {\\n\\t\\t\\tstart[key] = actual;\\n\\t\\t}\\n\\n\\t\\torigin = start[key];\\n\\n\\t\\ttype = typeof target;\\n\\n\\t\\tif (type === typeof origin) {\\n\\t\\t\\tif (type === 'string') {\\n\\t\\t\\t\\tc0 = color(origin);\\n\\t\\t\\t\\tif (c0.valid) {\\n\\t\\t\\t\\t\\tc1 = color(target);\\n\\t\\t\\t\\t\\tif (c1.valid) {\\n\\t\\t\\t\\t\\t\\tview[key] = c1.mix(c0, ease).rgbString();\\n\\t\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t} else if (type === 'number' && isFinite(origin) && isFinite(target)) {\\n\\t\\t\\t\\tview[key] = origin + (target - origin) * ease;\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tview[key] = target;\\n\\t}\\n}\\n\\nvar Element = function(configuration) {\\n\\thelpers.extend(this, configuration);\\n\\tthis.initialize.apply(this, arguments);\\n};\\n\\nhelpers.extend(Element.prototype, {\\n\\n\\tinitialize: function() {\\n\\t\\tthis.hidden = false;\\n\\t},\\n\\n\\tpivot: function() {\\n\\t\\tvar me = this;\\n\\t\\tif (!me._view) {\\n\\t\\t\\tme._view = helpers.clone(me._model);\\n\\t\\t}\\n\\t\\tme._start = {};\\n\\t\\treturn me;\\n\\t},\\n\\n\\ttransition: function(ease) {\\n\\t\\tvar me = this;\\n\\t\\tvar model = me._model;\\n\\t\\tvar start = me._start;\\n\\t\\tvar view = me._view;\\n\\n\\t\\t// No animation -> No Transition\\n\\t\\tif (!model || ease === 1) {\\n\\t\\t\\tme._view = model;\\n\\t\\t\\tme._start = null;\\n\\t\\t\\treturn me;\\n\\t\\t}\\n\\n\\t\\tif (!view) {\\n\\t\\t\\tview = me._view = {};\\n\\t\\t}\\n\\n\\t\\tif (!start) {\\n\\t\\t\\tstart = me._start = {};\\n\\t\\t}\\n\\n\\t\\tinterpolate(start, view, model, ease);\\n\\n\\t\\treturn me;\\n\\t},\\n\\n\\ttooltipPosition: function() {\\n\\t\\treturn {\\n\\t\\t\\tx: this._model.x,\\n\\t\\t\\ty: this._model.y\\n\\t\\t};\\n\\t},\\n\\n\\thasValue: function() {\\n\\t\\treturn helpers.isNumber(this._model.x) && helpers.isNumber(this._model.y);\\n\\t}\\n});\\n\\nElement.extend = helpers.inherits;\\n\\nmodule.exports = Element;\\n\\n},{\\\"2\\\":2,\\\"45\\\":45}],27:[function(require,module,exports){\\n/* global window: false */\\n/* global document: false */\\n'use strict';\\n\\nvar color = require(2);\\nvar defaults = require(25);\\nvar helpers = require(45);\\n\\nmodule.exports = function(Chart) {\\n\\n\\t// -- Basic js utility methods\\n\\n\\thelpers.extend = function(base) {\\n\\t\\tvar setFn = function(value, key) {\\n\\t\\t\\tbase[key] = value;\\n\\t\\t};\\n\\t\\tfor (var i = 1, ilen = arguments.length; i < ilen; i++) {\\n\\t\\t\\thelpers.each(arguments[i], setFn);\\n\\t\\t}\\n\\t\\treturn base;\\n\\t};\\n\\n\\thelpers.configMerge = function(/* objects ... */) {\\n\\t\\treturn helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\\n\\t\\t\\tmerger: function(key, target, source, options) {\\n\\t\\t\\t\\tvar tval = target[key] || {};\\n\\t\\t\\t\\tvar sval = source[key];\\n\\n\\t\\t\\t\\tif (key === 'scales') {\\n\\t\\t\\t\\t\\t// scale config merging is complex. Add our own function here for that\\n\\t\\t\\t\\t\\ttarget[key] = helpers.scaleMerge(tval, sval);\\n\\t\\t\\t\\t} else if (key === 'scale') {\\n\\t\\t\\t\\t\\t// used in polar area & radar charts since there is only one scale\\n\\t\\t\\t\\t\\ttarget[key] = helpers.merge(tval, [Chart.scaleService.getScaleDefaults(sval.type), sval]);\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\thelpers._merger(key, target, source, options);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t});\\n\\t};\\n\\n\\thelpers.scaleMerge = function(/* objects ... */) {\\n\\t\\treturn helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\\n\\t\\t\\tmerger: function(key, target, source, options) {\\n\\t\\t\\t\\tif (key === 'xAxes' || key === 'yAxes') {\\n\\t\\t\\t\\t\\tvar slen = source[key].length;\\n\\t\\t\\t\\t\\tvar i, type, scale;\\n\\n\\t\\t\\t\\t\\tif (!target[key]) {\\n\\t\\t\\t\\t\\t\\ttarget[key] = [];\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tfor (i = 0; i < slen; ++i) {\\n\\t\\t\\t\\t\\t\\tscale = source[key][i];\\n\\t\\t\\t\\t\\t\\ttype = helpers.valueOrDefault(scale.type, key === 'xAxes' ? 'category' : 'linear');\\n\\n\\t\\t\\t\\t\\t\\tif (i >= target[key].length) {\\n\\t\\t\\t\\t\\t\\t\\ttarget[key].push({});\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\tif (!target[key][i].type || (scale.type && scale.type !== target[key][i].type)) {\\n\\t\\t\\t\\t\\t\\t\\t// new/untyped scale or type changed: let's apply the new defaults\\n\\t\\t\\t\\t\\t\\t\\t// then merge source scale to correctly overwrite the defaults.\\n\\t\\t\\t\\t\\t\\t\\thelpers.merge(target[key][i], [Chart.scaleService.getScaleDefaults(type), scale]);\\n\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t// scales type are the same\\n\\t\\t\\t\\t\\t\\t\\thelpers.merge(target[key][i], scale);\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\thelpers._merger(key, target, source, options);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t});\\n\\t};\\n\\n\\thelpers.where = function(collection, filterCallback) {\\n\\t\\tif (helpers.isArray(collection) && Array.prototype.filter) {\\n\\t\\t\\treturn collection.filter(filterCallback);\\n\\t\\t}\\n\\t\\tvar filtered = [];\\n\\n\\t\\thelpers.each(collection, function(item) {\\n\\t\\t\\tif (filterCallback(item)) {\\n\\t\\t\\t\\tfiltered.push(item);\\n\\t\\t\\t}\\n\\t\\t});\\n\\n\\t\\treturn filtered;\\n\\t};\\n\\thelpers.findIndex = Array.prototype.findIndex ?\\n\\t\\tfunction(array, callback, scope) {\\n\\t\\t\\treturn array.findIndex(callback, scope);\\n\\t\\t} :\\n\\t\\tfunction(array, callback, scope) {\\n\\t\\t\\tscope = scope === undefined ? array : scope;\\n\\t\\t\\tfor (var i = 0, ilen = array.length; i < ilen; ++i) {\\n\\t\\t\\t\\tif (callback.call(scope, array[i], i, array)) {\\n\\t\\t\\t\\t\\treturn i;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\treturn -1;\\n\\t\\t};\\n\\thelpers.findNextWhere = function(arrayToSearch, filterCallback, startIndex) {\\n\\t\\t// Default to start of the array\\n\\t\\tif (helpers.isNullOrUndef(startIndex)) {\\n\\t\\t\\tstartIndex = -1;\\n\\t\\t}\\n\\t\\tfor (var i = startIndex + 1; i < arrayToSearch.length; i++) {\\n\\t\\t\\tvar currentItem = arrayToSearch[i];\\n\\t\\t\\tif (filterCallback(currentItem)) {\\n\\t\\t\\t\\treturn currentItem;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t};\\n\\thelpers.findPreviousWhere = function(arrayToSearch, filterCallback, startIndex) {\\n\\t\\t// Default to end of the array\\n\\t\\tif (helpers.isNullOrUndef(startIndex)) {\\n\\t\\t\\tstartIndex = arrayToSearch.length;\\n\\t\\t}\\n\\t\\tfor (var i = startIndex - 1; i >= 0; i--) {\\n\\t\\t\\tvar currentItem = arrayToSearch[i];\\n\\t\\t\\tif (filterCallback(currentItem)) {\\n\\t\\t\\t\\treturn currentItem;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t};\\n\\thelpers.inherits = function(extensions) {\\n\\t\\t// Basic javascript inheritance based on the model created in Backbone.js\\n\\t\\tvar me = this;\\n\\t\\tvar ChartElement = (extensions && extensions.hasOwnProperty('constructor')) ? extensions.constructor : function() {\\n\\t\\t\\treturn me.apply(this, arguments);\\n\\t\\t};\\n\\n\\t\\tvar Surrogate = function() {\\n\\t\\t\\tthis.constructor = ChartElement;\\n\\t\\t};\\n\\t\\tSurrogate.prototype = me.prototype;\\n\\t\\tChartElement.prototype = new Surrogate();\\n\\n\\t\\tChartElement.extend = helpers.inherits;\\n\\n\\t\\tif (extensions) {\\n\\t\\t\\thelpers.extend(ChartElement.prototype, extensions);\\n\\t\\t}\\n\\n\\t\\tChartElement.__super__ = me.prototype;\\n\\n\\t\\treturn ChartElement;\\n\\t};\\n\\t// -- Math methods\\n\\thelpers.isNumber = function(n) {\\n\\t\\treturn !isNaN(parseFloat(n)) && isFinite(n);\\n\\t};\\n\\thelpers.almostEquals = function(x, y, epsilon) {\\n\\t\\treturn Math.abs(x - y) < epsilon;\\n\\t};\\n\\thelpers.almostWhole = function(x, epsilon) {\\n\\t\\tvar rounded = Math.round(x);\\n\\t\\treturn (((rounded - epsilon) < x) && ((rounded + epsilon) > x));\\n\\t};\\n\\thelpers.max = function(array) {\\n\\t\\treturn array.reduce(function(max, value) {\\n\\t\\t\\tif (!isNaN(value)) {\\n\\t\\t\\t\\treturn Math.max(max, value);\\n\\t\\t\\t}\\n\\t\\t\\treturn max;\\n\\t\\t}, Number.NEGATIVE_INFINITY);\\n\\t};\\n\\thelpers.min = function(array) {\\n\\t\\treturn array.reduce(function(min, value) {\\n\\t\\t\\tif (!isNaN(value)) {\\n\\t\\t\\t\\treturn Math.min(min, value);\\n\\t\\t\\t}\\n\\t\\t\\treturn min;\\n\\t\\t}, Number.POSITIVE_INFINITY);\\n\\t};\\n\\thelpers.sign = Math.sign ?\\n\\t\\tfunction(x) {\\n\\t\\t\\treturn Math.sign(x);\\n\\t\\t} :\\n\\t\\tfunction(x) {\\n\\t\\t\\tx = +x; // convert to a number\\n\\t\\t\\tif (x === 0 || isNaN(x)) {\\n\\t\\t\\t\\treturn x;\\n\\t\\t\\t}\\n\\t\\t\\treturn x > 0 ? 1 : -1;\\n\\t\\t};\\n\\thelpers.log10 = Math.log10 ?\\n\\t\\tfunction(x) {\\n\\t\\t\\treturn Math.log10(x);\\n\\t\\t} :\\n\\t\\tfunction(x) {\\n\\t\\t\\treturn Math.log(x) / Math.LN10;\\n\\t\\t};\\n\\thelpers.toRadians = function(degrees) {\\n\\t\\treturn degrees * (Math.PI / 180);\\n\\t};\\n\\thelpers.toDegrees = function(radians) {\\n\\t\\treturn radians * (180 / Math.PI);\\n\\t};\\n\\t// Gets the angle from vertical upright to the point about a centre.\\n\\thelpers.getAngleFromPoint = function(centrePoint, anglePoint) {\\n\\t\\tvar distanceFromXCenter = anglePoint.x - centrePoint.x;\\n\\t\\tvar distanceFromYCenter = anglePoint.y - centrePoint.y;\\n\\t\\tvar radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\\n\\n\\t\\tvar angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\\n\\n\\t\\tif (angle < (-0.5 * Math.PI)) {\\n\\t\\t\\tangle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\\n\\t\\t}\\n\\n\\t\\treturn {\\n\\t\\t\\tangle: angle,\\n\\t\\t\\tdistance: radialDistanceFromCenter\\n\\t\\t};\\n\\t};\\n\\thelpers.distanceBetweenPoints = function(pt1, pt2) {\\n\\t\\treturn Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\\n\\t};\\n\\thelpers.aliasPixel = function(pixelWidth) {\\n\\t\\treturn (pixelWidth % 2 === 0) ? 0 : 0.5;\\n\\t};\\n\\thelpers.splineCurve = function(firstPoint, middlePoint, afterPoint, t) {\\n\\t\\t// Props to Rob Spencer at scaled innovation for his post on splining between points\\n\\t\\t// http://scaledinnovation.com/analytics/splines/aboutSplines.html\\n\\n\\t\\t// This function must also respect \\\"skipped\\\" points\\n\\n\\t\\tvar previous = firstPoint.skip ? middlePoint : firstPoint;\\n\\t\\tvar current = middlePoint;\\n\\t\\tvar next = afterPoint.skip ? middlePoint : afterPoint;\\n\\n\\t\\tvar d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\\n\\t\\tvar d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\\n\\n\\t\\tvar s01 = d01 / (d01 + d12);\\n\\t\\tvar s12 = d12 / (d01 + d12);\\n\\n\\t\\t// If all points are the same, s01 & s02 will be inf\\n\\t\\ts01 = isNaN(s01) ? 0 : s01;\\n\\t\\ts12 = isNaN(s12) ? 0 : s12;\\n\\n\\t\\tvar fa = t * s01; // scaling factor for triangle Ta\\n\\t\\tvar fb = t * s12;\\n\\n\\t\\treturn {\\n\\t\\t\\tprevious: {\\n\\t\\t\\t\\tx: current.x - fa * (next.x - previous.x),\\n\\t\\t\\t\\ty: current.y - fa * (next.y - previous.y)\\n\\t\\t\\t},\\n\\t\\t\\tnext: {\\n\\t\\t\\t\\tx: current.x + fb * (next.x - previous.x),\\n\\t\\t\\t\\ty: current.y + fb * (next.y - previous.y)\\n\\t\\t\\t}\\n\\t\\t};\\n\\t};\\n\\thelpers.EPSILON = Number.EPSILON || 1e-14;\\n\\thelpers.splineCurveMonotone = function(points) {\\n\\t\\t// This function calculates Bézier control points in a similar way than |splineCurve|,\\n\\t\\t// but preserves monotonicity of the provided data and ensures no local extremums are added\\n\\t\\t// between the dataset discrete points due to the interpolation.\\n\\t\\t// See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\\n\\n\\t\\tvar pointsWithTangents = (points || []).map(function(point) {\\n\\t\\t\\treturn {\\n\\t\\t\\t\\tmodel: point._model,\\n\\t\\t\\t\\tdeltaK: 0,\\n\\t\\t\\t\\tmK: 0\\n\\t\\t\\t};\\n\\t\\t});\\n\\n\\t\\t// Calculate slopes (deltaK) and initialize tangents (mK)\\n\\t\\tvar pointsLen = pointsWithTangents.length;\\n\\t\\tvar i, pointBefore, pointCurrent, pointAfter;\\n\\t\\tfor (i = 0; i < pointsLen; ++i) {\\n\\t\\t\\tpointCurrent = pointsWithTangents[i];\\n\\t\\t\\tif (pointCurrent.model.skip) {\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tpointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\\n\\t\\t\\tpointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\\n\\t\\t\\tif (pointAfter && !pointAfter.model.skip) {\\n\\t\\t\\t\\tvar slopeDeltaX = (pointAfter.model.x - pointCurrent.model.x);\\n\\n\\t\\t\\t\\t// In the case of two points that appear at the same x pixel, slopeDeltaX is 0\\n\\t\\t\\t\\tpointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (!pointBefore || pointBefore.model.skip) {\\n\\t\\t\\t\\tpointCurrent.mK = pointCurrent.deltaK;\\n\\t\\t\\t} else if (!pointAfter || pointAfter.model.skip) {\\n\\t\\t\\t\\tpointCurrent.mK = pointBefore.deltaK;\\n\\t\\t\\t} else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\\n\\t\\t\\t\\tpointCurrent.mK = 0;\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tpointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t// Adjust tangents to ensure monotonic properties\\n\\t\\tvar alphaK, betaK, tauK, squaredMagnitude;\\n\\t\\tfor (i = 0; i < pointsLen - 1; ++i) {\\n\\t\\t\\tpointCurrent = pointsWithTangents[i];\\n\\t\\t\\tpointAfter = pointsWithTangents[i + 1];\\n\\t\\t\\tif (pointCurrent.model.skip || pointAfter.model.skip) {\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (helpers.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\\n\\t\\t\\t\\tpointCurrent.mK = pointAfter.mK = 0;\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\talphaK = pointCurrent.mK / pointCurrent.deltaK;\\n\\t\\t\\tbetaK = pointAfter.mK / pointCurrent.deltaK;\\n\\t\\t\\tsquaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\\n\\t\\t\\tif (squaredMagnitude <= 9) {\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\ttauK = 3 / Math.sqrt(squaredMagnitude);\\n\\t\\t\\tpointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\\n\\t\\t\\tpointAfter.mK = betaK * tauK * pointCurrent.deltaK;\\n\\t\\t}\\n\\n\\t\\t// Compute control points\\n\\t\\tvar deltaX;\\n\\t\\tfor (i = 0; i < pointsLen; ++i) {\\n\\t\\t\\tpointCurrent = pointsWithTangents[i];\\n\\t\\t\\tif (pointCurrent.model.skip) {\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tpointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\\n\\t\\t\\tpointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\\n\\t\\t\\tif (pointBefore && !pointBefore.model.skip) {\\n\\t\\t\\t\\tdeltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\\n\\t\\t\\t\\tpointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\\n\\t\\t\\t\\tpointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\\n\\t\\t\\t}\\n\\t\\t\\tif (pointAfter && !pointAfter.model.skip) {\\n\\t\\t\\t\\tdeltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\\n\\t\\t\\t\\tpointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\\n\\t\\t\\t\\tpointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t};\\n\\thelpers.nextItem = function(collection, index, loop) {\\n\\t\\tif (loop) {\\n\\t\\t\\treturn index >= collection.length - 1 ? collection[0] : collection[index + 1];\\n\\t\\t}\\n\\t\\treturn index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\\n\\t};\\n\\thelpers.previousItem = function(collection, index, loop) {\\n\\t\\tif (loop) {\\n\\t\\t\\treturn index <= 0 ? collection[collection.length - 1] : collection[index - 1];\\n\\t\\t}\\n\\t\\treturn index <= 0 ? collection[0] : collection[index - 1];\\n\\t};\\n\\t// Implementation of the nice number algorithm used in determining where axis labels will go\\n\\thelpers.niceNum = function(range, round) {\\n\\t\\tvar exponent = Math.floor(helpers.log10(range));\\n\\t\\tvar fraction = range / Math.pow(10, exponent);\\n\\t\\tvar niceFraction;\\n\\n\\t\\tif (round) {\\n\\t\\t\\tif (fraction < 1.5) {\\n\\t\\t\\t\\tniceFraction = 1;\\n\\t\\t\\t} else if (fraction < 3) {\\n\\t\\t\\t\\tniceFraction = 2;\\n\\t\\t\\t} else if (fraction < 7) {\\n\\t\\t\\t\\tniceFraction = 5;\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tniceFraction = 10;\\n\\t\\t\\t}\\n\\t\\t} else if (fraction <= 1.0) {\\n\\t\\t\\tniceFraction = 1;\\n\\t\\t} else if (fraction <= 2) {\\n\\t\\t\\tniceFraction = 2;\\n\\t\\t} else if (fraction <= 5) {\\n\\t\\t\\tniceFraction = 5;\\n\\t\\t} else {\\n\\t\\t\\tniceFraction = 10;\\n\\t\\t}\\n\\n\\t\\treturn niceFraction * Math.pow(10, exponent);\\n\\t};\\n\\t// Request animation polyfill - http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\\n\\thelpers.requestAnimFrame = (function() {\\n\\t\\tif (typeof window === 'undefined') {\\n\\t\\t\\treturn function(callback) {\\n\\t\\t\\t\\tcallback();\\n\\t\\t\\t};\\n\\t\\t}\\n\\t\\treturn window.requestAnimationFrame ||\\n\\t\\t\\twindow.webkitRequestAnimationFrame ||\\n\\t\\t\\twindow.mozRequestAnimationFrame ||\\n\\t\\t\\twindow.oRequestAnimationFrame ||\\n\\t\\t\\twindow.msRequestAnimationFrame ||\\n\\t\\t\\tfunction(callback) {\\n\\t\\t\\t\\treturn window.setTimeout(callback, 1000 / 60);\\n\\t\\t\\t};\\n\\t}());\\n\\t// -- DOM methods\\n\\thelpers.getRelativePosition = function(evt, chart) {\\n\\t\\tvar mouseX, mouseY;\\n\\t\\tvar e = evt.originalEvent || evt;\\n\\t\\tvar canvas = evt.currentTarget || evt.srcElement;\\n\\t\\tvar boundingRect = canvas.getBoundingClientRect();\\n\\n\\t\\tvar touches = e.touches;\\n\\t\\tif (touches && touches.length > 0) {\\n\\t\\t\\tmouseX = touches[0].clientX;\\n\\t\\t\\tmouseY = touches[0].clientY;\\n\\n\\t\\t} else {\\n\\t\\t\\tmouseX = e.clientX;\\n\\t\\t\\tmouseY = e.clientY;\\n\\t\\t}\\n\\n\\t\\t// Scale mouse coordinates into canvas coordinates\\n\\t\\t// by following the pattern laid out by 'jerryj' in the comments of\\n\\t\\t// http://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\\n\\t\\tvar paddingLeft = parseFloat(helpers.getStyle(canvas, 'padding-left'));\\n\\t\\tvar paddingTop = parseFloat(helpers.getStyle(canvas, 'padding-top'));\\n\\t\\tvar paddingRight = parseFloat(helpers.getStyle(canvas, 'padding-right'));\\n\\t\\tvar paddingBottom = parseFloat(helpers.getStyle(canvas, 'padding-bottom'));\\n\\t\\tvar width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\\n\\t\\tvar height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom;\\n\\n\\t\\t// We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\\n\\t\\t// the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\\n\\t\\tmouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / (width) * canvas.width / chart.currentDevicePixelRatio);\\n\\t\\tmouseY = Math.round((mouseY - boundingRect.top - paddingTop) / (height) * canvas.height / chart.currentDevicePixelRatio);\\n\\n\\t\\treturn {\\n\\t\\t\\tx: mouseX,\\n\\t\\t\\ty: mouseY\\n\\t\\t};\\n\\n\\t};\\n\\n\\t// Private helper function to convert max-width/max-height values that may be percentages into a number\\n\\tfunction parseMaxStyle(styleValue, node, parentProperty) {\\n\\t\\tvar valueInPixels;\\n\\t\\tif (typeof styleValue === 'string') {\\n\\t\\t\\tvalueInPixels = parseInt(styleValue, 10);\\n\\n\\t\\t\\tif (styleValue.indexOf('%') !== -1) {\\n\\t\\t\\t\\t// percentage * size in dimension\\n\\t\\t\\t\\tvalueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\\n\\t\\t\\t}\\n\\t\\t} else {\\n\\t\\t\\tvalueInPixels = styleValue;\\n\\t\\t}\\n\\n\\t\\treturn valueInPixels;\\n\\t}\\n\\n\\t/**\\n\\t * Returns if the given value contains an effective constraint.\\n\\t * @private\\n\\t */\\n\\tfunction isConstrainedValue(value) {\\n\\t\\treturn value !== undefined && value !== null && value !== 'none';\\n\\t}\\n\\n\\t// Private helper to get a constraint dimension\\n\\t// @param domNode : the node to check the constraint on\\n\\t// @param maxStyle : the style that defines the maximum for the direction we are using (maxWidth / maxHeight)\\n\\t// @param percentageProperty : property of parent to use when calculating width as a percentage\\n\\t// @see http://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser\\n\\tfunction getConstraintDimension(domNode, maxStyle, percentageProperty) {\\n\\t\\tvar view = document.defaultView;\\n\\t\\tvar parentNode = domNode.parentNode;\\n\\t\\tvar constrainedNode = view.getComputedStyle(domNode)[maxStyle];\\n\\t\\tvar constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\\n\\t\\tvar hasCNode = isConstrainedValue(constrainedNode);\\n\\t\\tvar hasCContainer = isConstrainedValue(constrainedContainer);\\n\\t\\tvar infinity = Number.POSITIVE_INFINITY;\\n\\n\\t\\tif (hasCNode || hasCContainer) {\\n\\t\\t\\treturn Math.min(\\n\\t\\t\\t\\thasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity,\\n\\t\\t\\t\\thasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\\n\\t\\t}\\n\\n\\t\\treturn 'none';\\n\\t}\\n\\t// returns Number or undefined if no constraint\\n\\thelpers.getConstraintWidth = function(domNode) {\\n\\t\\treturn getConstraintDimension(domNode, 'max-width', 'clientWidth');\\n\\t};\\n\\t// returns Number or undefined if no constraint\\n\\thelpers.getConstraintHeight = function(domNode) {\\n\\t\\treturn getConstraintDimension(domNode, 'max-height', 'clientHeight');\\n\\t};\\n\\thelpers.getMaximumWidth = function(domNode) {\\n\\t\\tvar container = domNode.parentNode;\\n\\t\\tif (!container) {\\n\\t\\t\\treturn domNode.clientWidth;\\n\\t\\t}\\n\\n\\t\\tvar paddingLeft = parseInt(helpers.getStyle(container, 'padding-left'), 10);\\n\\t\\tvar paddingRight = parseInt(helpers.getStyle(container, 'padding-right'), 10);\\n\\t\\tvar w = container.clientWidth - paddingLeft - paddingRight;\\n\\t\\tvar cw = helpers.getConstraintWidth(domNode);\\n\\t\\treturn isNaN(cw) ? w : Math.min(w, cw);\\n\\t};\\n\\thelpers.getMaximumHeight = function(domNode) {\\n\\t\\tvar container = domNode.parentNode;\\n\\t\\tif (!container) {\\n\\t\\t\\treturn domNode.clientHeight;\\n\\t\\t}\\n\\n\\t\\tvar paddingTop = parseInt(helpers.getStyle(container, 'padding-top'), 10);\\n\\t\\tvar paddingBottom = parseInt(helpers.getStyle(container, 'padding-bottom'), 10);\\n\\t\\tvar h = container.clientHeight - paddingTop - paddingBottom;\\n\\t\\tvar ch = helpers.getConstraintHeight(domNode);\\n\\t\\treturn isNaN(ch) ? h : Math.min(h, ch);\\n\\t};\\n\\thelpers.getStyle = function(el, property) {\\n\\t\\treturn el.currentStyle ?\\n\\t\\t\\tel.currentStyle[property] :\\n\\t\\t\\tdocument.defaultView.getComputedStyle(el, null).getPropertyValue(property);\\n\\t};\\n\\thelpers.retinaScale = function(chart, forceRatio) {\\n\\t\\tvar pixelRatio = chart.currentDevicePixelRatio = forceRatio || window.devicePixelRatio || 1;\\n\\t\\tif (pixelRatio === 1) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tvar canvas = chart.canvas;\\n\\t\\tvar height = chart.height;\\n\\t\\tvar width = chart.width;\\n\\n\\t\\tcanvas.height = height * pixelRatio;\\n\\t\\tcanvas.width = width * pixelRatio;\\n\\t\\tchart.ctx.scale(pixelRatio, pixelRatio);\\n\\n\\t\\t// If no style has been set on the canvas, the render size is used as display size,\\n\\t\\t// making the chart visually bigger, so let's enforce it to the \\\"correct\\\" values.\\n\\t\\t// See https://github.com/chartjs/Chart.js/issues/3575\\n\\t\\tcanvas.style.height = height + 'px';\\n\\t\\tcanvas.style.width = width + 'px';\\n\\t};\\n\\t// -- Canvas methods\\n\\thelpers.fontString = function(pixelSize, fontStyle, fontFamily) {\\n\\t\\treturn fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\\n\\t};\\n\\thelpers.longestText = function(ctx, font, arrayOfThings, cache) {\\n\\t\\tcache = cache || {};\\n\\t\\tvar data = cache.data = cache.data || {};\\n\\t\\tvar gc = cache.garbageCollect = cache.garbageCollect || [];\\n\\n\\t\\tif (cache.font !== font) {\\n\\t\\t\\tdata = cache.data = {};\\n\\t\\t\\tgc = cache.garbageCollect = [];\\n\\t\\t\\tcache.font = font;\\n\\t\\t}\\n\\n\\t\\tctx.font = font;\\n\\t\\tvar longest = 0;\\n\\t\\thelpers.each(arrayOfThings, function(thing) {\\n\\t\\t\\t// Undefined strings and arrays should not be measured\\n\\t\\t\\tif (thing !== undefined && thing !== null && helpers.isArray(thing) !== true) {\\n\\t\\t\\t\\tlongest = helpers.measureText(ctx, data, gc, longest, thing);\\n\\t\\t\\t} else if (helpers.isArray(thing)) {\\n\\t\\t\\t\\t// if it is an array lets measure each element\\n\\t\\t\\t\\t// to do maybe simplify this function a bit so we can do this more recursively?\\n\\t\\t\\t\\thelpers.each(thing, function(nestedThing) {\\n\\t\\t\\t\\t\\t// Undefined strings and arrays should not be measured\\n\\t\\t\\t\\t\\tif (nestedThing !== undefined && nestedThing !== null && !helpers.isArray(nestedThing)) {\\n\\t\\t\\t\\t\\t\\tlongest = helpers.measureText(ctx, data, gc, longest, nestedThing);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t});\\n\\t\\t\\t}\\n\\t\\t});\\n\\n\\t\\tvar gcLen = gc.length / 2;\\n\\t\\tif (gcLen > arrayOfThings.length) {\\n\\t\\t\\tfor (var i = 0; i < gcLen; i++) {\\n\\t\\t\\t\\tdelete data[gc[i]];\\n\\t\\t\\t}\\n\\t\\t\\tgc.splice(0, gcLen);\\n\\t\\t}\\n\\t\\treturn longest;\\n\\t};\\n\\thelpers.measureText = function(ctx, data, gc, longest, string) {\\n\\t\\tvar textWidth = data[string];\\n\\t\\tif (!textWidth) {\\n\\t\\t\\ttextWidth = data[string] = ctx.measureText(string).width;\\n\\t\\t\\tgc.push(string);\\n\\t\\t}\\n\\t\\tif (textWidth > longest) {\\n\\t\\t\\tlongest = textWidth;\\n\\t\\t}\\n\\t\\treturn longest;\\n\\t};\\n\\thelpers.numberOfLabelLines = function(arrayOfThings) {\\n\\t\\tvar numberOfLines = 1;\\n\\t\\thelpers.each(arrayOfThings, function(thing) {\\n\\t\\t\\tif (helpers.isArray(thing)) {\\n\\t\\t\\t\\tif (thing.length > numberOfLines) {\\n\\t\\t\\t\\t\\tnumberOfLines = thing.length;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t});\\n\\t\\treturn numberOfLines;\\n\\t};\\n\\n\\thelpers.color = !color ?\\n\\t\\tfunction(value) {\\n\\t\\t\\tconsole.error('Color.js not found!');\\n\\t\\t\\treturn value;\\n\\t\\t} :\\n\\t\\tfunction(value) {\\n\\t\\t\\t/* global CanvasGradient */\\n\\t\\t\\tif (value instanceof CanvasGradient) {\\n\\t\\t\\t\\tvalue = defaults.global.defaultColor;\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn color(value);\\n\\t\\t};\\n\\n\\thelpers.getHoverColor = function(colorValue) {\\n\\t\\t/* global CanvasPattern */\\n\\t\\treturn (colorValue instanceof CanvasPattern) ?\\n\\t\\t\\tcolorValue :\\n\\t\\t\\thelpers.color(colorValue).saturate(0.5).darken(0.1).rgbString();\\n\\t};\\n};\\n\\n},{\\\"2\\\":2,\\\"25\\\":25,\\\"45\\\":45}],28:[function(require,module,exports){\\n'use strict';\\n\\nvar helpers = require(45);\\n\\n/**\\n * Helper function to get relative position for an event\\n * @param {Event|IEvent} event - The event to get the position for\\n * @param {Chart} chart - The chart\\n * @returns {Point} the event position\\n */\\nfunction getRelativePosition(e, chart) {\\n\\tif (e.native) {\\n\\t\\treturn {\\n\\t\\t\\tx: e.x,\\n\\t\\t\\ty: e.y\\n\\t\\t};\\n\\t}\\n\\n\\treturn helpers.getRelativePosition(e, chart);\\n}\\n\\n/**\\n * Helper function to traverse all of the visible elements in the chart\\n * @param chart {chart} the chart\\n * @param handler {Function} the callback to execute for each visible item\\n */\\nfunction parseVisibleItems(chart, handler) {\\n\\tvar datasets = chart.data.datasets;\\n\\tvar meta, i, j, ilen, jlen;\\n\\n\\tfor (i = 0, ilen = datasets.length; i < ilen; ++i) {\\n\\t\\tif (!chart.isDatasetVisible(i)) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tmeta = chart.getDatasetMeta(i);\\n\\t\\tfor (j = 0, jlen = meta.data.length; j < jlen; ++j) {\\n\\t\\t\\tvar element = meta.data[j];\\n\\t\\t\\tif (!element._view.skip) {\\n\\t\\t\\t\\thandler(element);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n}\\n\\n/**\\n * Helper function to get the items that intersect the event position\\n * @param items {ChartElement[]} elements to filter\\n * @param position {Point} the point to be nearest to\\n * @return {ChartElement[]} the nearest items\\n */\\nfunction getIntersectItems(chart, position) {\\n\\tvar elements = [];\\n\\n\\tparseVisibleItems(chart, function(element) {\\n\\t\\tif (element.inRange(position.x, position.y)) {\\n\\t\\t\\telements.push(element);\\n\\t\\t}\\n\\t});\\n\\n\\treturn elements;\\n}\\n\\n/**\\n * Helper function to get the items nearest to the event position considering all visible items in teh chart\\n * @param chart {Chart} the chart to look at elements from\\n * @param position {Point} the point to be nearest to\\n * @param intersect {Boolean} if true, only consider items that intersect the position\\n * @param distanceMetric {Function} function to provide the distance between points\\n * @return {ChartElement[]} the nearest items\\n */\\nfunction getNearestItems(chart, position, intersect, distanceMetric) {\\n\\tvar minDistance = Number.POSITIVE_INFINITY;\\n\\tvar nearestItems = [];\\n\\n\\tparseVisibleItems(chart, function(element) {\\n\\t\\tif (intersect && !element.inRange(position.x, position.y)) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tvar center = element.getCenterPoint();\\n\\t\\tvar distance = distanceMetric(position, center);\\n\\n\\t\\tif (distance < minDistance) {\\n\\t\\t\\tnearestItems = [element];\\n\\t\\t\\tminDistance = distance;\\n\\t\\t} else if (distance === minDistance) {\\n\\t\\t\\t// Can have multiple items at the same distance in which case we sort by size\\n\\t\\t\\tnearestItems.push(element);\\n\\t\\t}\\n\\t});\\n\\n\\treturn nearestItems;\\n}\\n\\n/**\\n * Get a distance metric function for two points based on the\\n * axis mode setting\\n * @param {String} axis the axis mode. x|y|xy\\n */\\nfunction getDistanceMetricForAxis(axis) {\\n\\tvar useX = axis.indexOf('x') !== -1;\\n\\tvar useY = axis.indexOf('y') !== -1;\\n\\n\\treturn function(pt1, pt2) {\\n\\t\\tvar deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\\n\\t\\tvar deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\\n\\t\\treturn Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\\n\\t};\\n}\\n\\nfunction indexMode(chart, e, options) {\\n\\tvar position = getRelativePosition(e, chart);\\n\\t// Default axis for index mode is 'x' to match old behaviour\\n\\toptions.axis = options.axis || 'x';\\n\\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\\n\\tvar items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\\n\\tvar elements = [];\\n\\n\\tif (!items.length) {\\n\\t\\treturn [];\\n\\t}\\n\\n\\tchart.data.datasets.forEach(function(dataset, datasetIndex) {\\n\\t\\tif (chart.isDatasetVisible(datasetIndex)) {\\n\\t\\t\\tvar meta = chart.getDatasetMeta(datasetIndex);\\n\\t\\t\\tvar element = meta.data[items[0]._index];\\n\\n\\t\\t\\t// don't count items that are skipped (null data)\\n\\t\\t\\tif (element && !element._view.skip) {\\n\\t\\t\\t\\telements.push(element);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t});\\n\\n\\treturn elements;\\n}\\n\\n/**\\n * @interface IInteractionOptions\\n */\\n/**\\n * If true, only consider items that intersect the point\\n * @name IInterfaceOptions#boolean\\n * @type Boolean\\n */\\n\\n/**\\n * Contains interaction related functions\\n * @namespace Chart.Interaction\\n */\\nmodule.exports = {\\n\\t// Helper function for different modes\\n\\tmodes: {\\n\\t\\tsingle: function(chart, e) {\\n\\t\\t\\tvar position = getRelativePosition(e, chart);\\n\\t\\t\\tvar elements = [];\\n\\n\\t\\t\\tparseVisibleItems(chart, function(element) {\\n\\t\\t\\t\\tif (element.inRange(position.x, position.y)) {\\n\\t\\t\\t\\t\\telements.push(element);\\n\\t\\t\\t\\t\\treturn elements;\\n\\t\\t\\t\\t}\\n\\t\\t\\t});\\n\\n\\t\\t\\treturn elements.slice(0, 1);\\n\\t\\t},\\n\\n\\t\\t/**\\n\\t\\t * @function Chart.Interaction.modes.label\\n\\t\\t * @deprecated since version 2.4.0\\n\\t\\t * @todo remove at version 3\\n\\t\\t * @private\\n\\t\\t */\\n\\t\\tlabel: indexMode,\\n\\n\\t\\t/**\\n\\t\\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\\n\\t\\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\\n\\t\\t * @function Chart.Interaction.modes.index\\n\\t\\t * @since v2.4.0\\n\\t\\t * @param chart {chart} the chart we are returning items from\\n\\t\\t * @param e {Event} the event we are find things at\\n\\t\\t * @param options {IInteractionOptions} options to use during interaction\\n\\t\\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\\n\\t\\t */\\n\\t\\tindex: indexMode,\\n\\n\\t\\t/**\\n\\t\\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\\n\\t\\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\\n\\t\\t * @function Chart.Interaction.modes.dataset\\n\\t\\t * @param chart {chart} the chart we are returning items from\\n\\t\\t * @param e {Event} the event we are find things at\\n\\t\\t * @param options {IInteractionOptions} options to use during interaction\\n\\t\\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\\n\\t\\t */\\n\\t\\tdataset: function(chart, e, options) {\\n\\t\\t\\tvar position = getRelativePosition(e, chart);\\n\\t\\t\\toptions.axis = options.axis || 'xy';\\n\\t\\t\\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\\n\\t\\t\\tvar items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\\n\\n\\t\\t\\tif (items.length > 0) {\\n\\t\\t\\t\\titems = chart.getDatasetMeta(items[0]._datasetIndex).data;\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn items;\\n\\t\\t},\\n\\n\\t\\t/**\\n\\t\\t * @function Chart.Interaction.modes.x-axis\\n\\t\\t * @deprecated since version 2.4.0. Use index mode and intersect == true\\n\\t\\t * @todo remove at version 3\\n\\t\\t * @private\\n\\t\\t */\\n\\t\\t'x-axis': function(chart, e) {\\n\\t\\t\\treturn indexMode(chart, e, {intersect: true});\\n\\t\\t},\\n\\n\\t\\t/**\\n\\t\\t * Point mode returns all elements that hit test based on the event position\\n\\t\\t * of the event\\n\\t\\t * @function Chart.Interaction.modes.intersect\\n\\t\\t * @param chart {chart} the chart we are returning items from\\n\\t\\t * @param e {Event} the event we are find things at\\n\\t\\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\\n\\t\\t */\\n\\t\\tpoint: function(chart, e) {\\n\\t\\t\\tvar position = getRelativePosition(e, chart);\\n\\t\\t\\treturn getIntersectItems(chart, position);\\n\\t\\t},\\n\\n\\t\\t/**\\n\\t\\t * nearest mode returns the element closest to the point\\n\\t\\t * @function Chart.Interaction.modes.intersect\\n\\t\\t * @param chart {chart} the chart we are returning items from\\n\\t\\t * @param e {Event} the event we are find things at\\n\\t\\t * @param options {IInteractionOptions} options to use\\n\\t\\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\\n\\t\\t */\\n\\t\\tnearest: function(chart, e, options) {\\n\\t\\t\\tvar position = getRelativePosition(e, chart);\\n\\t\\t\\toptions.axis = options.axis || 'xy';\\n\\t\\t\\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\\n\\t\\t\\tvar nearestItems = getNearestItems(chart, position, options.intersect, distanceMetric);\\n\\n\\t\\t\\t// We have multiple items at the same distance from the event. Now sort by smallest\\n\\t\\t\\tif (nearestItems.length > 1) {\\n\\t\\t\\t\\tnearestItems.sort(function(a, b) {\\n\\t\\t\\t\\t\\tvar sizeA = a.getArea();\\n\\t\\t\\t\\t\\tvar sizeB = b.getArea();\\n\\t\\t\\t\\t\\tvar ret = sizeA - sizeB;\\n\\n\\t\\t\\t\\t\\tif (ret === 0) {\\n\\t\\t\\t\\t\\t\\t// if equal sort by dataset index\\n\\t\\t\\t\\t\\t\\tret = a._datasetIndex - b._datasetIndex;\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\treturn ret;\\n\\t\\t\\t\\t});\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Return only 1 item\\n\\t\\t\\treturn nearestItems.slice(0, 1);\\n\\t\\t},\\n\\n\\t\\t/**\\n\\t\\t * x mode returns the elements that hit-test at the current x coordinate\\n\\t\\t * @function Chart.Interaction.modes.x\\n\\t\\t * @param chart {chart} the chart we are returning items from\\n\\t\\t * @param e {Event} the event we are find things at\\n\\t\\t * @param options {IInteractionOptions} options to use\\n\\t\\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\\n\\t\\t */\\n\\t\\tx: function(chart, e, options) {\\n\\t\\t\\tvar position = getRelativePosition(e, chart);\\n\\t\\t\\tvar items = [];\\n\\t\\t\\tvar intersectsItem = false;\\n\\n\\t\\t\\tparseVisibleItems(chart, function(element) {\\n\\t\\t\\t\\tif (element.inXRange(position.x)) {\\n\\t\\t\\t\\t\\titems.push(element);\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif (element.inRange(position.x, position.y)) {\\n\\t\\t\\t\\t\\tintersectsItem = true;\\n\\t\\t\\t\\t}\\n\\t\\t\\t});\\n\\n\\t\\t\\t// If we want to trigger on an intersect and we don't have any items\\n\\t\\t\\t// that intersect the position, return nothing\\n\\t\\t\\tif (options.intersect && !intersectsItem) {\\n\\t\\t\\t\\titems = [];\\n\\t\\t\\t}\\n\\t\\t\\treturn items;\\n\\t\\t},\\n\\n\\t\\t/**\\n\\t\\t * y mode returns the elements that hit-test at the current y coordinate\\n\\t\\t * @function Chart.Interaction.modes.y\\n\\t\\t * @param chart {chart} the chart we are returning items from\\n\\t\\t * @param e {Event} the event we are find things at\\n\\t\\t * @param options {IInteractionOptions} options to use\\n\\t\\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\\n\\t\\t */\\n\\t\\ty: function(chart, e, options) {\\n\\t\\t\\tvar position = getRelativePosition(e, chart);\\n\\t\\t\\tvar items = [];\\n\\t\\t\\tvar intersectsItem = false;\\n\\n\\t\\t\\tparseVisibleItems(chart, function(element) {\\n\\t\\t\\t\\tif (element.inYRange(position.y)) {\\n\\t\\t\\t\\t\\titems.push(element);\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif (element.inRange(position.x, position.y)) {\\n\\t\\t\\t\\t\\tintersectsItem = true;\\n\\t\\t\\t\\t}\\n\\t\\t\\t});\\n\\n\\t\\t\\t// If we want to trigger on an intersect and we don't have any items\\n\\t\\t\\t// that intersect the position, return nothing\\n\\t\\t\\tif (options.intersect && !intersectsItem) {\\n\\t\\t\\t\\titems = [];\\n\\t\\t\\t}\\n\\t\\t\\treturn items;\\n\\t\\t}\\n\\t}\\n};\\n\\n},{\\\"45\\\":45}],29:[function(require,module,exports){\\n'use strict';\\n\\nvar defaults = require(25);\\n\\ndefaults._set('global', {\\n\\tresponsive: true,\\n\\tresponsiveAnimationDuration: 0,\\n\\tmaintainAspectRatio: true,\\n\\tevents: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\\n\\thover: {\\n\\t\\tonHover: null,\\n\\t\\tmode: 'nearest',\\n\\t\\tintersect: true,\\n\\t\\tanimationDuration: 400\\n\\t},\\n\\tonClick: null,\\n\\tdefaultColor: 'rgba(0,0,0,0.1)',\\n\\tdefaultFontColor: '#666',\\n\\tdefaultFontFamily: \\\"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\\\",\\n\\tdefaultFontSize: 12,\\n\\tdefaultFontStyle: 'normal',\\n\\tshowLines: true,\\n\\n\\t// Element defaults defined in element extensions\\n\\telements: {},\\n\\n\\t// Layout options such as padding\\n\\tlayout: {\\n\\t\\tpadding: {\\n\\t\\t\\ttop: 0,\\n\\t\\t\\tright: 0,\\n\\t\\t\\tbottom: 0,\\n\\t\\t\\tleft: 0\\n\\t\\t}\\n\\t}\\n});\\n\\nmodule.exports = function() {\\n\\n\\t// Occupy the global variable of Chart, and create a simple base class\\n\\tvar Chart = function(item, config) {\\n\\t\\tthis.construct(item, config);\\n\\t\\treturn this;\\n\\t};\\n\\n\\tChart.Chart = Chart;\\n\\n\\treturn Chart;\\n};\\n\\n},{\\\"25\\\":25}],30:[function(require,module,exports){\\n'use strict';\\n\\nvar helpers = require(45);\\n\\nmodule.exports = function(Chart) {\\n\\n\\tfunction filterByPosition(array, position) {\\n\\t\\treturn helpers.where(array, function(v) {\\n\\t\\t\\treturn v.position === position;\\n\\t\\t});\\n\\t}\\n\\n\\tfunction sortByWeight(array, reverse) {\\n\\t\\tarray.forEach(function(v, i) {\\n\\t\\t\\tv._tmpIndex_ = i;\\n\\t\\t\\treturn v;\\n\\t\\t});\\n\\t\\tarray.sort(function(a, b) {\\n\\t\\t\\tvar v0 = reverse ? b : a;\\n\\t\\t\\tvar v1 = reverse ? a : b;\\n\\t\\t\\treturn v0.weight === v1.weight ?\\n\\t\\t\\t\\tv0._tmpIndex_ - v1._tmpIndex_ :\\n\\t\\t\\t\\tv0.weight - v1.weight;\\n\\t\\t});\\n\\t\\tarray.forEach(function(v) {\\n\\t\\t\\tdelete v._tmpIndex_;\\n\\t\\t});\\n\\t}\\n\\n\\t/**\\n\\t * @interface ILayoutItem\\n\\t * @prop {String} position - The position of the item in the chart layout. Possible values are\\n\\t * 'left', 'top', 'right', 'bottom', and 'chartArea'\\n\\t * @prop {Number} weight - The weight used to sort the item. Higher weights are further away from the chart area\\n\\t * @prop {Boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\\n\\t * @prop {Function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\\n\\t * @prop {Function} update - Takes two parameters: width and height. Returns size of item\\n\\t * @prop {Function} getPadding -  Returns an object with padding on the edges\\n\\t * @prop {Number} width - Width of item. Must be valid after update()\\n\\t * @prop {Number} height - Height of item. Must be valid after update()\\n\\t * @prop {Number} left - Left edge of the item. Set by layout system and cannot be used in update\\n\\t * @prop {Number} top - Top edge of the item. Set by layout system and cannot be used in update\\n\\t * @prop {Number} right - Right edge of the item. Set by layout system and cannot be used in update\\n\\t * @prop {Number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\\n\\t */\\n\\n\\t// The layout service is very self explanatory.  It's responsible for the layout within a chart.\\n\\t// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\\n\\t// It is this service's responsibility of carrying out that layout.\\n\\tChart.layoutService = {\\n\\t\\tdefaults: {},\\n\\n\\t\\t/**\\n\\t\\t * Register a box to a chart.\\n\\t\\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\\n\\t\\t * @param {Chart} chart - the chart to use\\n\\t\\t * @param {ILayoutItem} item - the item to add to be layed out\\n\\t\\t */\\n\\t\\taddBox: function(chart, item) {\\n\\t\\t\\tif (!chart.boxes) {\\n\\t\\t\\t\\tchart.boxes = [];\\n\\t\\t\\t}\\n\\n\\t\\t\\t// initialize item with default values\\n\\t\\t\\titem.fullWidth = item.fullWidth || false;\\n\\t\\t\\titem.position = item.position || 'top';\\n\\t\\t\\titem.weight = item.weight || 0;\\n\\n\\t\\t\\tchart.boxes.push(item);\\n\\t\\t},\\n\\n\\t\\t/**\\n\\t\\t * Remove a layoutItem from a chart\\n\\t\\t * @param {Chart} chart - the chart to remove the box from\\n\\t\\t * @param {Object} layoutItem - the item to remove from the layout\\n\\t\\t */\\n\\t\\tremoveBox: function(chart, layoutItem) {\\n\\t\\t\\tvar index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\\n\\t\\t\\tif (index !== -1) {\\n\\t\\t\\t\\tchart.boxes.splice(index, 1);\\n\\t\\t\\t}\\n\\t\\t},\\n\\n\\t\\t/**\\n\\t\\t * Sets (or updates) options on the given `item`.\\n\\t\\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\\n\\t\\t * @param {Object} item - the item to configure with the given options\\n\\t\\t * @param {Object} options - the new item options.\\n\\t\\t */\\n\\t\\tconfigure: function(chart, item, options) {\\n\\t\\t\\tvar props = ['fullWidth', 'position', 'weight'];\\n\\t\\t\\tvar ilen = props.length;\\n\\t\\t\\tvar i = 0;\\n\\t\\t\\tvar prop;\\n\\n\\t\\t\\tfor (; i < ilen; ++i) {\\n\\t\\t\\t\\tprop = props[i];\\n\\t\\t\\t\\tif (options.hasOwnProperty(prop)) {\\n\\t\\t\\t\\t\\titem[prop] = options[prop];\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t},\\n\\n\\t\\t/**\\n\\t\\t * Fits boxes of the given chart into the given size by having each box measure itself\\n\\t\\t * then running a fitting algorithm\\n\\t\\t * @param {Chart} chart - the chart\\n\\t\\t * @param {Number} width - the width to fit into\\n\\t\\t * @param {Number} height - the height to fit into\\n\\t\\t */\\n\\t\\tupdate: function(chart, width, height) {\\n\\t\\t\\tif (!chart) {\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar layoutOptions = chart.options.layout || {};\\n\\t\\t\\tvar padding = helpers.options.toPadding(layoutOptions.padding);\\n\\t\\t\\tvar leftPadding = padding.left;\\n\\t\\t\\tvar rightPadding = padding.right;\\n\\t\\t\\tvar topPadding = padding.top;\\n\\t\\t\\tvar bottomPadding = padding.bottom;\\n\\n\\t\\t\\tvar leftBoxes = filterByPosition(chart.boxes, 'left');\\n\\t\\t\\tvar rightBoxes = filterByPosition(chart.boxes, 'right');\\n\\t\\t\\tvar topBoxes = filterByPosition(chart.boxes, 'top');\\n\\t\\t\\tvar bottomBoxes = filterByPosition(chart.boxes, 'bottom');\\n\\t\\t\\tvar chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea');\\n\\n\\t\\t\\t// Sort boxes by weight. A higher weight is further away from the chart area\\n\\t\\t\\tsortByWeight(leftBoxes, true);\\n\\t\\t\\tsortByWeight(rightBoxes, false);\\n\\t\\t\\tsortByWeight(topBoxes, true);\\n\\t\\t\\tsortByWeight(bottomBoxes, false);\\n\\n\\t\\t\\t// Essentially we now have any number of boxes on each of the 4 sides.\\n\\t\\t\\t// Our canvas looks like the following.\\n\\t\\t\\t// The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\\n\\t\\t\\t// B1 is the bottom axis\\n\\t\\t\\t// There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\\n\\t\\t\\t// These locations are single-box locations only, when trying to register a chartArea location that is already taken,\\n\\t\\t\\t// an error will be thrown.\\n\\t\\t\\t//\\n\\t\\t\\t// |----------------------------------------------------|\\n\\t\\t\\t// |                  T1 (Full Width)                   |\\n\\t\\t\\t// |----------------------------------------------------|\\n\\t\\t\\t// |    |    |                 T2                  |    |\\n\\t\\t\\t// |    |----|-------------------------------------|----|\\n\\t\\t\\t// |    |    | C1 |                           | C2 |    |\\n\\t\\t\\t// |    |    |----|                           |----|    |\\n\\t\\t\\t// |    |    |                                     |    |\\n\\t\\t\\t// | L1 | L2 |           ChartArea (C0)            | R1 |\\n\\t\\t\\t// |    |    |                                     |    |\\n\\t\\t\\t// |    |    |----|                           |----|    |\\n\\t\\t\\t// |    |    | C3 |                           | C4 |    |\\n\\t\\t\\t// |    |----|-------------------------------------|----|\\n\\t\\t\\t// |    |    |                 B1                  |    |\\n\\t\\t\\t// |----------------------------------------------------|\\n\\t\\t\\t// |                  B2 (Full Width)                   |\\n\\t\\t\\t// |----------------------------------------------------|\\n\\t\\t\\t//\\n\\t\\t\\t// What we do to find the best sizing, we do the following\\n\\t\\t\\t// 1. Determine the minimum size of the chart area.\\n\\t\\t\\t// 2. Split the remaining width equally between each vertical axis\\n\\t\\t\\t// 3. Split the remaining height equally between each horizontal axis\\n\\t\\t\\t// 4. Give each layout the maximum size it can be. The layout will return it's minimum size\\n\\t\\t\\t// 5. Adjust the sizes of each axis based on it's minimum reported size.\\n\\t\\t\\t// 6. Refit each axis\\n\\t\\t\\t// 7. Position each axis in the final location\\n\\t\\t\\t// 8. Tell the chart the final location of the chart area\\n\\t\\t\\t// 9. Tell any axes that overlay the chart area the positions of the chart area\\n\\n\\t\\t\\t// Step 1\\n\\t\\t\\tvar chartWidth = width - leftPadding - rightPadding;\\n\\t\\t\\tvar chartHeight = height - topPadding - bottomPadding;\\n\\t\\t\\tvar chartAreaWidth = chartWidth / 2; // min 50%\\n\\t\\t\\tvar chartAreaHeight = chartHeight / 2; // min 50%\\n\\n\\t\\t\\t// Step 2\\n\\t\\t\\tvar verticalBoxWidth = (width - chartAreaWidth) / (leftBoxes.length + rightBoxes.length);\\n\\n\\t\\t\\t// Step 3\\n\\t\\t\\tvar horizontalBoxHeight = (height - chartAreaHeight) / (topBoxes.length + bottomBoxes.length);\\n\\n\\t\\t\\t// Step 4\\n\\t\\t\\tvar maxChartAreaWidth = chartWidth;\\n\\t\\t\\tvar maxChartAreaHeight = chartHeight;\\n\\t\\t\\tvar minBoxSizes = [];\\n\\n\\t\\t\\tfunction getMinimumBoxSize(box) {\\n\\t\\t\\t\\tvar minSize;\\n\\t\\t\\t\\tvar isHorizontal = box.isHorizontal();\\n\\n\\t\\t\\t\\tif (isHorizontal) {\\n\\t\\t\\t\\t\\tminSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, horizontalBoxHeight);\\n\\t\\t\\t\\t\\tmaxChartAreaHeight -= minSize.height;\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tminSize = box.update(verticalBoxWidth, chartAreaHeight);\\n\\t\\t\\t\\t\\tmaxChartAreaWidth -= minSize.width;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tminBoxSizes.push({\\n\\t\\t\\t\\t\\thorizontal: isHorizontal,\\n\\t\\t\\t\\t\\tminSize: minSize,\\n\\t\\t\\t\\t\\tbox: box,\\n\\t\\t\\t\\t});\\n\\t\\t\\t}\\n\\n\\t\\t\\thelpers.each(leftBoxes.concat(rightBoxes, topBoxes, bottomBoxes), getMinimumBoxSize);\\n\\n\\t\\t\\t// If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\\n\\t\\t\\tvar maxHorizontalLeftPadding = 0;\\n\\t\\t\\tvar maxHorizontalRightPadding = 0;\\n\\t\\t\\tvar maxVerticalTopPadding = 0;\\n\\t\\t\\tvar maxVerticalBottomPadding = 0;\\n\\n\\t\\t\\thelpers.each(topBoxes.concat(bottomBoxes), function(horizontalBox) {\\n\\t\\t\\t\\tif (horizontalBox.getPadding) {\\n\\t\\t\\t\\t\\tvar boxPadding = horizontalBox.getPadding();\\n\\t\\t\\t\\t\\tmaxHorizontalLeftPadding = Math.max(maxHorizontalLeftPadding, boxPadding.left);\\n\\t\\t\\t\\t\\tmaxHorizontalRightPadding = Math.max(maxHorizontalRightPadding, boxPadding.right);\\n\\t\\t\\t\\t}\\n\\t\\t\\t});\\n\\n\\t\\t\\thelpers.each(leftBoxes.concat(rightBoxes), function(verticalBox) {\\n\\t\\t\\t\\tif (verticalBox.getPadding) {\\n\\t\\t\\t\\t\\tvar boxPadding = verticalBox.getPadding();\\n\\t\\t\\t\\t\\tmaxVerticalTopPadding = Math.max(maxVerticalTopPadding, boxPadding.top);\\n\\t\\t\\t\\t\\tmaxVerticalBottomPadding = Math.max(maxVerticalBottomPadding, boxPadding.bottom);\\n\\t\\t\\t\\t}\\n\\t\\t\\t});\\n\\n\\t\\t\\t// At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\\n\\t\\t\\t// be if the axes are drawn at their minimum sizes.\\n\\t\\t\\t// Steps 5 & 6\\n\\t\\t\\tvar totalLeftBoxesWidth = leftPadding;\\n\\t\\t\\tvar totalRightBoxesWidth = rightPadding;\\n\\t\\t\\tvar totalTopBoxesHeight = topPadding;\\n\\t\\t\\tvar totalBottomBoxesHeight = bottomPadding;\\n\\n\\t\\t\\t// Function to fit a box\\n\\t\\t\\tfunction fitBox(box) {\\n\\t\\t\\t\\tvar minBoxSize = helpers.findNextWhere(minBoxSizes, function(minBox) {\\n\\t\\t\\t\\t\\treturn minBox.box === box;\\n\\t\\t\\t\\t});\\n\\n\\t\\t\\t\\tif (minBoxSize) {\\n\\t\\t\\t\\t\\tif (box.isHorizontal()) {\\n\\t\\t\\t\\t\\t\\tvar scaleMargin = {\\n\\t\\t\\t\\t\\t\\t\\tleft: Math.max(totalLeftBoxesWidth, maxHorizontalLeftPadding),\\n\\t\\t\\t\\t\\t\\t\\tright: Math.max(totalRightBoxesWidth, maxHorizontalRightPadding),\\n\\t\\t\\t\\t\\t\\t\\ttop: 0,\\n\\t\\t\\t\\t\\t\\t\\tbottom: 0\\n\\t\\t\\t\\t\\t\\t};\\n\\n\\t\\t\\t\\t\\t\\t// Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\\n\\t\\t\\t\\t\\t\\t// on the margin. Sometimes they need to increase in size slightly\\n\\t\\t\\t\\t\\t\\tbox.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\\n\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\tbox.update(minBoxSize.minSize.width, maxChartAreaHeight);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Update, and calculate the left and right margins for the horizontal boxes\\n\\t\\t\\thelpers.each(leftBoxes.concat(rightBoxes), fitBox);\\n\\n\\t\\t\\thelpers.each(leftBoxes, function(box) {\\n\\t\\t\\t\\ttotalLeftBoxesWidth += box.width;\\n\\t\\t\\t});\\n\\n\\t\\t\\thelpers.each(rightBoxes, function(box) {\\n\\t\\t\\t\\ttotalRightBoxesWidth += box.width;\\n\\t\\t\\t});\\n\\n\\t\\t\\t// Set the Left and Right margins for the horizontal boxes\\n\\t\\t\\thelpers.each(topBoxes.concat(bottomBoxes), fitBox);\\n\\n\\t\\t\\t// Figure out how much margin is on the top and bottom of the vertical boxes\\n\\t\\t\\thelpers.each(topBoxes, function(box) {\\n\\t\\t\\t\\ttotalTopBoxesHeight += box.height;\\n\\t\\t\\t});\\n\\n\\t\\t\\thelpers.each(bottomBoxes, function(box) {\\n\\t\\t\\t\\ttotalBottomBoxesHeight += box.height;\\n\\t\\t\\t});\\n\\n\\t\\t\\tfunction finalFitVerticalBox(box) {\\n\\t\\t\\t\\tvar minBoxSize = helpers.findNextWhere(minBoxSizes, function(minSize) {\\n\\t\\t\\t\\t\\treturn minSize.box === box;\\n\\t\\t\\t\\t});\\n\\n\\t\\t\\t\\tvar scaleMargin = {\\n\\t\\t\\t\\t\\tleft: 0,\\n\\t\\t\\t\\t\\tright: 0,\\n\\t\\t\\t\\t\\ttop: totalTopBoxesHeight,\\n\\t\\t\\t\\t\\tbottom: totalBottomBoxesHeight\\n\\t\\t\\t\\t};\\n\\n\\t\\t\\t\\tif (minBoxSize) {\\n\\t\\t\\t\\t\\tbox.update(minBoxSize.minSize.width, maxChartAreaHeight, scaleMargin);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Let the left layout know the final margin\\n\\t\\t\\thelpers.each(leftBoxes.concat(rightBoxes), finalFitVerticalBox);\\n\\n\\t\\t\\t// Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\\n\\t\\t\\ttotalLeftBoxesWidth = leftPadding;\\n\\t\\t\\ttotalRightBoxesWidth = rightPadding;\\n\\t\\t\\ttotalTopBoxesHeight = topPadding;\\n\\t\\t\\ttotalBottomBoxesHeight = bottomPadding;\\n\\n\\t\\t\\thelpers.each(leftBoxes, function(box) {\\n\\t\\t\\t\\ttotalLeftBoxesWidth += box.width;\\n\\t\\t\\t});\\n\\n\\t\\t\\thelpers.each(rightBoxes, function(box) {\\n\\t\\t\\t\\ttotalRightBoxesWidth += box.width;\\n\\t\\t\\t});\\n\\n\\t\\t\\thelpers.each(topBoxes, function(box) {\\n\\t\\t\\t\\ttotalTopBoxesHeight += box.height;\\n\\t\\t\\t});\\n\\t\\t\\thelpers.each(bottomBoxes, function(box) {\\n\\t\\t\\t\\ttotalBottomBoxesHeight += box.height;\\n\\t\\t\\t});\\n\\n\\t\\t\\t// We may be adding some padding to account for rotated x axis labels\\n\\t\\t\\tvar leftPaddingAddition = Math.max(maxHorizontalLeftPadding - totalLeftBoxesWidth, 0);\\n\\t\\t\\ttotalLeftBoxesWidth += leftPaddingAddition;\\n\\t\\t\\ttotalRightBoxesWidth += Math.max(maxHorizontalRightPadding - totalRightBoxesWidth, 0);\\n\\n\\t\\t\\tvar topPaddingAddition = Math.max(maxVerticalTopPadding - totalTopBoxesHeight, 0);\\n\\t\\t\\ttotalTopBoxesHeight += topPaddingAddition;\\n\\t\\t\\ttotalBottomBoxesHeight += Math.max(maxVerticalBottomPadding - totalBottomBoxesHeight, 0);\\n\\n\\t\\t\\t// Figure out if our chart area changed. This would occur if the dataset layout label rotation\\n\\t\\t\\t// changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\\n\\t\\t\\t// without calling `fit` again\\n\\t\\t\\tvar newMaxChartAreaHeight = height - totalTopBoxesHeight - totalBottomBoxesHeight;\\n\\t\\t\\tvar newMaxChartAreaWidth = width - totalLeftBoxesWidth - totalRightBoxesWidth;\\n\\n\\t\\t\\tif (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\\n\\t\\t\\t\\thelpers.each(leftBoxes, function(box) {\\n\\t\\t\\t\\t\\tbox.height = newMaxChartAreaHeight;\\n\\t\\t\\t\\t});\\n\\n\\t\\t\\t\\thelpers.each(rightBoxes, function(box) {\\n\\t\\t\\t\\t\\tbox.height = newMaxChartAreaHeight;\\n\\t\\t\\t\\t});\\n\\n\\t\\t\\t\\thelpers.each(topBoxes, function(box) {\\n\\t\\t\\t\\t\\tif (!box.fullWidth) {\\n\\t\\t\\t\\t\\t\\tbox.width = newMaxChartAreaWidth;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t});\\n\\n\\t\\t\\t\\thelpers.each(bottomBoxes, function(box) {\\n\\t\\t\\t\\t\\tif (!box.fullWidth) {\\n\\t\\t\\t\\t\\t\\tbox.width = newMaxChartAreaWidth;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t});\\n\\n\\t\\t\\t\\tmaxChartAreaHeight = newMaxChartAreaHeight;\\n\\t\\t\\t\\tmaxChartAreaWidth = newMaxChartAreaWidth;\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Step 7 - Position the boxes\\n\\t\\t\\tvar left = leftPadding + leftPaddingAddition;\\n\\t\\t\\tvar top = topPadding + topPaddingAddition;\\n\\n\\t\\t\\tfunction placeBox(box) {\\n\\t\\t\\t\\tif (box.isHorizontal()) {\\n\\t\\t\\t\\t\\tbox.left = box.fullWidth ? leftPadding : totalLeftBoxesWidth;\\n\\t\\t\\t\\t\\tbox.right = box.fullWidth ? width - rightPadding : totalLeftBoxesWidth + maxChartAreaWidth;\\n\\t\\t\\t\\t\\tbox.top = top;\\n\\t\\t\\t\\t\\tbox.bottom = top + box.height;\\n\\n\\t\\t\\t\\t\\t// Move to next point\\n\\t\\t\\t\\t\\ttop = box.bottom;\\n\\n\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\tbox.left = left;\\n\\t\\t\\t\\t\\tbox.right = left + box.width;\\n\\t\\t\\t\\t\\tbox.top = totalTopBoxesHeight;\\n\\t\\t\\t\\t\\tbox.bottom = totalTopBoxesHeight + maxChartAreaHeight;\\n\\n\\t\\t\\t\\t\\t// Move to next point\\n\\t\\t\\t\\t\\tleft = box.right;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\thelpers.each(leftBoxes.concat(topBoxes), placeBox);\\n\\n\\t\\t\\t// Account for chart width and height\\n\\t\\t\\tleft += maxChartAreaWidth;\\n\\t\\t\\ttop += maxChartAreaHeight;\\n\\n\\t\\t\\thelpers.each(rightBoxes, placeBox);\\n\\t\\t\\thelpers.each(bottomBoxes, placeBox);\\n\\n\\t\\t\\t// Step 8\\n\\t\\t\\tchart.chartArea = {\\n\\t\\t\\t\\tleft: totalLeftBoxesWidth,\\n\\t\\t\\t\\ttop: totalTopBoxesHeight,\\n\\t\\t\\t\\tright: totalLeftBoxesWidth + maxChartAreaWidth,\\n\\t\\t\\t\\tbottom: totalTopBoxesHeight + maxChartAreaHeight\\n\\t\\t\\t};\\n\\n\\t\\t\\t// Step 9\\n\\t\\t\\thelpers.each(chartAreaBoxes, function(box) {\\n\\t\\t\\t\\tbox.left = chart.chartArea.left;\\n\\t\\t\\t\\tbox.top = chart.chartArea.top;\\n\\t\\t\\t\\tbox.right = chart.chartArea.right;\\n\\t\\t\\t\\tbox.bottom = chart.chartArea.bottom;\\n\\n\\t\\t\\t\\tbox.update(maxChartAreaWidth, maxChartAreaHeight);\\n\\t\\t\\t});\\n\\t\\t}\\n\\t};\\n};\\n\\n},{\\\"45\\\":45}],31:[function(require,module,exports){\\n'use strict';\\n\\nvar defaults = require(25);\\nvar Element = require(26);\\nvar helpers = require(45);\\n\\ndefaults._set('global', {\\n\\tplugins: {}\\n});\\n\\nmodule.exports = function(Chart) {\\n\\n\\t/**\\n\\t * The plugin service singleton\\n\\t * @namespace Chart.plugins\\n\\t * @since 2.1.0\\n\\t */\\n\\tChart.plugins = {\\n\\t\\t/**\\n\\t\\t * Globally registered plugins.\\n\\t\\t * @private\\n\\t\\t */\\n\\t\\t_plugins: [],\\n\\n\\t\\t/**\\n\\t\\t * This identifier is used to invalidate the descriptors cache attached to each chart\\n\\t\\t * when a global plugin is registered or unregistered. In this case, the cache ID is\\n\\t\\t * incremented and descriptors are regenerated during following API calls.\\n\\t\\t * @private\\n\\t\\t */\\n\\t\\t_cacheId: 0,\\n\\n\\t\\t/**\\n\\t\\t * Registers the given plugin(s) if not already registered.\\n\\t\\t * @param {Array|Object} plugins plugin instance(s).\\n\\t\\t */\\n\\t\\tregister: function(plugins) {\\n\\t\\t\\tvar p = this._plugins;\\n\\t\\t\\t([]).concat(plugins).forEach(function(plugin) {\\n\\t\\t\\t\\tif (p.indexOf(plugin) === -1) {\\n\\t\\t\\t\\t\\tp.push(plugin);\\n\\t\\t\\t\\t}\\n\\t\\t\\t});\\n\\n\\t\\t\\tthis._cacheId++;\\n\\t\\t},\\n\\n\\t\\t/**\\n\\t\\t * Unregisters the given plugin(s) only if registered.\\n\\t\\t * @param {Array|Object} plugins plugin instance(s).\\n\\t\\t */\\n\\t\\tunregister: function(plugins) {\\n\\t\\t\\tvar p = this._plugins;\\n\\t\\t\\t([]).concat(plugins).forEach(function(plugin) {\\n\\t\\t\\t\\tvar idx = p.indexOf(plugin);\\n\\t\\t\\t\\tif (idx !== -1) {\\n\\t\\t\\t\\t\\tp.splice(idx, 1);\\n\\t\\t\\t\\t}\\n\\t\\t\\t});\\n\\n\\t\\t\\tthis._cacheId++;\\n\\t\\t},\\n\\n\\t\\t/**\\n\\t\\t * Remove all registered plugins.\\n\\t\\t * @since 2.1.5\\n\\t\\t */\\n\\t\\tclear: function() {\\n\\t\\t\\tthis._plugins = [];\\n\\t\\t\\tthis._cacheId++;\\n\\t\\t},\\n\\n\\t\\t/**\\n\\t\\t * Returns the number of registered plugins?\\n\\t\\t * @returns {Number}\\n\\t\\t * @since 2.1.5\\n\\t\\t */\\n\\t\\tcount: function() {\\n\\t\\t\\treturn this._plugins.length;\\n\\t\\t},\\n\\n\\t\\t/**\\n\\t\\t * Returns all registered plugin instances.\\n\\t\\t * @returns {Array} array of plugin objects.\\n\\t\\t * @since 2.1.5\\n\\t\\t */\\n\\t\\tgetAll: function() {\\n\\t\\t\\treturn this._plugins;\\n\\t\\t},\\n\\n\\t\\t/**\\n\\t\\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\\n\\t\\t * This method immediately returns as soon as a plugin explicitly returns false. The\\n\\t\\t * returned value can be used, for instance, to interrupt the current action.\\n\\t\\t * @param {Object} chart - The chart instance for which plugins should be called.\\n\\t\\t * @param {String} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\\n\\t\\t * @param {Array} [args] - Extra arguments to apply to the hook call.\\n\\t\\t * @returns {Boolean} false if any of the plugins return false, else returns true.\\n\\t\\t */\\n\\t\\tnotify: function(chart, hook, args) {\\n\\t\\t\\tvar descriptors = this.descriptors(chart);\\n\\t\\t\\tvar ilen = descriptors.length;\\n\\t\\t\\tvar i, descriptor, plugin, params, method;\\n\\n\\t\\t\\tfor (i = 0; i < ilen; ++i) {\\n\\t\\t\\t\\tdescriptor = descriptors[i];\\n\\t\\t\\t\\tplugin = descriptor.plugin;\\n\\t\\t\\t\\tmethod = plugin[hook];\\n\\t\\t\\t\\tif (typeof method === 'function') {\\n\\t\\t\\t\\t\\tparams = [chart].concat(args || []);\\n\\t\\t\\t\\t\\tparams.push(descriptor.options);\\n\\t\\t\\t\\t\\tif (method.apply(plugin, params) === false) {\\n\\t\\t\\t\\t\\t\\treturn false;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn true;\\n\\t\\t},\\n\\n\\t\\t/**\\n\\t\\t * Returns descriptors of enabled plugins for the given chart.\\n\\t\\t * @returns {Array} [{ plugin, options }]\\n\\t\\t * @private\\n\\t\\t */\\n\\t\\tdescriptors: function(chart) {\\n\\t\\t\\tvar cache = chart._plugins || (chart._plugins = {});\\n\\t\\t\\tif (cache.id === this._cacheId) {\\n\\t\\t\\t\\treturn cache.descriptors;\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar plugins = [];\\n\\t\\t\\tvar descriptors = [];\\n\\t\\t\\tvar config = (chart && chart.config) || {};\\n\\t\\t\\tvar options = (config.options && config.options.plugins) || {};\\n\\n\\t\\t\\tthis._plugins.concat(config.plugins || []).forEach(function(plugin) {\\n\\t\\t\\t\\tvar idx = plugins.indexOf(plugin);\\n\\t\\t\\t\\tif (idx !== -1) {\\n\\t\\t\\t\\t\\treturn;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tvar id = plugin.id;\\n\\t\\t\\t\\tvar opts = options[id];\\n\\t\\t\\t\\tif (opts === false) {\\n\\t\\t\\t\\t\\treturn;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif (opts === true) {\\n\\t\\t\\t\\t\\topts = helpers.clone(defaults.global.plugins[id]);\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tplugins.push(plugin);\\n\\t\\t\\t\\tdescriptors.push({\\n\\t\\t\\t\\t\\tplugin: plugin,\\n\\t\\t\\t\\t\\toptions: opts || {}\\n\\t\\t\\t\\t});\\n\\t\\t\\t});\\n\\n\\t\\t\\tcache.descriptors = descriptors;\\n\\t\\t\\tcache.id = this._cacheId;\\n\\t\\t\\treturn descriptors;\\n\\t\\t}\\n\\t};\\n\\n\\t/**\\n\\t * Plugin extension hooks.\\n\\t * @interface IPlugin\\n\\t * @since 2.1.0\\n\\t */\\n\\t/**\\n\\t * @method IPlugin#beforeInit\\n\\t * @desc Called before initializing `chart`.\\n\\t * @param {Chart.Controller} chart - The chart instance.\\n\\t * @param {Object} options - The plugin options.\\n\\t */\\n\\t/**\\n\\t * @method IPlugin#afterInit\\n\\t * @desc Called after `chart` has been initialized and before the first update.\\n\\t * @param {Chart.Controller} chart - The chart instance.\\n\\t * @param {Object} options - The plugin options.\\n\\t */\\n\\t/**\\n\\t * @method IPlugin#beforeUpdate\\n\\t * @desc Called before updating `chart`. If any plugin returns `false`, the update\\n\\t * is cancelled (and thus subsequent render(s)) until another `update` is triggered.\\n\\t * @param {Chart.Controller} chart - The chart instance.\\n\\t * @param {Object} options - The plugin options.\\n\\t * @returns {Boolean} `false` to cancel the chart update.\\n\\t */\\n\\t/**\\n\\t * @method IPlugin#afterUpdate\\n\\t * @desc Called after `chart` has been updated and before rendering. Note that this\\n\\t * hook will not be called if the chart update has been previously cancelled.\\n\\t * @param {Chart.Controller} chart - The chart instance.\\n\\t * @param {Object} options - The plugin options.\\n\\t */\\n\\t/**\\n\\t * @method IPlugin#beforeDatasetsUpdate\\n \\t * @desc Called before updating the `chart` datasets. If any plugin returns `false`,\\n\\t * the datasets update is cancelled until another `update` is triggered.\\n\\t * @param {Chart.Controller} chart - The chart instance.\\n\\t * @param {Object} options - The plugin options.\\n\\t * @returns {Boolean} false to cancel the datasets update.\\n\\t * @since version 2.1.5\\n\\t */\\n\\t/**\\n\\t * @method IPlugin#afterDatasetsUpdate\\n\\t * @desc Called after the `chart` datasets have been updated. Note that this hook\\n\\t * will not be called if the datasets update has been previously cancelled.\\n\\t * @param {Chart.Controller} chart - The chart instance.\\n\\t * @param {Object} options - The plugin options.\\n\\t * @since version 2.1.5\\n\\t */\\n\\t/**\\n\\t * @method IPlugin#beforeDatasetUpdate\\n \\t * @desc Called before updating the `chart` dataset at the given `args.index`. If any plugin\\n\\t * returns `false`, the datasets update is cancelled until another `update` is triggered.\\n\\t * @param {Chart} chart - The chart instance.\\n\\t * @param {Object} args - The call arguments.\\n\\t * @param {Number} args.index - The dataset index.\\n\\t * @param {Object} args.meta - The dataset metadata.\\n\\t * @param {Object} options - The plugin options.\\n\\t * @returns {Boolean} `false` to cancel the chart datasets drawing.\\n\\t */\\n\\t/**\\n\\t * @method IPlugin#afterDatasetUpdate\\n \\t * @desc Called after the `chart` datasets at the given `args.index` has been updated. Note\\n\\t * that this hook will not be called if the datasets update has been previously cancelled.\\n\\t * @param {Chart} chart - The chart instance.\\n\\t * @param {Object} args - The call arguments.\\n\\t * @param {Number} args.index - The dataset index.\\n\\t * @param {Object} args.meta - The dataset metadata.\\n\\t * @param {Object} options - The plugin options.\\n\\t */\\n\\t/**\\n\\t * @method IPlugin#beforeLayout\\n\\t * @desc Called before laying out `chart`. If any plugin returns `false`,\\n\\t * the layout update is cancelled until another `update` is triggered.\\n\\t * @param {Chart.Controller} chart - The chart instance.\\n\\t * @param {Object} options - The plugin options.\\n\\t * @returns {Boolean} `false` to cancel the chart layout.\\n\\t */\\n\\t/**\\n\\t * @method IPlugin#afterLayout\\n\\t * @desc Called after the `chart` has been layed out. Note that this hook will not\\n\\t * be called if the layout update has been previously cancelled.\\n\\t * @param {Chart.Controller} chart - The chart instance.\\n\\t * @param {Object} options - The plugin options.\\n\\t */\\n\\t/**\\n\\t * @method IPlugin#beforeRender\\n\\t * @desc Called before rendering `chart`. If any plugin returns `false`,\\n\\t * the rendering is cancelled until another `render` is triggered.\\n\\t * @param {Chart.Controller} chart - The chart instance.\\n\\t * @param {Object} options - The plugin options.\\n\\t * @returns {Boolean} `false` to cancel the chart rendering.\\n\\t */\\n\\t/**\\n\\t * @method IPlugin#afterRender\\n\\t * @desc Called after the `chart` has been fully rendered (and animation completed). Note\\n\\t * that this hook will not be called if the rendering has been previously cancelled.\\n\\t * @param {Chart.Controller} chart - The chart instance.\\n\\t * @param {Object} options - The plugin options.\\n\\t */\\n\\t/**\\n\\t * @method IPlugin#beforeDraw\\n\\t * @desc Called before drawing `chart` at every animation frame specified by the given\\n\\t * easing value. If any plugin returns `false`, the frame drawing is cancelled until\\n\\t * another `render` is triggered.\\n\\t * @param {Chart.Controller} chart - The chart instance.\\n\\t * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\\n\\t * @param {Object} options - The plugin options.\\n\\t * @returns {Boolean} `false` to cancel the chart drawing.\\n\\t */\\n\\t/**\\n\\t * @method IPlugin#afterDraw\\n\\t * @desc Called after the `chart` has been drawn for the specific easing value. Note\\n\\t * that this hook will not be called if the drawing has been previously cancelled.\\n\\t * @param {Chart.Controller} chart - The chart instance.\\n\\t * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\\n\\t * @param {Object} options - The plugin options.\\n\\t */\\n\\t/**\\n\\t * @method IPlugin#beforeDatasetsDraw\\n \\t * @desc Called before drawing the `chart` datasets. If any plugin returns `false`,\\n\\t * the datasets drawing is cancelled until another `render` is triggered.\\n\\t * @param {Chart.Controller} chart - The chart instance.\\n\\t * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\\n\\t * @param {Object} options - The plugin options.\\n\\t * @returns {Boolean} `false` to cancel the chart datasets drawing.\\n\\t */\\n\\t/**\\n\\t * @method IPlugin#afterDatasetsDraw\\n\\t * @desc Called after the `chart` datasets have been drawn. Note that this hook\\n\\t * will not be called if the datasets drawing has been previously cancelled.\\n\\t * @param {Chart.Controller} chart - The chart instance.\\n\\t * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\\n\\t * @param {Object} options - The plugin options.\\n\\t */\\n\\t/**\\n\\t * @method IPlugin#beforeDatasetDraw\\n \\t * @desc Called before drawing the `chart` dataset at the given `args.index` (datasets\\n\\t * are drawn in the reverse order). If any plugin returns `false`, the datasets drawing\\n\\t * is cancelled until another `render` is triggered.\\n\\t * @param {Chart} chart - The chart instance.\\n\\t * @param {Object} args - The call arguments.\\n\\t * @param {Number} args.index - The dataset index.\\n\\t * @param {Object} args.meta - The dataset metadata.\\n\\t * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\\n\\t * @param {Object} options - The plugin options.\\n\\t * @returns {Boolean} `false` to cancel the chart datasets drawing.\\n\\t */\\n\\t/**\\n\\t * @method IPlugin#afterDatasetDraw\\n \\t * @desc Called after the `chart` datasets at the given `args.index` have been drawn\\n\\t * (datasets are drawn in the reverse order). Note that this hook will not be called\\n\\t * if the datasets drawing has been previously cancelled.\\n\\t * @param {Chart} chart - The chart instance.\\n\\t * @param {Object} args - The call arguments.\\n\\t * @param {Number} args.index - The dataset index.\\n\\t * @param {Object} args.meta - The dataset metadata.\\n\\t * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\\n\\t * @param {Object} options - The plugin options.\\n\\t */\\n\\t/**\\n\\t * @method IPlugin#beforeEvent\\n \\t * @desc Called before processing the specified `event`. If any plugin returns `false`,\\n\\t * the event will be discarded.\\n\\t * @param {Chart.Controller} chart - The chart instance.\\n\\t * @param {IEvent} event - The event object.\\n\\t * @param {Object} options - The plugin options.\\n\\t */\\n\\t/**\\n\\t * @method IPlugin#afterEvent\\n\\t * @desc Called after the `event` has been consumed. Note that this hook\\n\\t * will not be called if the `event` has been previously discarded.\\n\\t * @param {Chart.Controller} chart - The chart instance.\\n\\t * @param {IEvent} event - The event object.\\n\\t * @param {Object} options - The plugin options.\\n\\t */\\n\\t/**\\n\\t * @method IPlugin#resize\\n\\t * @desc Called after the chart as been resized.\\n\\t * @param {Chart.Controller} chart - The chart instance.\\n\\t * @param {Number} size - The new canvas display size (eq. canvas.style width & height).\\n\\t * @param {Object} options - The plugin options.\\n\\t */\\n\\t/**\\n\\t * @method IPlugin#destroy\\n\\t * @desc Called after the chart as been destroyed.\\n\\t * @param {Chart.Controller} chart - The chart instance.\\n\\t * @param {Object} options - The plugin options.\\n\\t */\\n\\n\\t/**\\n\\t * Provided for backward compatibility, use Chart.plugins instead\\n\\t * @namespace Chart.pluginService\\n\\t * @deprecated since version 2.1.5\\n\\t * @todo remove at version 3\\n\\t * @private\\n\\t */\\n\\tChart.pluginService = Chart.plugins;\\n\\n\\t/**\\n\\t * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\\n\\t * effect, instead simply create/register plugins via plain JavaScript objects.\\n\\t * @interface Chart.PluginBase\\n\\t * @deprecated since version 2.5.0\\n\\t * @todo remove at version 3\\n\\t * @private\\n\\t */\\n\\tChart.PluginBase = Element.extend({});\\n};\\n\\n},{\\\"25\\\":25,\\\"26\\\":26,\\\"45\\\":45}],32:[function(require,module,exports){\\n'use strict';\\n\\nvar defaults = require(25);\\nvar Element = require(26);\\nvar helpers = require(45);\\nvar Ticks = require(34);\\n\\ndefaults._set('scale', {\\n\\tdisplay: true,\\n\\tposition: 'left',\\n\\toffset: false,\\n\\n\\t// grid line settings\\n\\tgridLines: {\\n\\t\\tdisplay: true,\\n\\t\\tcolor: 'rgba(0, 0, 0, 0.1)',\\n\\t\\tlineWidth: 1,\\n\\t\\tdrawBorder: true,\\n\\t\\tdrawOnChartArea: true,\\n\\t\\tdrawTicks: true,\\n\\t\\ttickMarkLength: 10,\\n\\t\\tzeroLineWidth: 1,\\n\\t\\tzeroLineColor: 'rgba(0,0,0,0.25)',\\n\\t\\tzeroLineBorderDash: [],\\n\\t\\tzeroLineBorderDashOffset: 0.0,\\n\\t\\toffsetGridLines: false,\\n\\t\\tborderDash: [],\\n\\t\\tborderDashOffset: 0.0\\n\\t},\\n\\n\\t// scale label\\n\\tscaleLabel: {\\n\\t\\t// display property\\n\\t\\tdisplay: false,\\n\\n\\t\\t// actual label\\n\\t\\tlabelString: '',\\n\\n\\t\\t// line height\\n\\t\\tlineHeight: 1.2,\\n\\n\\t\\t// top/bottom padding\\n\\t\\tpadding: {\\n\\t\\t\\ttop: 4,\\n\\t\\t\\tbottom: 4\\n\\t\\t}\\n\\t},\\n\\n\\t// label settings\\n\\tticks: {\\n\\t\\tbeginAtZero: false,\\n\\t\\tminRotation: 0,\\n\\t\\tmaxRotation: 50,\\n\\t\\tmirror: false,\\n\\t\\tpadding: 0,\\n\\t\\treverse: false,\\n\\t\\tdisplay: true,\\n\\t\\tautoSkip: true,\\n\\t\\tautoSkipPadding: 0,\\n\\t\\tlabelOffset: 0,\\n\\t\\t// We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\\n\\t\\tcallback: Ticks.formatters.values,\\n\\t\\tminor: {},\\n\\t\\tmajor: {}\\n\\t}\\n});\\n\\nfunction labelsFromTicks(ticks) {\\n\\tvar labels = [];\\n\\tvar i, ilen;\\n\\n\\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\\n\\t\\tlabels.push(ticks[i].label);\\n\\t}\\n\\n\\treturn labels;\\n}\\n\\nfunction getLineValue(scale, index, offsetGridLines) {\\n\\tvar lineValue = scale.getPixelForTick(index);\\n\\n\\tif (offsetGridLines) {\\n\\t\\tif (index === 0) {\\n\\t\\t\\tlineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\\n\\t\\t} else {\\n\\t\\t\\tlineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\\n\\t\\t}\\n\\t}\\n\\treturn lineValue;\\n}\\n\\nmodule.exports = function(Chart) {\\n\\n\\tfunction computeTextSize(context, tick, font) {\\n\\t\\treturn helpers.isArray(tick) ?\\n\\t\\t\\thelpers.longestText(context, font, tick) :\\n\\t\\t\\tcontext.measureText(tick).width;\\n\\t}\\n\\n\\tfunction parseFontOptions(options) {\\n\\t\\tvar valueOrDefault = helpers.valueOrDefault;\\n\\t\\tvar globalDefaults = defaults.global;\\n\\t\\tvar size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\\n\\t\\tvar style = valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle);\\n\\t\\tvar family = valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily);\\n\\n\\t\\treturn {\\n\\t\\t\\tsize: size,\\n\\t\\t\\tstyle: style,\\n\\t\\t\\tfamily: family,\\n\\t\\t\\tfont: helpers.fontString(size, style, family)\\n\\t\\t};\\n\\t}\\n\\n\\tfunction parseLineHeight(options) {\\n\\t\\treturn helpers.options.toLineHeight(\\n\\t\\t\\thelpers.valueOrDefault(options.lineHeight, 1.2),\\n\\t\\t\\thelpers.valueOrDefault(options.fontSize, defaults.global.defaultFontSize));\\n\\t}\\n\\n\\tChart.Scale = Element.extend({\\n\\t\\t/**\\n\\t\\t * Get the padding needed for the scale\\n\\t\\t * @method getPadding\\n\\t\\t * @private\\n\\t\\t * @returns {Padding} the necessary padding\\n\\t\\t */\\n\\t\\tgetPadding: function() {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\treturn {\\n\\t\\t\\t\\tleft: me.paddingLeft || 0,\\n\\t\\t\\t\\ttop: me.paddingTop || 0,\\n\\t\\t\\t\\tright: me.paddingRight || 0,\\n\\t\\t\\t\\tbottom: me.paddingBottom || 0\\n\\t\\t\\t};\\n\\t\\t},\\n\\n\\t\\t/**\\n\\t\\t * Returns the scale tick objects ({label, major})\\n\\t\\t * @since 2.7\\n\\t\\t */\\n\\t\\tgetTicks: function() {\\n\\t\\t\\treturn this._ticks;\\n\\t\\t},\\n\\n\\t\\t// These methods are ordered by lifecyle. Utilities then follow.\\n\\t\\t// Any function defined here is inherited by all scale types.\\n\\t\\t// Any function can be extended by the scale type\\n\\n\\t\\tmergeTicksOptions: function() {\\n\\t\\t\\tvar ticks = this.options.ticks;\\n\\t\\t\\tif (ticks.minor === false) {\\n\\t\\t\\t\\tticks.minor = {\\n\\t\\t\\t\\t\\tdisplay: false\\n\\t\\t\\t\\t};\\n\\t\\t\\t}\\n\\t\\t\\tif (ticks.major === false) {\\n\\t\\t\\t\\tticks.major = {\\n\\t\\t\\t\\t\\tdisplay: false\\n\\t\\t\\t\\t};\\n\\t\\t\\t}\\n\\t\\t\\tfor (var key in ticks) {\\n\\t\\t\\t\\tif (key !== 'major' && key !== 'minor') {\\n\\t\\t\\t\\t\\tif (typeof ticks.minor[key] === 'undefined') {\\n\\t\\t\\t\\t\\t\\tticks.minor[key] = ticks[key];\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\tif (typeof ticks.major[key] === 'undefined') {\\n\\t\\t\\t\\t\\t\\tticks.major[key] = ticks[key];\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\tbeforeUpdate: function() {\\n\\t\\t\\thelpers.callback(this.options.beforeUpdate, [this]);\\n\\t\\t},\\n\\t\\tupdate: function(maxWidth, maxHeight, margins) {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\tvar i, ilen, labels, label, ticks, tick;\\n\\n\\t\\t\\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\\n\\t\\t\\tme.beforeUpdate();\\n\\n\\t\\t\\t// Absorb the master measurements\\n\\t\\t\\tme.maxWidth = maxWidth;\\n\\t\\t\\tme.maxHeight = maxHeight;\\n\\t\\t\\tme.margins = helpers.extend({\\n\\t\\t\\t\\tleft: 0,\\n\\t\\t\\t\\tright: 0,\\n\\t\\t\\t\\ttop: 0,\\n\\t\\t\\t\\tbottom: 0\\n\\t\\t\\t}, margins);\\n\\t\\t\\tme.longestTextCache = me.longestTextCache || {};\\n\\n\\t\\t\\t// Dimensions\\n\\t\\t\\tme.beforeSetDimensions();\\n\\t\\t\\tme.setDimensions();\\n\\t\\t\\tme.afterSetDimensions();\\n\\n\\t\\t\\t// Data min/max\\n\\t\\t\\tme.beforeDataLimits();\\n\\t\\t\\tme.determineDataLimits();\\n\\t\\t\\tme.afterDataLimits();\\n\\n\\t\\t\\t// Ticks - `this.ticks` is now DEPRECATED!\\n\\t\\t\\t// Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\\n\\t\\t\\t// and must not be accessed directly from outside this class. `this.ticks` being\\n\\t\\t\\t// around for long time and not marked as private, we can't change its structure\\n\\t\\t\\t// without unexpected breaking changes. If you need to access the scale ticks,\\n\\t\\t\\t// use scale.getTicks() instead.\\n\\n\\t\\t\\tme.beforeBuildTicks();\\n\\n\\t\\t\\t// New implementations should return an array of objects but for BACKWARD COMPAT,\\n\\t\\t\\t// we still support no return (`this.ticks` internally set by calling this method).\\n\\t\\t\\tticks = me.buildTicks() || [];\\n\\n\\t\\t\\tme.afterBuildTicks();\\n\\n\\t\\t\\tme.beforeTickToLabelConversion();\\n\\n\\t\\t\\t// New implementations should return the formatted tick labels but for BACKWARD\\n\\t\\t\\t// COMPAT, we still support no return (`this.ticks` internally changed by calling\\n\\t\\t\\t// this method and supposed to contain only string values).\\n\\t\\t\\tlabels = me.convertTicksToLabels(ticks) || me.ticks;\\n\\n\\t\\t\\tme.afterTickToLabelConversion();\\n\\n\\t\\t\\tme.ticks = labels;   // BACKWARD COMPATIBILITY\\n\\n\\t\\t\\t// IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\\n\\n\\t\\t\\t// BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\\n\\t\\t\\tfor (i = 0, ilen = labels.length; i < ilen; ++i) {\\n\\t\\t\\t\\tlabel = labels[i];\\n\\t\\t\\t\\ttick = ticks[i];\\n\\t\\t\\t\\tif (!tick) {\\n\\t\\t\\t\\t\\tticks.push(tick = {\\n\\t\\t\\t\\t\\t\\tlabel: label,\\n\\t\\t\\t\\t\\t\\tmajor: false\\n\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\ttick.label = label;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\tme._ticks = ticks;\\n\\n\\t\\t\\t// Tick Rotation\\n\\t\\t\\tme.beforeCalculateTickRotation();\\n\\t\\t\\tme.calculateTickRotation();\\n\\t\\t\\tme.afterCalculateTickRotation();\\n\\t\\t\\t// Fit\\n\\t\\t\\tme.beforeFit();\\n\\t\\t\\tme.fit();\\n\\t\\t\\tme.afterFit();\\n\\t\\t\\t//\\n\\t\\t\\tme.afterUpdate();\\n\\n\\t\\t\\treturn me.minSize;\\n\\n\\t\\t},\\n\\t\\tafterUpdate: function() {\\n\\t\\t\\thelpers.callback(this.options.afterUpdate, [this]);\\n\\t\\t},\\n\\n\\t\\t//\\n\\n\\t\\tbeforeSetDimensions: function() {\\n\\t\\t\\thelpers.callback(this.options.beforeSetDimensions, [this]);\\n\\t\\t},\\n\\t\\tsetDimensions: function() {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\t// Set the unconstrained dimension before label rotation\\n\\t\\t\\tif (me.isHorizontal()) {\\n\\t\\t\\t\\t// Reset position before calculating rotation\\n\\t\\t\\t\\tme.width = me.maxWidth;\\n\\t\\t\\t\\tme.left = 0;\\n\\t\\t\\t\\tme.right = me.width;\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tme.height = me.maxHeight;\\n\\n\\t\\t\\t\\t// Reset position before calculating rotation\\n\\t\\t\\t\\tme.top = 0;\\n\\t\\t\\t\\tme.bottom = me.height;\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Reset padding\\n\\t\\t\\tme.paddingLeft = 0;\\n\\t\\t\\tme.paddingTop = 0;\\n\\t\\t\\tme.paddingRight = 0;\\n\\t\\t\\tme.paddingBottom = 0;\\n\\t\\t},\\n\\t\\tafterSetDimensions: function() {\\n\\t\\t\\thelpers.callback(this.options.afterSetDimensions, [this]);\\n\\t\\t},\\n\\n\\t\\t// Data limits\\n\\t\\tbeforeDataLimits: function() {\\n\\t\\t\\thelpers.callback(this.options.beforeDataLimits, [this]);\\n\\t\\t},\\n\\t\\tdetermineDataLimits: helpers.noop,\\n\\t\\tafterDataLimits: function() {\\n\\t\\t\\thelpers.callback(this.options.afterDataLimits, [this]);\\n\\t\\t},\\n\\n\\t\\t//\\n\\t\\tbeforeBuildTicks: function() {\\n\\t\\t\\thelpers.callback(this.options.beforeBuildTicks, [this]);\\n\\t\\t},\\n\\t\\tbuildTicks: helpers.noop,\\n\\t\\tafterBuildTicks: function() {\\n\\t\\t\\thelpers.callback(this.options.afterBuildTicks, [this]);\\n\\t\\t},\\n\\n\\t\\tbeforeTickToLabelConversion: function() {\\n\\t\\t\\thelpers.callback(this.options.beforeTickToLabelConversion, [this]);\\n\\t\\t},\\n\\t\\tconvertTicksToLabels: function() {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\t// Convert ticks to strings\\n\\t\\t\\tvar tickOpts = me.options.ticks;\\n\\t\\t\\tme.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\\n\\t\\t},\\n\\t\\tafterTickToLabelConversion: function() {\\n\\t\\t\\thelpers.callback(this.options.afterTickToLabelConversion, [this]);\\n\\t\\t},\\n\\n\\t\\t//\\n\\n\\t\\tbeforeCalculateTickRotation: function() {\\n\\t\\t\\thelpers.callback(this.options.beforeCalculateTickRotation, [this]);\\n\\t\\t},\\n\\t\\tcalculateTickRotation: function() {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\tvar context = me.ctx;\\n\\t\\t\\tvar tickOpts = me.options.ticks;\\n\\t\\t\\tvar labels = labelsFromTicks(me._ticks);\\n\\n\\t\\t\\t// Get the width of each grid by calculating the difference\\n\\t\\t\\t// between x offsets between 0 and 1.\\n\\t\\t\\tvar tickFont = parseFontOptions(tickOpts);\\n\\t\\t\\tcontext.font = tickFont.font;\\n\\n\\t\\t\\tvar labelRotation = tickOpts.minRotation || 0;\\n\\n\\t\\t\\tif (labels.length && me.options.display && me.isHorizontal()) {\\n\\t\\t\\t\\tvar originalLabelWidth = helpers.longestText(context, tickFont.font, labels, me.longestTextCache);\\n\\t\\t\\t\\tvar labelWidth = originalLabelWidth;\\n\\t\\t\\t\\tvar cosRotation, sinRotation;\\n\\n\\t\\t\\t\\t// Allow 3 pixels x2 padding either side for label readability\\n\\t\\t\\t\\tvar tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6;\\n\\n\\t\\t\\t\\t// Max label rotation can be set or default to 90 - also act as a loop counter\\n\\t\\t\\t\\twhile (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\\n\\t\\t\\t\\t\\tvar angleRadians = helpers.toRadians(labelRotation);\\n\\t\\t\\t\\t\\tcosRotation = Math.cos(angleRadians);\\n\\t\\t\\t\\t\\tsinRotation = Math.sin(angleRadians);\\n\\n\\t\\t\\t\\t\\tif (sinRotation * originalLabelWidth > me.maxHeight) {\\n\\t\\t\\t\\t\\t\\t// go back one step\\n\\t\\t\\t\\t\\t\\tlabelRotation--;\\n\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tlabelRotation++;\\n\\t\\t\\t\\t\\tlabelWidth = cosRotation * originalLabelWidth;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\tme.labelRotation = labelRotation;\\n\\t\\t},\\n\\t\\tafterCalculateTickRotation: function() {\\n\\t\\t\\thelpers.callback(this.options.afterCalculateTickRotation, [this]);\\n\\t\\t},\\n\\n\\t\\t//\\n\\n\\t\\tbeforeFit: function() {\\n\\t\\t\\thelpers.callback(this.options.beforeFit, [this]);\\n\\t\\t},\\n\\t\\tfit: function() {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\t// Reset\\n\\t\\t\\tvar minSize = me.minSize = {\\n\\t\\t\\t\\twidth: 0,\\n\\t\\t\\t\\theight: 0\\n\\t\\t\\t};\\n\\n\\t\\t\\tvar labels = labelsFromTicks(me._ticks);\\n\\n\\t\\t\\tvar opts = me.options;\\n\\t\\t\\tvar tickOpts = opts.ticks;\\n\\t\\t\\tvar scaleLabelOpts = opts.scaleLabel;\\n\\t\\t\\tvar gridLineOpts = opts.gridLines;\\n\\t\\t\\tvar display = opts.display;\\n\\t\\t\\tvar isHorizontal = me.isHorizontal();\\n\\n\\t\\t\\tvar tickFont = parseFontOptions(tickOpts);\\n\\t\\t\\tvar tickMarkLength = opts.gridLines.tickMarkLength;\\n\\n\\t\\t\\t// Width\\n\\t\\t\\tif (isHorizontal) {\\n\\t\\t\\t\\t// subtract the margins to line up with the chartArea if we are a full width scale\\n\\t\\t\\t\\tminSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tminSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\\n\\t\\t\\t}\\n\\n\\t\\t\\t// height\\n\\t\\t\\tif (isHorizontal) {\\n\\t\\t\\t\\tminSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tminSize.height = me.maxHeight; // fill all the height\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Are we showing a title for the scale?\\n\\t\\t\\tif (scaleLabelOpts.display && display) {\\n\\t\\t\\t\\tvar scaleLabelLineHeight = parseLineHeight(scaleLabelOpts);\\n\\t\\t\\t\\tvar scaleLabelPadding = helpers.options.toPadding(scaleLabelOpts.padding);\\n\\t\\t\\t\\tvar deltaHeight = scaleLabelLineHeight + scaleLabelPadding.height;\\n\\n\\t\\t\\t\\tif (isHorizontal) {\\n\\t\\t\\t\\t\\tminSize.height += deltaHeight;\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tminSize.width += deltaHeight;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Don't bother fitting the ticks if we are not showing them\\n\\t\\t\\tif (tickOpts.display && display) {\\n\\t\\t\\t\\tvar largestTextWidth = helpers.longestText(me.ctx, tickFont.font, labels, me.longestTextCache);\\n\\t\\t\\t\\tvar tallestLabelHeightInLines = helpers.numberOfLabelLines(labels);\\n\\t\\t\\t\\tvar lineSpace = tickFont.size * 0.5;\\n\\t\\t\\t\\tvar tickPadding = me.options.ticks.padding;\\n\\n\\t\\t\\t\\tif (isHorizontal) {\\n\\t\\t\\t\\t\\t// A horizontal axis is more constrained by the height.\\n\\t\\t\\t\\t\\tme.longestLabelWidth = largestTextWidth;\\n\\n\\t\\t\\t\\t\\tvar angleRadians = helpers.toRadians(me.labelRotation);\\n\\t\\t\\t\\t\\tvar cosRotation = Math.cos(angleRadians);\\n\\t\\t\\t\\t\\tvar sinRotation = Math.sin(angleRadians);\\n\\n\\t\\t\\t\\t\\t// TODO - improve this calculation\\n\\t\\t\\t\\t\\tvar labelHeight = (sinRotation * largestTextWidth)\\n\\t\\t\\t\\t\\t\\t+ (tickFont.size * tallestLabelHeightInLines)\\n\\t\\t\\t\\t\\t\\t+ (lineSpace * (tallestLabelHeightInLines - 1))\\n\\t\\t\\t\\t\\t\\t+ lineSpace; // padding\\n\\n\\t\\t\\t\\t\\tminSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\\n\\n\\t\\t\\t\\t\\tme.ctx.font = tickFont.font;\\n\\t\\t\\t\\t\\tvar firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.font);\\n\\t\\t\\t\\t\\tvar lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.font);\\n\\n\\t\\t\\t\\t\\t// Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\\n\\t\\t\\t\\t\\t// which means that the right padding is dominated by the font height\\n\\t\\t\\t\\t\\tif (me.labelRotation !== 0) {\\n\\t\\t\\t\\t\\t\\tme.paddingLeft = opts.position === 'bottom' ? (cosRotation * firstLabelWidth) + 3 : (cosRotation * lineSpace) + 3; // add 3 px to move away from canvas edges\\n\\t\\t\\t\\t\\t\\tme.paddingRight = opts.position === 'bottom' ? (cosRotation * lineSpace) + 3 : (cosRotation * lastLabelWidth) + 3;\\n\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\tme.paddingLeft = firstLabelWidth / 2 + 3; // add 3 px to move away from canvas edges\\n\\t\\t\\t\\t\\t\\tme.paddingRight = lastLabelWidth / 2 + 3;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t// A vertical axis is more constrained by the width. Labels are the\\n\\t\\t\\t\\t\\t// dominant factor here, so get that length first and account for padding\\n\\t\\t\\t\\t\\tif (tickOpts.mirror) {\\n\\t\\t\\t\\t\\t\\tlargestTextWidth = 0;\\n\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t// use lineSpace for consistency with horizontal axis\\n\\t\\t\\t\\t\\t\\t// tickPadding is not implemented for horizontal\\n\\t\\t\\t\\t\\t\\tlargestTextWidth += tickPadding + lineSpace;\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tminSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\\n\\n\\t\\t\\t\\t\\tme.paddingTop = tickFont.size / 2;\\n\\t\\t\\t\\t\\tme.paddingBottom = tickFont.size / 2;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\tme.handleMargins();\\n\\n\\t\\t\\tme.width = minSize.width;\\n\\t\\t\\tme.height = minSize.height;\\n\\t\\t},\\n\\n\\t\\t/**\\n\\t\\t * Handle margins and padding interactions\\n\\t\\t * @private\\n\\t\\t */\\n\\t\\thandleMargins: function() {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\tif (me.margins) {\\n\\t\\t\\t\\tme.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\\n\\t\\t\\t\\tme.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\\n\\t\\t\\t\\tme.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\\n\\t\\t\\t\\tme.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\\n\\t\\t\\t}\\n\\t\\t},\\n\\n\\t\\tafterFit: function() {\\n\\t\\t\\thelpers.callback(this.options.afterFit, [this]);\\n\\t\\t},\\n\\n\\t\\t// Shared Methods\\n\\t\\tisHorizontal: function() {\\n\\t\\t\\treturn this.options.position === 'top' || this.options.position === 'bottom';\\n\\t\\t},\\n\\t\\tisFullWidth: function() {\\n\\t\\t\\treturn (this.options.fullWidth);\\n\\t\\t},\\n\\n\\t\\t// Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\\n\\t\\tgetRightValue: function(rawValue) {\\n\\t\\t\\t// Null and undefined values first\\n\\t\\t\\tif (helpers.isNullOrUndef(rawValue)) {\\n\\t\\t\\t\\treturn NaN;\\n\\t\\t\\t}\\n\\t\\t\\t// isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\\n\\t\\t\\tif (typeof rawValue === 'number' && !isFinite(rawValue)) {\\n\\t\\t\\t\\treturn NaN;\\n\\t\\t\\t}\\n\\t\\t\\t// If it is in fact an object, dive in one more level\\n\\t\\t\\tif (rawValue) {\\n\\t\\t\\t\\tif (this.isHorizontal()) {\\n\\t\\t\\t\\t\\tif (rawValue.x !== undefined) {\\n\\t\\t\\t\\t\\t\\treturn this.getRightValue(rawValue.x);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t} else if (rawValue.y !== undefined) {\\n\\t\\t\\t\\t\\treturn this.getRightValue(rawValue.y);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Value is good, return it\\n\\t\\t\\treturn rawValue;\\n\\t\\t},\\n\\n\\t\\t// Used to get the value to display in the tooltip for the data at the given index\\n\\t\\t// function getLabelForIndex(index, datasetIndex)\\n\\t\\tgetLabelForIndex: helpers.noop,\\n\\n\\t\\t// Used to get data value locations.  Value can either be an index or a numerical value\\n\\t\\tgetPixelForValue: helpers.noop,\\n\\n\\t\\t// Used to get the data value from a given pixel. This is the inverse of getPixelForValue\\n\\t\\tgetValueForPixel: helpers.noop,\\n\\n\\t\\t// Used for tick location, should\\n\\t\\tgetPixelForTick: function(index) {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\tvar offset = me.options.offset;\\n\\t\\t\\tif (me.isHorizontal()) {\\n\\t\\t\\t\\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\\n\\t\\t\\t\\tvar tickWidth = innerWidth / Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\\n\\t\\t\\t\\tvar pixel = (tickWidth * index) + me.paddingLeft;\\n\\n\\t\\t\\t\\tif (offset) {\\n\\t\\t\\t\\t\\tpixel += tickWidth / 2;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tvar finalVal = me.left + Math.round(pixel);\\n\\t\\t\\t\\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\\n\\t\\t\\t\\treturn finalVal;\\n\\t\\t\\t}\\n\\t\\t\\tvar innerHeight = me.height - (me.paddingTop + me.paddingBottom);\\n\\t\\t\\treturn me.top + (index * (innerHeight / (me._ticks.length - 1)));\\n\\t\\t},\\n\\n\\t\\t// Utility for getting the pixel location of a percentage of scale\\n\\t\\tgetPixelForDecimal: function(decimal) {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\tif (me.isHorizontal()) {\\n\\t\\t\\t\\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\\n\\t\\t\\t\\tvar valueOffset = (innerWidth * decimal) + me.paddingLeft;\\n\\n\\t\\t\\t\\tvar finalVal = me.left + Math.round(valueOffset);\\n\\t\\t\\t\\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\\n\\t\\t\\t\\treturn finalVal;\\n\\t\\t\\t}\\n\\t\\t\\treturn me.top + (decimal * me.height);\\n\\t\\t},\\n\\n\\t\\tgetBasePixel: function() {\\n\\t\\t\\treturn this.getPixelForValue(this.getBaseValue());\\n\\t\\t},\\n\\n\\t\\tgetBaseValue: function() {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\tvar min = me.min;\\n\\t\\t\\tvar max = me.max;\\n\\n\\t\\t\\treturn me.beginAtZero ? 0 :\\n\\t\\t\\t\\tmin < 0 && max < 0 ? max :\\n\\t\\t\\t\\tmin > 0 && max > 0 ? min :\\n\\t\\t\\t\\t0;\\n\\t\\t},\\n\\n\\t\\t/**\\n\\t\\t * Returns a subset of ticks to be plotted to avoid overlapping labels.\\n\\t\\t * @private\\n\\t\\t */\\n\\t\\t_autoSkip: function(ticks) {\\n\\t\\t\\tvar skipRatio;\\n\\t\\t\\tvar me = this;\\n\\t\\t\\tvar isHorizontal = me.isHorizontal();\\n\\t\\t\\tvar optionTicks = me.options.ticks.minor;\\n\\t\\t\\tvar tickCount = ticks.length;\\n\\t\\t\\tvar labelRotationRadians = helpers.toRadians(me.labelRotation);\\n\\t\\t\\tvar cosRotation = Math.cos(labelRotationRadians);\\n\\t\\t\\tvar longestRotatedLabel = me.longestLabelWidth * cosRotation;\\n\\t\\t\\tvar result = [];\\n\\t\\t\\tvar i, tick, shouldSkip;\\n\\n\\t\\t\\t// figure out the maximum number of gridlines to show\\n\\t\\t\\tvar maxTicks;\\n\\t\\t\\tif (optionTicks.maxTicksLimit) {\\n\\t\\t\\t\\tmaxTicks = optionTicks.maxTicksLimit;\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (isHorizontal) {\\n\\t\\t\\t\\tskipRatio = false;\\n\\n\\t\\t\\t\\tif ((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount > (me.width - (me.paddingLeft + me.paddingRight))) {\\n\\t\\t\\t\\t\\tskipRatio = 1 + Math.floor(((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount) / (me.width - (me.paddingLeft + me.paddingRight)));\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// if they defined a max number of optionTicks,\\n\\t\\t\\t\\t// increase skipRatio until that number is met\\n\\t\\t\\t\\tif (maxTicks && tickCount > maxTicks) {\\n\\t\\t\\t\\t\\tskipRatio = Math.max(skipRatio, Math.floor(tickCount / maxTicks));\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\tfor (i = 0; i < tickCount; i++) {\\n\\t\\t\\t\\ttick = ticks[i];\\n\\n\\t\\t\\t\\t// Since we always show the last tick,we need may need to hide the last shown one before\\n\\t\\t\\t\\tshouldSkip = (skipRatio > 1 && i % skipRatio > 0) || (i % skipRatio === 0 && i + skipRatio >= tickCount);\\n\\t\\t\\t\\tif (shouldSkip && i !== tickCount - 1 || helpers.isNullOrUndef(tick.label)) {\\n\\t\\t\\t\\t\\t// leave tick in place but make sure it's not displayed (#4635)\\n\\t\\t\\t\\t\\tdelete tick.label;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tresult.push(tick);\\n\\t\\t\\t}\\n\\t\\t\\treturn result;\\n\\t\\t},\\n\\n\\t\\t// Actually draw the scale on the canvas\\n\\t\\t// @param {rectangle} chartArea : the area of the chart to draw full grid lines on\\n\\t\\tdraw: function(chartArea) {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\tvar options = me.options;\\n\\t\\t\\tif (!options.display) {\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar context = me.ctx;\\n\\t\\t\\tvar globalDefaults = defaults.global;\\n\\t\\t\\tvar optionTicks = options.ticks.minor;\\n\\t\\t\\tvar optionMajorTicks = options.ticks.major || optionTicks;\\n\\t\\t\\tvar gridLines = options.gridLines;\\n\\t\\t\\tvar scaleLabel = options.scaleLabel;\\n\\n\\t\\t\\tvar isRotated = me.labelRotation !== 0;\\n\\t\\t\\tvar isHorizontal = me.isHorizontal();\\n\\n\\t\\t\\tvar ticks = optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\\n\\t\\t\\tvar tickFontColor = helpers.valueOrDefault(optionTicks.fontColor, globalDefaults.defaultFontColor);\\n\\t\\t\\tvar tickFont = parseFontOptions(optionTicks);\\n\\t\\t\\tvar majorTickFontColor = helpers.valueOrDefault(optionMajorTicks.fontColor, globalDefaults.defaultFontColor);\\n\\t\\t\\tvar majorTickFont = parseFontOptions(optionMajorTicks);\\n\\n\\t\\t\\tvar tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\\n\\n\\t\\t\\tvar scaleLabelFontColor = helpers.valueOrDefault(scaleLabel.fontColor, globalDefaults.defaultFontColor);\\n\\t\\t\\tvar scaleLabelFont = parseFontOptions(scaleLabel);\\n\\t\\t\\tvar scaleLabelPadding = helpers.options.toPadding(scaleLabel.padding);\\n\\t\\t\\tvar labelRotationRadians = helpers.toRadians(me.labelRotation);\\n\\n\\t\\t\\tvar itemsToDraw = [];\\n\\n\\t\\t\\tvar xTickStart = options.position === 'right' ? me.left : me.right - tl;\\n\\t\\t\\tvar xTickEnd = options.position === 'right' ? me.left + tl : me.right;\\n\\t\\t\\tvar yTickStart = options.position === 'bottom' ? me.top : me.bottom - tl;\\n\\t\\t\\tvar yTickEnd = options.position === 'bottom' ? me.top + tl : me.bottom;\\n\\n\\t\\t\\thelpers.each(ticks, function(tick, index) {\\n\\t\\t\\t\\t// autoskipper skipped this tick (#4635)\\n\\t\\t\\t\\tif (tick.label === undefined) {\\n\\t\\t\\t\\t\\treturn;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tvar label = tick.label;\\n\\t\\t\\t\\tvar lineWidth, lineColor, borderDash, borderDashOffset;\\n\\t\\t\\t\\tif (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\\n\\t\\t\\t\\t\\t// Draw the first index specially\\n\\t\\t\\t\\t\\tlineWidth = gridLines.zeroLineWidth;\\n\\t\\t\\t\\t\\tlineColor = gridLines.zeroLineColor;\\n\\t\\t\\t\\t\\tborderDash = gridLines.zeroLineBorderDash;\\n\\t\\t\\t\\t\\tborderDashOffset = gridLines.zeroLineBorderDashOffset;\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tlineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, index);\\n\\t\\t\\t\\t\\tlineColor = helpers.valueAtIndexOrDefault(gridLines.color, index);\\n\\t\\t\\t\\t\\tborderDash = helpers.valueOrDefault(gridLines.borderDash, globalDefaults.borderDash);\\n\\t\\t\\t\\t\\tborderDashOffset = helpers.valueOrDefault(gridLines.borderDashOffset, globalDefaults.borderDashOffset);\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// Common properties\\n\\t\\t\\t\\tvar tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY;\\n\\t\\t\\t\\tvar textAlign = 'middle';\\n\\t\\t\\t\\tvar textBaseline = 'middle';\\n\\t\\t\\t\\tvar tickPadding = optionTicks.padding;\\n\\n\\t\\t\\t\\tif (isHorizontal) {\\n\\t\\t\\t\\t\\tvar labelYOffset = tl + tickPadding;\\n\\n\\t\\t\\t\\t\\tif (options.position === 'bottom') {\\n\\t\\t\\t\\t\\t\\t// bottom\\n\\t\\t\\t\\t\\t\\ttextBaseline = !isRotated ? 'top' : 'middle';\\n\\t\\t\\t\\t\\t\\ttextAlign = !isRotated ? 'center' : 'right';\\n\\t\\t\\t\\t\\t\\tlabelY = me.top + labelYOffset;\\n\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t// top\\n\\t\\t\\t\\t\\t\\ttextBaseline = !isRotated ? 'bottom' : 'middle';\\n\\t\\t\\t\\t\\t\\ttextAlign = !isRotated ? 'center' : 'left';\\n\\t\\t\\t\\t\\t\\tlabelY = me.bottom - labelYOffset;\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tvar xLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\\n\\t\\t\\t\\t\\tif (xLineValue < me.left) {\\n\\t\\t\\t\\t\\t\\tlineColor = 'rgba(0,0,0,0)';\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\txLineValue += helpers.aliasPixel(lineWidth);\\n\\n\\t\\t\\t\\t\\tlabelX = me.getPixelForTick(index) + optionTicks.labelOffset; // x values for optionTicks (need to consider offsetLabel option)\\n\\n\\t\\t\\t\\t\\ttx1 = tx2 = x1 = x2 = xLineValue;\\n\\t\\t\\t\\t\\tty1 = yTickStart;\\n\\t\\t\\t\\t\\tty2 = yTickEnd;\\n\\t\\t\\t\\t\\ty1 = chartArea.top;\\n\\t\\t\\t\\t\\ty2 = chartArea.bottom;\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tvar isLeft = options.position === 'left';\\n\\t\\t\\t\\t\\tvar labelXOffset;\\n\\n\\t\\t\\t\\t\\tif (optionTicks.mirror) {\\n\\t\\t\\t\\t\\t\\ttextAlign = isLeft ? 'left' : 'right';\\n\\t\\t\\t\\t\\t\\tlabelXOffset = tickPadding;\\n\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\ttextAlign = isLeft ? 'right' : 'left';\\n\\t\\t\\t\\t\\t\\tlabelXOffset = tl + tickPadding;\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tlabelX = isLeft ? me.right - labelXOffset : me.left + labelXOffset;\\n\\n\\t\\t\\t\\t\\tvar yLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\\n\\t\\t\\t\\t\\tif (yLineValue < me.top) {\\n\\t\\t\\t\\t\\t\\tlineColor = 'rgba(0,0,0,0)';\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\tyLineValue += helpers.aliasPixel(lineWidth);\\n\\n\\t\\t\\t\\t\\tlabelY = me.getPixelForTick(index) + optionTicks.labelOffset;\\n\\n\\t\\t\\t\\t\\ttx1 = xTickStart;\\n\\t\\t\\t\\t\\ttx2 = xTickEnd;\\n\\t\\t\\t\\t\\tx1 = chartArea.left;\\n\\t\\t\\t\\t\\tx2 = chartArea.right;\\n\\t\\t\\t\\t\\tty1 = ty2 = y1 = y2 = yLineValue;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\titemsToDraw.push({\\n\\t\\t\\t\\t\\ttx1: tx1,\\n\\t\\t\\t\\t\\tty1: ty1,\\n\\t\\t\\t\\t\\ttx2: tx2,\\n\\t\\t\\t\\t\\tty2: ty2,\\n\\t\\t\\t\\t\\tx1: x1,\\n\\t\\t\\t\\t\\ty1: y1,\\n\\t\\t\\t\\t\\tx2: x2,\\n\\t\\t\\t\\t\\ty2: y2,\\n\\t\\t\\t\\t\\tlabelX: labelX,\\n\\t\\t\\t\\t\\tlabelY: labelY,\\n\\t\\t\\t\\t\\tglWidth: lineWidth,\\n\\t\\t\\t\\t\\tglColor: lineColor,\\n\\t\\t\\t\\t\\tglBorderDash: borderDash,\\n\\t\\t\\t\\t\\tglBorderDashOffset: borderDashOffset,\\n\\t\\t\\t\\t\\trotation: -1 * labelRotationRadians,\\n\\t\\t\\t\\t\\tlabel: label,\\n\\t\\t\\t\\t\\tmajor: tick.major,\\n\\t\\t\\t\\t\\ttextBaseline: textBaseline,\\n\\t\\t\\t\\t\\ttextAlign: textAlign\\n\\t\\t\\t\\t});\\n\\t\\t\\t});\\n\\n\\t\\t\\t// Draw all of the tick labels, tick marks, and grid lines at the correct places\\n\\t\\t\\thelpers.each(itemsToDraw, function(itemToDraw) {\\n\\t\\t\\t\\tif (gridLines.display) {\\n\\t\\t\\t\\t\\tcontext.save();\\n\\t\\t\\t\\t\\tcontext.lineWidth = itemToDraw.glWidth;\\n\\t\\t\\t\\t\\tcontext.strokeStyle = itemToDraw.glColor;\\n\\t\\t\\t\\t\\tif (context.setLineDash) {\\n\\t\\t\\t\\t\\t\\tcontext.setLineDash(itemToDraw.glBorderDash);\\n\\t\\t\\t\\t\\t\\tcontext.lineDashOffset = itemToDraw.glBorderDashOffset;\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tcontext.beginPath();\\n\\n\\t\\t\\t\\t\\tif (gridLines.drawTicks) {\\n\\t\\t\\t\\t\\t\\tcontext.moveTo(itemToDraw.tx1, itemToDraw.ty1);\\n\\t\\t\\t\\t\\t\\tcontext.lineTo(itemToDraw.tx2, itemToDraw.ty2);\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tif (gridLines.drawOnChartArea) {\\n\\t\\t\\t\\t\\t\\tcontext.moveTo(itemToDraw.x1, itemToDraw.y1);\\n\\t\\t\\t\\t\\t\\tcontext.lineTo(itemToDraw.x2, itemToDraw.y2);\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tcontext.stroke();\\n\\t\\t\\t\\t\\tcontext.restore();\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif (optionTicks.display) {\\n\\t\\t\\t\\t\\t// Make sure we draw text in the correct color and font\\n\\t\\t\\t\\t\\tcontext.save();\\n\\t\\t\\t\\t\\tcontext.translate(itemToDraw.labelX, itemToDraw.labelY);\\n\\t\\t\\t\\t\\tcontext.rotate(itemToDraw.rotation);\\n\\t\\t\\t\\t\\tcontext.font = itemToDraw.major ? majorTickFont.font : tickFont.font;\\n\\t\\t\\t\\t\\tcontext.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\\n\\t\\t\\t\\t\\tcontext.textBaseline = itemToDraw.textBaseline;\\n\\t\\t\\t\\t\\tcontext.textAlign = itemToDraw.textAlign;\\n\\n\\t\\t\\t\\t\\tvar label = itemToDraw.label;\\n\\t\\t\\t\\t\\tif (helpers.isArray(label)) {\\n\\t\\t\\t\\t\\t\\tfor (var i = 0, y = 0; i < label.length; ++i) {\\n\\t\\t\\t\\t\\t\\t\\t// We just make sure the multiline element is a string here..\\n\\t\\t\\t\\t\\t\\t\\tcontext.fillText('' + label[i], 0, y);\\n\\t\\t\\t\\t\\t\\t\\t// apply same lineSpacing as calculated @ L#320\\n\\t\\t\\t\\t\\t\\t\\ty += (tickFont.size * 1.5);\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\tcontext.fillText(label, 0, 0);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\tcontext.restore();\\n\\t\\t\\t\\t}\\n\\t\\t\\t});\\n\\n\\t\\t\\tif (scaleLabel.display) {\\n\\t\\t\\t\\t// Draw the scale label\\n\\t\\t\\t\\tvar scaleLabelX;\\n\\t\\t\\t\\tvar scaleLabelY;\\n\\t\\t\\t\\tvar rotation = 0;\\n\\t\\t\\t\\tvar halfLineHeight = parseLineHeight(scaleLabel) / 2;\\n\\n\\t\\t\\t\\tif (isHorizontal) {\\n\\t\\t\\t\\t\\tscaleLabelX = me.left + ((me.right - me.left) / 2); // midpoint of the width\\n\\t\\t\\t\\t\\tscaleLabelY = options.position === 'bottom'\\n\\t\\t\\t\\t\\t\\t? me.bottom - halfLineHeight - scaleLabelPadding.bottom\\n\\t\\t\\t\\t\\t\\t: me.top + halfLineHeight + scaleLabelPadding.top;\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tvar isLeft = options.position === 'left';\\n\\t\\t\\t\\t\\tscaleLabelX = isLeft\\n\\t\\t\\t\\t\\t\\t? me.left + halfLineHeight + scaleLabelPadding.top\\n\\t\\t\\t\\t\\t\\t: me.right - halfLineHeight - scaleLabelPadding.top;\\n\\t\\t\\t\\t\\tscaleLabelY = me.top + ((me.bottom - me.top) / 2);\\n\\t\\t\\t\\t\\trotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tcontext.save();\\n\\t\\t\\t\\tcontext.translate(scaleLabelX, scaleLabelY);\\n\\t\\t\\t\\tcontext.rotate(rotation);\\n\\t\\t\\t\\tcontext.textAlign = 'center';\\n\\t\\t\\t\\tcontext.textBaseline = 'middle';\\n\\t\\t\\t\\tcontext.fillStyle = scaleLabelFontColor; // render in correct colour\\n\\t\\t\\t\\tcontext.font = scaleLabelFont.font;\\n\\t\\t\\t\\tcontext.fillText(scaleLabel.labelString, 0, 0);\\n\\t\\t\\t\\tcontext.restore();\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (gridLines.drawBorder) {\\n\\t\\t\\t\\t// Draw the line at the edge of the axis\\n\\t\\t\\t\\tcontext.lineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, 0);\\n\\t\\t\\t\\tcontext.strokeStyle = helpers.valueAtIndexOrDefault(gridLines.color, 0);\\n\\t\\t\\t\\tvar x1 = me.left;\\n\\t\\t\\t\\tvar x2 = me.right;\\n\\t\\t\\t\\tvar y1 = me.top;\\n\\t\\t\\t\\tvar y2 = me.bottom;\\n\\n\\t\\t\\t\\tvar aliasPixel = helpers.aliasPixel(context.lineWidth);\\n\\t\\t\\t\\tif (isHorizontal) {\\n\\t\\t\\t\\t\\ty1 = y2 = options.position === 'top' ? me.bottom : me.top;\\n\\t\\t\\t\\t\\ty1 += aliasPixel;\\n\\t\\t\\t\\t\\ty2 += aliasPixel;\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tx1 = x2 = options.position === 'left' ? me.right : me.left;\\n\\t\\t\\t\\t\\tx1 += aliasPixel;\\n\\t\\t\\t\\t\\tx2 += aliasPixel;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tcontext.beginPath();\\n\\t\\t\\t\\tcontext.moveTo(x1, y1);\\n\\t\\t\\t\\tcontext.lineTo(x2, y2);\\n\\t\\t\\t\\tcontext.stroke();\\n\\t\\t\\t}\\n\\t\\t}\\n\\t});\\n};\\n\\n},{\\\"25\\\":25,\\\"26\\\":26,\\\"34\\\":34,\\\"45\\\":45}],33:[function(require,module,exports){\\n'use strict';\\n\\nvar defaults = require(25);\\nvar helpers = require(45);\\n\\nmodule.exports = function(Chart) {\\n\\n\\tChart.scaleService = {\\n\\t\\t// Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\\n\\t\\t// use the new chart options to grab the correct scale\\n\\t\\tconstructors: {},\\n\\t\\t// Use a registration function so that we can move to an ES6 map when we no longer need to support\\n\\t\\t// old browsers\\n\\n\\t\\t// Scale config defaults\\n\\t\\tdefaults: {},\\n\\t\\tregisterScaleType: function(type, scaleConstructor, scaleDefaults) {\\n\\t\\t\\tthis.constructors[type] = scaleConstructor;\\n\\t\\t\\tthis.defaults[type] = helpers.clone(scaleDefaults);\\n\\t\\t},\\n\\t\\tgetScaleConstructor: function(type) {\\n\\t\\t\\treturn this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\\n\\t\\t},\\n\\t\\tgetScaleDefaults: function(type) {\\n\\t\\t\\t// Return the scale defaults merged with the global settings so that we always use the latest ones\\n\\t\\t\\treturn this.defaults.hasOwnProperty(type) ? helpers.merge({}, [defaults.scale, this.defaults[type]]) : {};\\n\\t\\t},\\n\\t\\tupdateScaleDefaults: function(type, additions) {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\tif (me.defaults.hasOwnProperty(type)) {\\n\\t\\t\\t\\tme.defaults[type] = helpers.extend(me.defaults[type], additions);\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\taddScalesToLayout: function(chart) {\\n\\t\\t\\t// Adds each scale to the chart.boxes array to be sized accordingly\\n\\t\\t\\thelpers.each(chart.scales, function(scale) {\\n\\t\\t\\t\\t// Set ILayoutItem parameters for backwards compatibility\\n\\t\\t\\t\\tscale.fullWidth = scale.options.fullWidth;\\n\\t\\t\\t\\tscale.position = scale.options.position;\\n\\t\\t\\t\\tscale.weight = scale.options.weight;\\n\\t\\t\\t\\tChart.layoutService.addBox(chart, scale);\\n\\t\\t\\t});\\n\\t\\t}\\n\\t};\\n};\\n\\n},{\\\"25\\\":25,\\\"45\\\":45}],34:[function(require,module,exports){\\n'use strict';\\n\\nvar helpers = require(45);\\n\\n/**\\n * Namespace to hold static tick generation functions\\n * @namespace Chart.Ticks\\n */\\nmodule.exports = {\\n\\t/**\\n\\t * Namespace to hold generators for different types of ticks\\n\\t * @namespace Chart.Ticks.generators\\n\\t */\\n\\tgenerators: {\\n\\t\\t/**\\n\\t\\t * Interface for the options provided to the numeric tick generator\\n\\t\\t * @interface INumericTickGenerationOptions\\n\\t\\t */\\n\\t\\t/**\\n\\t\\t * The maximum number of ticks to display\\n\\t\\t * @name INumericTickGenerationOptions#maxTicks\\n\\t\\t * @type Number\\n\\t\\t */\\n\\t\\t/**\\n\\t\\t * The distance between each tick.\\n\\t\\t * @name INumericTickGenerationOptions#stepSize\\n\\t\\t * @type Number\\n\\t\\t * @optional\\n\\t\\t */\\n\\t\\t/**\\n\\t\\t * Forced minimum for the ticks. If not specified, the minimum of the data range is used to calculate the tick minimum\\n\\t\\t * @name INumericTickGenerationOptions#min\\n\\t\\t * @type Number\\n\\t\\t * @optional\\n\\t\\t */\\n\\t\\t/**\\n\\t\\t * The maximum value of the ticks. If not specified, the maximum of the data range is used to calculate the tick maximum\\n\\t\\t * @name INumericTickGenerationOptions#max\\n\\t\\t * @type Number\\n\\t\\t * @optional\\n\\t\\t */\\n\\n\\t\\t/**\\n\\t\\t * Generate a set of linear ticks\\n\\t\\t * @method Chart.Ticks.generators.linear\\n\\t\\t * @param generationOptions {INumericTickGenerationOptions} the options used to generate the ticks\\n\\t\\t * @param dataRange {IRange} the range of the data\\n\\t\\t * @returns {Array<Number>} array of tick values\\n\\t\\t */\\n\\t\\tlinear: function(generationOptions, dataRange) {\\n\\t\\t\\tvar ticks = [];\\n\\t\\t\\t// To get a \\\"nice\\\" value for the tick spacing, we will use the appropriately named\\n\\t\\t\\t// \\\"nice number\\\" algorithm. See http://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\\n\\t\\t\\t// for details.\\n\\n\\t\\t\\tvar spacing;\\n\\t\\t\\tif (generationOptions.stepSize && generationOptions.stepSize > 0) {\\n\\t\\t\\t\\tspacing = generationOptions.stepSize;\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tvar niceRange = helpers.niceNum(dataRange.max - dataRange.min, false);\\n\\t\\t\\t\\tspacing = helpers.niceNum(niceRange / (generationOptions.maxTicks - 1), true);\\n\\t\\t\\t}\\n\\t\\t\\tvar niceMin = Math.floor(dataRange.min / spacing) * spacing;\\n\\t\\t\\tvar niceMax = Math.ceil(dataRange.max / spacing) * spacing;\\n\\n\\t\\t\\t// If min, max and stepSize is set and they make an evenly spaced scale use it.\\n\\t\\t\\tif (generationOptions.min && generationOptions.max && generationOptions.stepSize) {\\n\\t\\t\\t\\t// If very close to our whole number, use it.\\n\\t\\t\\t\\tif (helpers.almostWhole((generationOptions.max - generationOptions.min) / generationOptions.stepSize, spacing / 1000)) {\\n\\t\\t\\t\\t\\tniceMin = generationOptions.min;\\n\\t\\t\\t\\t\\tniceMax = generationOptions.max;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar numSpaces = (niceMax - niceMin) / spacing;\\n\\t\\t\\t// If very close to our rounded value, use it.\\n\\t\\t\\tif (helpers.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\\n\\t\\t\\t\\tnumSpaces = Math.round(numSpaces);\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tnumSpaces = Math.ceil(numSpaces);\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Put the values into the ticks array\\n\\t\\t\\tticks.push(generationOptions.min !== undefined ? generationOptions.min : niceMin);\\n\\t\\t\\tfor (var j = 1; j < numSpaces; ++j) {\\n\\t\\t\\t\\tticks.push(niceMin + (j * spacing));\\n\\t\\t\\t}\\n\\t\\t\\tticks.push(generationOptions.max !== undefined ? generationOptions.max : niceMax);\\n\\n\\t\\t\\treturn ticks;\\n\\t\\t},\\n\\n\\t\\t/**\\n\\t\\t * Generate a set of logarithmic ticks\\n\\t\\t * @method Chart.Ticks.generators.logarithmic\\n\\t\\t * @param generationOptions {INumericTickGenerationOptions} the options used to generate the ticks\\n\\t\\t * @param dataRange {IRange} the range of the data\\n\\t\\t * @returns {Array<Number>} array of tick values\\n\\t\\t */\\n\\t\\tlogarithmic: function(generationOptions, dataRange) {\\n\\t\\t\\tvar ticks = [];\\n\\t\\t\\tvar valueOrDefault = helpers.valueOrDefault;\\n\\n\\t\\t\\t// Figure out what the max number of ticks we can support it is based on the size of\\n\\t\\t\\t// the axis area. For now, we say that the minimum tick spacing in pixels must be 50\\n\\t\\t\\t// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\\n\\t\\t\\t// the graph\\n\\t\\t\\tvar tickVal = valueOrDefault(generationOptions.min, Math.pow(10, Math.floor(helpers.log10(dataRange.min))));\\n\\n\\t\\t\\tvar endExp = Math.floor(helpers.log10(dataRange.max));\\n\\t\\t\\tvar endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\\n\\t\\t\\tvar exp, significand;\\n\\n\\t\\t\\tif (tickVal === 0) {\\n\\t\\t\\t\\texp = Math.floor(helpers.log10(dataRange.minNotZero));\\n\\t\\t\\t\\tsignificand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\\n\\n\\t\\t\\t\\tticks.push(tickVal);\\n\\t\\t\\t\\ttickVal = significand * Math.pow(10, exp);\\n\\t\\t\\t} else {\\n\\t\\t\\t\\texp = Math.floor(helpers.log10(tickVal));\\n\\t\\t\\t\\tsignificand = Math.floor(tickVal / Math.pow(10, exp));\\n\\t\\t\\t}\\n\\n\\t\\t\\tdo {\\n\\t\\t\\t\\tticks.push(tickVal);\\n\\n\\t\\t\\t\\t++significand;\\n\\t\\t\\t\\tif (significand === 10) {\\n\\t\\t\\t\\t\\tsignificand = 1;\\n\\t\\t\\t\\t\\t++exp;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\ttickVal = significand * Math.pow(10, exp);\\n\\t\\t\\t} while (exp < endExp || (exp === endExp && significand < endSignificand));\\n\\n\\t\\t\\tvar lastTick = valueOrDefault(generationOptions.max, tickVal);\\n\\t\\t\\tticks.push(lastTick);\\n\\n\\t\\t\\treturn ticks;\\n\\t\\t}\\n\\t},\\n\\n\\t/**\\n\\t * Namespace to hold formatters for different types of ticks\\n\\t * @namespace Chart.Ticks.formatters\\n\\t */\\n\\tformatters: {\\n\\t\\t/**\\n\\t\\t * Formatter for value labels\\n\\t\\t * @method Chart.Ticks.formatters.values\\n\\t\\t * @param value the value to display\\n\\t\\t * @return {String|Array} the label to display\\n\\t\\t */\\n\\t\\tvalues: function(value) {\\n\\t\\t\\treturn helpers.isArray(value) ? value : '' + value;\\n\\t\\t},\\n\\n\\t\\t/**\\n\\t\\t * Formatter for linear numeric ticks\\n\\t\\t * @method Chart.Ticks.formatters.linear\\n\\t\\t * @param tickValue {Number} the value to be formatted\\n\\t\\t * @param index {Number} the position of the tickValue parameter in the ticks array\\n\\t\\t * @param ticks {Array<Number>} the list of ticks being converted\\n\\t\\t * @return {String} string representation of the tickValue parameter\\n\\t\\t */\\n\\t\\tlinear: function(tickValue, index, ticks) {\\n\\t\\t\\t// If we have lots of ticks, don't use the ones\\n\\t\\t\\tvar delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0];\\n\\n\\t\\t\\t// If we have a number like 2.5 as the delta, figure out how many decimal places we need\\n\\t\\t\\tif (Math.abs(delta) > 1) {\\n\\t\\t\\t\\tif (tickValue !== Math.floor(tickValue)) {\\n\\t\\t\\t\\t\\t// not an integer\\n\\t\\t\\t\\t\\tdelta = tickValue - Math.floor(tickValue);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar logDelta = helpers.log10(Math.abs(delta));\\n\\t\\t\\tvar tickString = '';\\n\\n\\t\\t\\tif (tickValue !== 0) {\\n\\t\\t\\t\\tvar numDecimal = -1 * Math.floor(logDelta);\\n\\t\\t\\t\\tnumDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\\n\\t\\t\\t\\ttickString = tickValue.toFixed(numDecimal);\\n\\t\\t\\t} else {\\n\\t\\t\\t\\ttickString = '0'; // never show decimal places for 0\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn tickString;\\n\\t\\t},\\n\\n\\t\\tlogarithmic: function(tickValue, index, ticks) {\\n\\t\\t\\tvar remain = tickValue / (Math.pow(10, Math.floor(helpers.log10(tickValue))));\\n\\n\\t\\t\\tif (tickValue === 0) {\\n\\t\\t\\t\\treturn '0';\\n\\t\\t\\t} else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\\n\\t\\t\\t\\treturn tickValue.toExponential();\\n\\t\\t\\t}\\n\\t\\t\\treturn '';\\n\\t\\t}\\n\\t}\\n};\\n\\n},{\\\"45\\\":45}],35:[function(require,module,exports){\\n'use strict';\\n\\nvar defaults = require(25);\\nvar Element = require(26);\\nvar helpers = require(45);\\n\\ndefaults._set('global', {\\n\\ttooltips: {\\n\\t\\tenabled: true,\\n\\t\\tcustom: null,\\n\\t\\tmode: 'nearest',\\n\\t\\tposition: 'average',\\n\\t\\tintersect: true,\\n\\t\\tbackgroundColor: 'rgba(0,0,0,0.8)',\\n\\t\\ttitleFontStyle: 'bold',\\n\\t\\ttitleSpacing: 2,\\n\\t\\ttitleMarginBottom: 6,\\n\\t\\ttitleFontColor: '#fff',\\n\\t\\ttitleAlign: 'left',\\n\\t\\tbodySpacing: 2,\\n\\t\\tbodyFontColor: '#fff',\\n\\t\\tbodyAlign: 'left',\\n\\t\\tfooterFontStyle: 'bold',\\n\\t\\tfooterSpacing: 2,\\n\\t\\tfooterMarginTop: 6,\\n\\t\\tfooterFontColor: '#fff',\\n\\t\\tfooterAlign: 'left',\\n\\t\\tyPadding: 6,\\n\\t\\txPadding: 6,\\n\\t\\tcaretPadding: 2,\\n\\t\\tcaretSize: 5,\\n\\t\\tcornerRadius: 6,\\n\\t\\tmultiKeyBackground: '#fff',\\n\\t\\tdisplayColors: true,\\n\\t\\tborderColor: 'rgba(0,0,0,0)',\\n\\t\\tborderWidth: 0,\\n\\t\\tcallbacks: {\\n\\t\\t\\t// Args are: (tooltipItems, data)\\n\\t\\t\\tbeforeTitle: helpers.noop,\\n\\t\\t\\ttitle: function(tooltipItems, data) {\\n\\t\\t\\t\\t// Pick first xLabel for now\\n\\t\\t\\t\\tvar title = '';\\n\\t\\t\\t\\tvar labels = data.labels;\\n\\t\\t\\t\\tvar labelCount = labels ? labels.length : 0;\\n\\n\\t\\t\\t\\tif (tooltipItems.length > 0) {\\n\\t\\t\\t\\t\\tvar item = tooltipItems[0];\\n\\n\\t\\t\\t\\t\\tif (item.xLabel) {\\n\\t\\t\\t\\t\\t\\ttitle = item.xLabel;\\n\\t\\t\\t\\t\\t} else if (labelCount > 0 && item.index < labelCount) {\\n\\t\\t\\t\\t\\t\\ttitle = labels[item.index];\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\treturn title;\\n\\t\\t\\t},\\n\\t\\t\\tafterTitle: helpers.noop,\\n\\n\\t\\t\\t// Args are: (tooltipItems, data)\\n\\t\\t\\tbeforeBody: helpers.noop,\\n\\n\\t\\t\\t// Args are: (tooltipItem, data)\\n\\t\\t\\tbeforeLabel: helpers.noop,\\n\\t\\t\\tlabel: function(tooltipItem, data) {\\n\\t\\t\\t\\tvar label = data.datasets[tooltipItem.datasetIndex].label || '';\\n\\n\\t\\t\\t\\tif (label) {\\n\\t\\t\\t\\t\\tlabel += ': ';\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tlabel += tooltipItem.yLabel;\\n\\t\\t\\t\\treturn label;\\n\\t\\t\\t},\\n\\t\\t\\tlabelColor: function(tooltipItem, chart) {\\n\\t\\t\\t\\tvar meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\\n\\t\\t\\t\\tvar activeElement = meta.data[tooltipItem.index];\\n\\t\\t\\t\\tvar view = activeElement._view;\\n\\t\\t\\t\\treturn {\\n\\t\\t\\t\\t\\tborderColor: view.borderColor,\\n\\t\\t\\t\\t\\tbackgroundColor: view.backgroundColor\\n\\t\\t\\t\\t};\\n\\t\\t\\t},\\n\\t\\t\\tlabelTextColor: function() {\\n\\t\\t\\t\\treturn this._options.bodyFontColor;\\n\\t\\t\\t},\\n\\t\\t\\tafterLabel: helpers.noop,\\n\\n\\t\\t\\t// Args are: (tooltipItems, data)\\n\\t\\t\\tafterBody: helpers.noop,\\n\\n\\t\\t\\t// Args are: (tooltipItems, data)\\n\\t\\t\\tbeforeFooter: helpers.noop,\\n\\t\\t\\tfooter: helpers.noop,\\n\\t\\t\\tafterFooter: helpers.noop\\n\\t\\t}\\n\\t}\\n});\\n\\nmodule.exports = function(Chart) {\\n\\n\\t/**\\n \\t * Helper method to merge the opacity into a color\\n \\t */\\n\\tfunction mergeOpacity(colorString, opacity) {\\n\\t\\tvar color = helpers.color(colorString);\\n\\t\\treturn color.alpha(opacity * color.alpha()).rgbaString();\\n\\t}\\n\\n\\t// Helper to push or concat based on if the 2nd parameter is an array or not\\n\\tfunction pushOrConcat(base, toPush) {\\n\\t\\tif (toPush) {\\n\\t\\t\\tif (helpers.isArray(toPush)) {\\n\\t\\t\\t\\t// base = base.concat(toPush);\\n\\t\\t\\t\\tArray.prototype.push.apply(base, toPush);\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tbase.push(toPush);\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn base;\\n\\t}\\n\\n\\t// Private helper to create a tooltip item model\\n\\t// @param element : the chart element (point, arc, bar) to create the tooltip item for\\n\\t// @return : new tooltip item\\n\\tfunction createTooltipItem(element) {\\n\\t\\tvar xScale = element._xScale;\\n\\t\\tvar yScale = element._yScale || element._scale; // handle radar || polarArea charts\\n\\t\\tvar index = element._index;\\n\\t\\tvar datasetIndex = element._datasetIndex;\\n\\n\\t\\treturn {\\n\\t\\t\\txLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\\n\\t\\t\\tyLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\\n\\t\\t\\tindex: index,\\n\\t\\t\\tdatasetIndex: datasetIndex,\\n\\t\\t\\tx: element._model.x,\\n\\t\\t\\ty: element._model.y\\n\\t\\t};\\n\\t}\\n\\n\\t/**\\n\\t * Helper to get the reset model for the tooltip\\n\\t * @param tooltipOpts {Object} the tooltip options\\n\\t */\\n\\tfunction getBaseModel(tooltipOpts) {\\n\\t\\tvar globalDefaults = defaults.global;\\n\\t\\tvar valueOrDefault = helpers.valueOrDefault;\\n\\n\\t\\treturn {\\n\\t\\t\\t// Positioning\\n\\t\\t\\txPadding: tooltipOpts.xPadding,\\n\\t\\t\\tyPadding: tooltipOpts.yPadding,\\n\\t\\t\\txAlign: tooltipOpts.xAlign,\\n\\t\\t\\tyAlign: tooltipOpts.yAlign,\\n\\n\\t\\t\\t// Body\\n\\t\\t\\tbodyFontColor: tooltipOpts.bodyFontColor,\\n\\t\\t\\t_bodyFontFamily: valueOrDefault(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\\n\\t\\t\\t_bodyFontStyle: valueOrDefault(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\\n\\t\\t\\t_bodyAlign: tooltipOpts.bodyAlign,\\n\\t\\t\\tbodyFontSize: valueOrDefault(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\\n\\t\\t\\tbodySpacing: tooltipOpts.bodySpacing,\\n\\n\\t\\t\\t// Title\\n\\t\\t\\ttitleFontColor: tooltipOpts.titleFontColor,\\n\\t\\t\\t_titleFontFamily: valueOrDefault(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\\n\\t\\t\\t_titleFontStyle: valueOrDefault(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\\n\\t\\t\\ttitleFontSize: valueOrDefault(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\\n\\t\\t\\t_titleAlign: tooltipOpts.titleAlign,\\n\\t\\t\\ttitleSpacing: tooltipOpts.titleSpacing,\\n\\t\\t\\ttitleMarginBottom: tooltipOpts.titleMarginBottom,\\n\\n\\t\\t\\t// Footer\\n\\t\\t\\tfooterFontColor: tooltipOpts.footerFontColor,\\n\\t\\t\\t_footerFontFamily: valueOrDefault(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\\n\\t\\t\\t_footerFontStyle: valueOrDefault(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\\n\\t\\t\\tfooterFontSize: valueOrDefault(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\\n\\t\\t\\t_footerAlign: tooltipOpts.footerAlign,\\n\\t\\t\\tfooterSpacing: tooltipOpts.footerSpacing,\\n\\t\\t\\tfooterMarginTop: tooltipOpts.footerMarginTop,\\n\\n\\t\\t\\t// Appearance\\n\\t\\t\\tcaretSize: tooltipOpts.caretSize,\\n\\t\\t\\tcornerRadius: tooltipOpts.cornerRadius,\\n\\t\\t\\tbackgroundColor: tooltipOpts.backgroundColor,\\n\\t\\t\\topacity: 0,\\n\\t\\t\\tlegendColorBackground: tooltipOpts.multiKeyBackground,\\n\\t\\t\\tdisplayColors: tooltipOpts.displayColors,\\n\\t\\t\\tborderColor: tooltipOpts.borderColor,\\n\\t\\t\\tborderWidth: tooltipOpts.borderWidth\\n\\t\\t};\\n\\t}\\n\\n\\t/**\\n\\t * Get the size of the tooltip\\n\\t */\\n\\tfunction getTooltipSize(tooltip, model) {\\n\\t\\tvar ctx = tooltip._chart.ctx;\\n\\n\\t\\tvar height = model.yPadding * 2; // Tooltip Padding\\n\\t\\tvar width = 0;\\n\\n\\t\\t// Count of all lines in the body\\n\\t\\tvar body = model.body;\\n\\t\\tvar combinedBodyLength = body.reduce(function(count, bodyItem) {\\n\\t\\t\\treturn count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\\n\\t\\t}, 0);\\n\\t\\tcombinedBodyLength += model.beforeBody.length + model.afterBody.length;\\n\\n\\t\\tvar titleLineCount = model.title.length;\\n\\t\\tvar footerLineCount = model.footer.length;\\n\\t\\tvar titleFontSize = model.titleFontSize;\\n\\t\\tvar bodyFontSize = model.bodyFontSize;\\n\\t\\tvar footerFontSize = model.footerFontSize;\\n\\n\\t\\theight += titleLineCount * titleFontSize; // Title Lines\\n\\t\\theight += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\\n\\t\\theight += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\\n\\t\\theight += combinedBodyLength * bodyFontSize; // Body Lines\\n\\t\\theight += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\\n\\t\\theight += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\\n\\t\\theight += footerLineCount * (footerFontSize); // Footer Lines\\n\\t\\theight += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\\n\\n\\t\\t// Title width\\n\\t\\tvar widthPadding = 0;\\n\\t\\tvar maxLineWidth = function(line) {\\n\\t\\t\\twidth = Math.max(width, ctx.measureText(line).width + widthPadding);\\n\\t\\t};\\n\\n\\t\\tctx.font = helpers.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\\n\\t\\thelpers.each(model.title, maxLineWidth);\\n\\n\\t\\t// Body width\\n\\t\\tctx.font = helpers.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\\n\\t\\thelpers.each(model.beforeBody.concat(model.afterBody), maxLineWidth);\\n\\n\\t\\t// Body lines may include some extra width due to the color box\\n\\t\\twidthPadding = model.displayColors ? (bodyFontSize + 2) : 0;\\n\\t\\thelpers.each(body, function(bodyItem) {\\n\\t\\t\\thelpers.each(bodyItem.before, maxLineWidth);\\n\\t\\t\\thelpers.each(bodyItem.lines, maxLineWidth);\\n\\t\\t\\thelpers.each(bodyItem.after, maxLineWidth);\\n\\t\\t});\\n\\n\\t\\t// Reset back to 0\\n\\t\\twidthPadding = 0;\\n\\n\\t\\t// Footer width\\n\\t\\tctx.font = helpers.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\\n\\t\\thelpers.each(model.footer, maxLineWidth);\\n\\n\\t\\t// Add padding\\n\\t\\twidth += 2 * model.xPadding;\\n\\n\\t\\treturn {\\n\\t\\t\\twidth: width,\\n\\t\\t\\theight: height\\n\\t\\t};\\n\\t}\\n\\n\\t/**\\n\\t * Helper to get the alignment of a tooltip given the size\\n\\t */\\n\\tfunction determineAlignment(tooltip, size) {\\n\\t\\tvar model = tooltip._model;\\n\\t\\tvar chart = tooltip._chart;\\n\\t\\tvar chartArea = tooltip._chart.chartArea;\\n\\t\\tvar xAlign = 'center';\\n\\t\\tvar yAlign = 'center';\\n\\n\\t\\tif (model.y < size.height) {\\n\\t\\t\\tyAlign = 'top';\\n\\t\\t} else if (model.y > (chart.height - size.height)) {\\n\\t\\t\\tyAlign = 'bottom';\\n\\t\\t}\\n\\n\\t\\tvar lf, rf; // functions to determine left, right alignment\\n\\t\\tvar olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\\n\\t\\tvar yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\\n\\t\\tvar midX = (chartArea.left + chartArea.right) / 2;\\n\\t\\tvar midY = (chartArea.top + chartArea.bottom) / 2;\\n\\n\\t\\tif (yAlign === 'center') {\\n\\t\\t\\tlf = function(x) {\\n\\t\\t\\t\\treturn x <= midX;\\n\\t\\t\\t};\\n\\t\\t\\trf = function(x) {\\n\\t\\t\\t\\treturn x > midX;\\n\\t\\t\\t};\\n\\t\\t} else {\\n\\t\\t\\tlf = function(x) {\\n\\t\\t\\t\\treturn x <= (size.width / 2);\\n\\t\\t\\t};\\n\\t\\t\\trf = function(x) {\\n\\t\\t\\t\\treturn x >= (chart.width - (size.width / 2));\\n\\t\\t\\t};\\n\\t\\t}\\n\\n\\t\\tolf = function(x) {\\n\\t\\t\\treturn x + size.width > chart.width;\\n\\t\\t};\\n\\t\\torf = function(x) {\\n\\t\\t\\treturn x - size.width < 0;\\n\\t\\t};\\n\\t\\tyf = function(y) {\\n\\t\\t\\treturn y <= midY ? 'top' : 'bottom';\\n\\t\\t};\\n\\n\\t\\tif (lf(model.x)) {\\n\\t\\t\\txAlign = 'left';\\n\\n\\t\\t\\t// Is tooltip too wide and goes over the right side of the chart.?\\n\\t\\t\\tif (olf(model.x)) {\\n\\t\\t\\t\\txAlign = 'center';\\n\\t\\t\\t\\tyAlign = yf(model.y);\\n\\t\\t\\t}\\n\\t\\t} else if (rf(model.x)) {\\n\\t\\t\\txAlign = 'right';\\n\\n\\t\\t\\t// Is tooltip too wide and goes outside left edge of canvas?\\n\\t\\t\\tif (orf(model.x)) {\\n\\t\\t\\t\\txAlign = 'center';\\n\\t\\t\\t\\tyAlign = yf(model.y);\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tvar opts = tooltip._options;\\n\\t\\treturn {\\n\\t\\t\\txAlign: opts.xAlign ? opts.xAlign : xAlign,\\n\\t\\t\\tyAlign: opts.yAlign ? opts.yAlign : yAlign\\n\\t\\t};\\n\\t}\\n\\n\\t/**\\n\\t * @Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\\n\\t */\\n\\tfunction getBackgroundPoint(vm, size, alignment) {\\n\\t\\t// Background Position\\n\\t\\tvar x = vm.x;\\n\\t\\tvar y = vm.y;\\n\\n\\t\\tvar caretSize = vm.caretSize;\\n\\t\\tvar caretPadding = vm.caretPadding;\\n\\t\\tvar cornerRadius = vm.cornerRadius;\\n\\t\\tvar xAlign = alignment.xAlign;\\n\\t\\tvar yAlign = alignment.yAlign;\\n\\t\\tvar paddingAndSize = caretSize + caretPadding;\\n\\t\\tvar radiusAndPadding = cornerRadius + caretPadding;\\n\\n\\t\\tif (xAlign === 'right') {\\n\\t\\t\\tx -= size.width;\\n\\t\\t} else if (xAlign === 'center') {\\n\\t\\t\\tx -= (size.width / 2);\\n\\t\\t}\\n\\n\\t\\tif (yAlign === 'top') {\\n\\t\\t\\ty += paddingAndSize;\\n\\t\\t} else if (yAlign === 'bottom') {\\n\\t\\t\\ty -= size.height + paddingAndSize;\\n\\t\\t} else {\\n\\t\\t\\ty -= (size.height / 2);\\n\\t\\t}\\n\\n\\t\\tif (yAlign === 'center') {\\n\\t\\t\\tif (xAlign === 'left') {\\n\\t\\t\\t\\tx += paddingAndSize;\\n\\t\\t\\t} else if (xAlign === 'right') {\\n\\t\\t\\t\\tx -= paddingAndSize;\\n\\t\\t\\t}\\n\\t\\t} else if (xAlign === 'left') {\\n\\t\\t\\tx -= radiusAndPadding;\\n\\t\\t} else if (xAlign === 'right') {\\n\\t\\t\\tx += radiusAndPadding;\\n\\t\\t}\\n\\n\\t\\treturn {\\n\\t\\t\\tx: x,\\n\\t\\t\\ty: y\\n\\t\\t};\\n\\t}\\n\\n\\tChart.Tooltip = Element.extend({\\n\\t\\tinitialize: function() {\\n\\t\\t\\tthis._model = getBaseModel(this._options);\\n\\t\\t},\\n\\n\\t\\t// Get the title\\n\\t\\t// Args are: (tooltipItem, data)\\n\\t\\tgetTitle: function() {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\tvar opts = me._options;\\n\\t\\t\\tvar callbacks = opts.callbacks;\\n\\n\\t\\t\\tvar beforeTitle = callbacks.beforeTitle.apply(me, arguments);\\n\\t\\t\\tvar title = callbacks.title.apply(me, arguments);\\n\\t\\t\\tvar afterTitle = callbacks.afterTitle.apply(me, arguments);\\n\\n\\t\\t\\tvar lines = [];\\n\\t\\t\\tlines = pushOrConcat(lines, beforeTitle);\\n\\t\\t\\tlines = pushOrConcat(lines, title);\\n\\t\\t\\tlines = pushOrConcat(lines, afterTitle);\\n\\n\\t\\t\\treturn lines;\\n\\t\\t},\\n\\n\\t\\t// Args are: (tooltipItem, data)\\n\\t\\tgetBeforeBody: function() {\\n\\t\\t\\tvar lines = this._options.callbacks.beforeBody.apply(this, arguments);\\n\\t\\t\\treturn helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];\\n\\t\\t},\\n\\n\\t\\t// Args are: (tooltipItem, data)\\n\\t\\tgetBody: function(tooltipItems, data) {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\tvar callbacks = me._options.callbacks;\\n\\t\\t\\tvar bodyItems = [];\\n\\n\\t\\t\\thelpers.each(tooltipItems, function(tooltipItem) {\\n\\t\\t\\t\\tvar bodyItem = {\\n\\t\\t\\t\\t\\tbefore: [],\\n\\t\\t\\t\\t\\tlines: [],\\n\\t\\t\\t\\t\\tafter: []\\n\\t\\t\\t\\t};\\n\\t\\t\\t\\tpushOrConcat(bodyItem.before, callbacks.beforeLabel.call(me, tooltipItem, data));\\n\\t\\t\\t\\tpushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\\n\\t\\t\\t\\tpushOrConcat(bodyItem.after, callbacks.afterLabel.call(me, tooltipItem, data));\\n\\n\\t\\t\\t\\tbodyItems.push(bodyItem);\\n\\t\\t\\t});\\n\\n\\t\\t\\treturn bodyItems;\\n\\t\\t},\\n\\n\\t\\t// Args are: (tooltipItem, data)\\n\\t\\tgetAfterBody: function() {\\n\\t\\t\\tvar lines = this._options.callbacks.afterBody.apply(this, arguments);\\n\\t\\t\\treturn helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];\\n\\t\\t},\\n\\n\\t\\t// Get the footer and beforeFooter and afterFooter lines\\n\\t\\t// Args are: (tooltipItem, data)\\n\\t\\tgetFooter: function() {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\tvar callbacks = me._options.callbacks;\\n\\n\\t\\t\\tvar beforeFooter = callbacks.beforeFooter.apply(me, arguments);\\n\\t\\t\\tvar footer = callbacks.footer.apply(me, arguments);\\n\\t\\t\\tvar afterFooter = callbacks.afterFooter.apply(me, arguments);\\n\\n\\t\\t\\tvar lines = [];\\n\\t\\t\\tlines = pushOrConcat(lines, beforeFooter);\\n\\t\\t\\tlines = pushOrConcat(lines, footer);\\n\\t\\t\\tlines = pushOrConcat(lines, afterFooter);\\n\\n\\t\\t\\treturn lines;\\n\\t\\t},\\n\\n\\t\\tupdate: function(changed) {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\tvar opts = me._options;\\n\\n\\t\\t\\t// Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\\n\\t\\t\\t// that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\\n\\t\\t\\t// which breaks any animations.\\n\\t\\t\\tvar existingModel = me._model;\\n\\t\\t\\tvar model = me._model = getBaseModel(opts);\\n\\t\\t\\tvar active = me._active;\\n\\n\\t\\t\\tvar data = me._data;\\n\\n\\t\\t\\t// In the case where active.length === 0 we need to keep these at existing values for good animations\\n\\t\\t\\tvar alignment = {\\n\\t\\t\\t\\txAlign: existingModel.xAlign,\\n\\t\\t\\t\\tyAlign: existingModel.yAlign\\n\\t\\t\\t};\\n\\t\\t\\tvar backgroundPoint = {\\n\\t\\t\\t\\tx: existingModel.x,\\n\\t\\t\\t\\ty: existingModel.y\\n\\t\\t\\t};\\n\\t\\t\\tvar tooltipSize = {\\n\\t\\t\\t\\twidth: existingModel.width,\\n\\t\\t\\t\\theight: existingModel.height\\n\\t\\t\\t};\\n\\t\\t\\tvar tooltipPosition = {\\n\\t\\t\\t\\tx: existingModel.caretX,\\n\\t\\t\\t\\ty: existingModel.caretY\\n\\t\\t\\t};\\n\\n\\t\\t\\tvar i, len;\\n\\n\\t\\t\\tif (active.length) {\\n\\t\\t\\t\\tmodel.opacity = 1;\\n\\n\\t\\t\\t\\tvar labelColors = [];\\n\\t\\t\\t\\tvar labelTextColors = [];\\n\\t\\t\\t\\ttooltipPosition = Chart.Tooltip.positioners[opts.position](active, me._eventPosition);\\n\\n\\t\\t\\t\\tvar tooltipItems = [];\\n\\t\\t\\t\\tfor (i = 0, len = active.length; i < len; ++i) {\\n\\t\\t\\t\\t\\ttooltipItems.push(createTooltipItem(active[i]));\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// If the user provided a filter function, use it to modify the tooltip items\\n\\t\\t\\t\\tif (opts.filter) {\\n\\t\\t\\t\\t\\ttooltipItems = tooltipItems.filter(function(a) {\\n\\t\\t\\t\\t\\t\\treturn opts.filter(a, data);\\n\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// If the user provided a sorting function, use it to modify the tooltip items\\n\\t\\t\\t\\tif (opts.itemSort) {\\n\\t\\t\\t\\t\\ttooltipItems = tooltipItems.sort(function(a, b) {\\n\\t\\t\\t\\t\\t\\treturn opts.itemSort(a, b, data);\\n\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// Determine colors for boxes\\n\\t\\t\\t\\thelpers.each(tooltipItems, function(tooltipItem) {\\n\\t\\t\\t\\t\\tlabelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\\n\\t\\t\\t\\t\\tlabelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\\n\\t\\t\\t\\t});\\n\\n\\n\\t\\t\\t\\t// Build the Text Lines\\n\\t\\t\\t\\tmodel.title = me.getTitle(tooltipItems, data);\\n\\t\\t\\t\\tmodel.beforeBody = me.getBeforeBody(tooltipItems, data);\\n\\t\\t\\t\\tmodel.body = me.getBody(tooltipItems, data);\\n\\t\\t\\t\\tmodel.afterBody = me.getAfterBody(tooltipItems, data);\\n\\t\\t\\t\\tmodel.footer = me.getFooter(tooltipItems, data);\\n\\n\\t\\t\\t\\t// Initial positioning and colors\\n\\t\\t\\t\\tmodel.x = Math.round(tooltipPosition.x);\\n\\t\\t\\t\\tmodel.y = Math.round(tooltipPosition.y);\\n\\t\\t\\t\\tmodel.caretPadding = opts.caretPadding;\\n\\t\\t\\t\\tmodel.labelColors = labelColors;\\n\\t\\t\\t\\tmodel.labelTextColors = labelTextColors;\\n\\n\\t\\t\\t\\t// data points\\n\\t\\t\\t\\tmodel.dataPoints = tooltipItems;\\n\\n\\t\\t\\t\\t// We need to determine alignment of the tooltip\\n\\t\\t\\t\\ttooltipSize = getTooltipSize(this, model);\\n\\t\\t\\t\\talignment = determineAlignment(this, tooltipSize);\\n\\t\\t\\t\\t// Final Size and Position\\n\\t\\t\\t\\tbackgroundPoint = getBackgroundPoint(model, tooltipSize, alignment);\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tmodel.opacity = 0;\\n\\t\\t\\t}\\n\\n\\t\\t\\tmodel.xAlign = alignment.xAlign;\\n\\t\\t\\tmodel.yAlign = alignment.yAlign;\\n\\t\\t\\tmodel.x = backgroundPoint.x;\\n\\t\\t\\tmodel.y = backgroundPoint.y;\\n\\t\\t\\tmodel.width = tooltipSize.width;\\n\\t\\t\\tmodel.height = tooltipSize.height;\\n\\n\\t\\t\\t// Point where the caret on the tooltip points to\\n\\t\\t\\tmodel.caretX = tooltipPosition.x;\\n\\t\\t\\tmodel.caretY = tooltipPosition.y;\\n\\n\\t\\t\\tme._model = model;\\n\\n\\t\\t\\tif (changed && opts.custom) {\\n\\t\\t\\t\\topts.custom.call(me, model);\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn me;\\n\\t\\t},\\n\\t\\tdrawCaret: function(tooltipPoint, size) {\\n\\t\\t\\tvar ctx = this._chart.ctx;\\n\\t\\t\\tvar vm = this._view;\\n\\t\\t\\tvar caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\\n\\n\\t\\t\\tctx.lineTo(caretPosition.x1, caretPosition.y1);\\n\\t\\t\\tctx.lineTo(caretPosition.x2, caretPosition.y2);\\n\\t\\t\\tctx.lineTo(caretPosition.x3, caretPosition.y3);\\n\\t\\t},\\n\\t\\tgetCaretPosition: function(tooltipPoint, size, vm) {\\n\\t\\t\\tvar x1, x2, x3, y1, y2, y3;\\n\\t\\t\\tvar caretSize = vm.caretSize;\\n\\t\\t\\tvar cornerRadius = vm.cornerRadius;\\n\\t\\t\\tvar xAlign = vm.xAlign;\\n\\t\\t\\tvar yAlign = vm.yAlign;\\n\\t\\t\\tvar ptX = tooltipPoint.x;\\n\\t\\t\\tvar ptY = tooltipPoint.y;\\n\\t\\t\\tvar width = size.width;\\n\\t\\t\\tvar height = size.height;\\n\\n\\t\\t\\tif (yAlign === 'center') {\\n\\t\\t\\t\\ty2 = ptY + (height / 2);\\n\\n\\t\\t\\t\\tif (xAlign === 'left') {\\n\\t\\t\\t\\t\\tx1 = ptX;\\n\\t\\t\\t\\t\\tx2 = x1 - caretSize;\\n\\t\\t\\t\\t\\tx3 = x1;\\n\\n\\t\\t\\t\\t\\ty1 = y2 + caretSize;\\n\\t\\t\\t\\t\\ty3 = y2 - caretSize;\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tx1 = ptX + width;\\n\\t\\t\\t\\t\\tx2 = x1 + caretSize;\\n\\t\\t\\t\\t\\tx3 = x1;\\n\\n\\t\\t\\t\\t\\ty1 = y2 - caretSize;\\n\\t\\t\\t\\t\\ty3 = y2 + caretSize;\\n\\t\\t\\t\\t}\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tif (xAlign === 'left') {\\n\\t\\t\\t\\t\\tx2 = ptX + cornerRadius + (caretSize);\\n\\t\\t\\t\\t\\tx1 = x2 - caretSize;\\n\\t\\t\\t\\t\\tx3 = x2 + caretSize;\\n\\t\\t\\t\\t} else if (xAlign === 'right') {\\n\\t\\t\\t\\t\\tx2 = ptX + width - cornerRadius - caretSize;\\n\\t\\t\\t\\t\\tx1 = x2 - caretSize;\\n\\t\\t\\t\\t\\tx3 = x2 + caretSize;\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tx2 = ptX + (width / 2);\\n\\t\\t\\t\\t\\tx1 = x2 - caretSize;\\n\\t\\t\\t\\t\\tx3 = x2 + caretSize;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tif (yAlign === 'top') {\\n\\t\\t\\t\\t\\ty1 = ptY;\\n\\t\\t\\t\\t\\ty2 = y1 - caretSize;\\n\\t\\t\\t\\t\\ty3 = y1;\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\ty1 = ptY + height;\\n\\t\\t\\t\\t\\ty2 = y1 + caretSize;\\n\\t\\t\\t\\t\\ty3 = y1;\\n\\t\\t\\t\\t\\t// invert drawing order\\n\\t\\t\\t\\t\\tvar tmp = x3;\\n\\t\\t\\t\\t\\tx3 = x1;\\n\\t\\t\\t\\t\\tx1 = tmp;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\treturn {x1: x1, x2: x2, x3: x3, y1: y1, y2: y2, y3: y3};\\n\\t\\t},\\n\\t\\tdrawTitle: function(pt, vm, ctx, opacity) {\\n\\t\\t\\tvar title = vm.title;\\n\\n\\t\\t\\tif (title.length) {\\n\\t\\t\\t\\tctx.textAlign = vm._titleAlign;\\n\\t\\t\\t\\tctx.textBaseline = 'top';\\n\\n\\t\\t\\t\\tvar titleFontSize = vm.titleFontSize;\\n\\t\\t\\t\\tvar titleSpacing = vm.titleSpacing;\\n\\n\\t\\t\\t\\tctx.fillStyle = mergeOpacity(vm.titleFontColor, opacity);\\n\\t\\t\\t\\tctx.font = helpers.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\\n\\n\\t\\t\\t\\tvar i, len;\\n\\t\\t\\t\\tfor (i = 0, len = title.length; i < len; ++i) {\\n\\t\\t\\t\\t\\tctx.fillText(title[i], pt.x, pt.y);\\n\\t\\t\\t\\t\\tpt.y += titleFontSize + titleSpacing; // Line Height and spacing\\n\\n\\t\\t\\t\\t\\tif (i + 1 === title.length) {\\n\\t\\t\\t\\t\\t\\tpt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\tdrawBody: function(pt, vm, ctx, opacity) {\\n\\t\\t\\tvar bodyFontSize = vm.bodyFontSize;\\n\\t\\t\\tvar bodySpacing = vm.bodySpacing;\\n\\t\\t\\tvar body = vm.body;\\n\\n\\t\\t\\tctx.textAlign = vm._bodyAlign;\\n\\t\\t\\tctx.textBaseline = 'top';\\n\\t\\t\\tctx.font = helpers.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\\n\\n\\t\\t\\t// Before Body\\n\\t\\t\\tvar xLinePadding = 0;\\n\\t\\t\\tvar fillLineOfText = function(line) {\\n\\t\\t\\t\\tctx.fillText(line, pt.x + xLinePadding, pt.y);\\n\\t\\t\\t\\tpt.y += bodyFontSize + bodySpacing;\\n\\t\\t\\t};\\n\\n\\t\\t\\t// Before body lines\\n\\t\\t\\thelpers.each(vm.beforeBody, fillLineOfText);\\n\\n\\t\\t\\tvar drawColorBoxes = vm.displayColors;\\n\\t\\t\\txLinePadding = drawColorBoxes ? (bodyFontSize + 2) : 0;\\n\\n\\t\\t\\t// Draw body lines now\\n\\t\\t\\thelpers.each(body, function(bodyItem, i) {\\n\\t\\t\\t\\thelpers.each(bodyItem.before, fillLineOfText);\\n\\n\\t\\t\\t\\thelpers.each(bodyItem.lines, function(line) {\\n\\t\\t\\t\\t\\t// Draw Legend-like boxes if needed\\n\\t\\t\\t\\t\\tif (drawColorBoxes) {\\n\\t\\t\\t\\t\\t\\t// Fill a white rect so that colours merge nicely if the opacity is < 1\\n\\t\\t\\t\\t\\t\\tctx.fillStyle = mergeOpacity(vm.legendColorBackground, opacity);\\n\\t\\t\\t\\t\\t\\tctx.fillRect(pt.x, pt.y, bodyFontSize, bodyFontSize);\\n\\n\\t\\t\\t\\t\\t\\t// Border\\n\\t\\t\\t\\t\\t\\tctx.lineWidth = 1;\\n\\t\\t\\t\\t\\t\\tctx.strokeStyle = mergeOpacity(vm.labelColors[i].borderColor, opacity);\\n\\t\\t\\t\\t\\t\\tctx.strokeRect(pt.x, pt.y, bodyFontSize, bodyFontSize);\\n\\n\\t\\t\\t\\t\\t\\t// Inner square\\n\\t\\t\\t\\t\\t\\tctx.fillStyle = mergeOpacity(vm.labelColors[i].backgroundColor, opacity);\\n\\t\\t\\t\\t\\t\\tctx.fillRect(pt.x + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\\n\\t\\t\\t\\t\\t\\tvar textColor = mergeOpacity(vm.labelTextColors[i], opacity);\\n\\t\\t\\t\\t\\t\\tctx.fillStyle = textColor;\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tfillLineOfText(line);\\n\\t\\t\\t\\t});\\n\\n\\t\\t\\t\\thelpers.each(bodyItem.after, fillLineOfText);\\n\\t\\t\\t});\\n\\n\\t\\t\\t// Reset back to 0 for after body\\n\\t\\t\\txLinePadding = 0;\\n\\n\\t\\t\\t// After body lines\\n\\t\\t\\thelpers.each(vm.afterBody, fillLineOfText);\\n\\t\\t\\tpt.y -= bodySpacing; // Remove last body spacing\\n\\t\\t},\\n\\t\\tdrawFooter: function(pt, vm, ctx, opacity) {\\n\\t\\t\\tvar footer = vm.footer;\\n\\n\\t\\t\\tif (footer.length) {\\n\\t\\t\\t\\tpt.y += vm.footerMarginTop;\\n\\n\\t\\t\\t\\tctx.textAlign = vm._footerAlign;\\n\\t\\t\\t\\tctx.textBaseline = 'top';\\n\\n\\t\\t\\t\\tctx.fillStyle = mergeOpacity(vm.footerFontColor, opacity);\\n\\t\\t\\t\\tctx.font = helpers.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\\n\\n\\t\\t\\t\\thelpers.each(footer, function(line) {\\n\\t\\t\\t\\t\\tctx.fillText(line, pt.x, pt.y);\\n\\t\\t\\t\\t\\tpt.y += vm.footerFontSize + vm.footerSpacing;\\n\\t\\t\\t\\t});\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\tdrawBackground: function(pt, vm, ctx, tooltipSize, opacity) {\\n\\t\\t\\tctx.fillStyle = mergeOpacity(vm.backgroundColor, opacity);\\n\\t\\t\\tctx.strokeStyle = mergeOpacity(vm.borderColor, opacity);\\n\\t\\t\\tctx.lineWidth = vm.borderWidth;\\n\\t\\t\\tvar xAlign = vm.xAlign;\\n\\t\\t\\tvar yAlign = vm.yAlign;\\n\\t\\t\\tvar x = pt.x;\\n\\t\\t\\tvar y = pt.y;\\n\\t\\t\\tvar width = tooltipSize.width;\\n\\t\\t\\tvar height = tooltipSize.height;\\n\\t\\t\\tvar radius = vm.cornerRadius;\\n\\n\\t\\t\\tctx.beginPath();\\n\\t\\t\\tctx.moveTo(x + radius, y);\\n\\t\\t\\tif (yAlign === 'top') {\\n\\t\\t\\t\\tthis.drawCaret(pt, tooltipSize);\\n\\t\\t\\t}\\n\\t\\t\\tctx.lineTo(x + width - radius, y);\\n\\t\\t\\tctx.quadraticCurveTo(x + width, y, x + width, y + radius);\\n\\t\\t\\tif (yAlign === 'center' && xAlign === 'right') {\\n\\t\\t\\t\\tthis.drawCaret(pt, tooltipSize);\\n\\t\\t\\t}\\n\\t\\t\\tctx.lineTo(x + width, y + height - radius);\\n\\t\\t\\tctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\\n\\t\\t\\tif (yAlign === 'bottom') {\\n\\t\\t\\t\\tthis.drawCaret(pt, tooltipSize);\\n\\t\\t\\t}\\n\\t\\t\\tctx.lineTo(x + radius, y + height);\\n\\t\\t\\tctx.quadraticCurveTo(x, y + height, x, y + height - radius);\\n\\t\\t\\tif (yAlign === 'center' && xAlign === 'left') {\\n\\t\\t\\t\\tthis.drawCaret(pt, tooltipSize);\\n\\t\\t\\t}\\n\\t\\t\\tctx.lineTo(x, y + radius);\\n\\t\\t\\tctx.quadraticCurveTo(x, y, x + radius, y);\\n\\t\\t\\tctx.closePath();\\n\\n\\t\\t\\tctx.fill();\\n\\n\\t\\t\\tif (vm.borderWidth > 0) {\\n\\t\\t\\t\\tctx.stroke();\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\tdraw: function() {\\n\\t\\t\\tvar ctx = this._chart.ctx;\\n\\t\\t\\tvar vm = this._view;\\n\\n\\t\\t\\tif (vm.opacity === 0) {\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar tooltipSize = {\\n\\t\\t\\t\\twidth: vm.width,\\n\\t\\t\\t\\theight: vm.height\\n\\t\\t\\t};\\n\\t\\t\\tvar pt = {\\n\\t\\t\\t\\tx: vm.x,\\n\\t\\t\\t\\ty: vm.y\\n\\t\\t\\t};\\n\\n\\t\\t\\t// IE11/Edge does not like very small opacities, so snap to 0\\n\\t\\t\\tvar opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity;\\n\\n\\t\\t\\t// Truthy/falsey value for empty tooltip\\n\\t\\t\\tvar hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\\n\\n\\t\\t\\tif (this._options.enabled && hasTooltipContent) {\\n\\t\\t\\t\\t// Draw Background\\n\\t\\t\\t\\tthis.drawBackground(pt, vm, ctx, tooltipSize, opacity);\\n\\n\\t\\t\\t\\t// Draw Title, Body, and Footer\\n\\t\\t\\t\\tpt.x += vm.xPadding;\\n\\t\\t\\t\\tpt.y += vm.yPadding;\\n\\n\\t\\t\\t\\t// Titles\\n\\t\\t\\t\\tthis.drawTitle(pt, vm, ctx, opacity);\\n\\n\\t\\t\\t\\t// Body\\n\\t\\t\\t\\tthis.drawBody(pt, vm, ctx, opacity);\\n\\n\\t\\t\\t\\t// Footer\\n\\t\\t\\t\\tthis.drawFooter(pt, vm, ctx, opacity);\\n\\t\\t\\t}\\n\\t\\t},\\n\\n\\t\\t/**\\n\\t\\t * Handle an event\\n\\t\\t * @private\\n\\t\\t * @param {IEvent} event - The event to handle\\n\\t\\t * @returns {Boolean} true if the tooltip changed\\n\\t\\t */\\n\\t\\thandleEvent: function(e) {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\tvar options = me._options;\\n\\t\\t\\tvar changed = false;\\n\\n\\t\\t\\tme._lastActive = me._lastActive || [];\\n\\n\\t\\t\\t// Find Active Elements for tooltips\\n\\t\\t\\tif (e.type === 'mouseout') {\\n\\t\\t\\t\\tme._active = [];\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tme._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Remember Last Actives\\n\\t\\t\\tchanged = !helpers.arrayEquals(me._active, me._lastActive);\\n\\n\\t\\t\\t// If tooltip didn't change, do not handle the target event\\n\\t\\t\\tif (!changed) {\\n\\t\\t\\t\\treturn false;\\n\\t\\t\\t}\\n\\n\\t\\t\\tme._lastActive = me._active;\\n\\n\\t\\t\\tif (options.enabled || options.custom) {\\n\\t\\t\\t\\tme._eventPosition = {\\n\\t\\t\\t\\t\\tx: e.x,\\n\\t\\t\\t\\t\\ty: e.y\\n\\t\\t\\t\\t};\\n\\n\\t\\t\\t\\tvar model = me._model;\\n\\t\\t\\t\\tme.update(true);\\n\\t\\t\\t\\tme.pivot();\\n\\n\\t\\t\\t\\t// See if our tooltip position changed\\n\\t\\t\\t\\tchanged |= (model.x !== me._model.x) || (model.y !== me._model.y);\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn changed;\\n\\t\\t}\\n\\t});\\n\\n\\t/**\\n\\t * @namespace Chart.Tooltip.positioners\\n\\t */\\n\\tChart.Tooltip.positioners = {\\n\\t\\t/**\\n\\t\\t * Average mode places the tooltip at the average position of the elements shown\\n\\t\\t * @function Chart.Tooltip.positioners.average\\n\\t\\t * @param elements {ChartElement[]} the elements being displayed in the tooltip\\n\\t\\t * @returns {Point} tooltip position\\n\\t\\t */\\n\\t\\taverage: function(elements) {\\n\\t\\t\\tif (!elements.length) {\\n\\t\\t\\t\\treturn false;\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar i, len;\\n\\t\\t\\tvar x = 0;\\n\\t\\t\\tvar y = 0;\\n\\t\\t\\tvar count = 0;\\n\\n\\t\\t\\tfor (i = 0, len = elements.length; i < len; ++i) {\\n\\t\\t\\t\\tvar el = elements[i];\\n\\t\\t\\t\\tif (el && el.hasValue()) {\\n\\t\\t\\t\\t\\tvar pos = el.tooltipPosition();\\n\\t\\t\\t\\t\\tx += pos.x;\\n\\t\\t\\t\\t\\ty += pos.y;\\n\\t\\t\\t\\t\\t++count;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn {\\n\\t\\t\\t\\tx: Math.round(x / count),\\n\\t\\t\\t\\ty: Math.round(y / count)\\n\\t\\t\\t};\\n\\t\\t},\\n\\n\\t\\t/**\\n\\t\\t * Gets the tooltip position nearest of the item nearest to the event position\\n\\t\\t * @function Chart.Tooltip.positioners.nearest\\n\\t\\t * @param elements {Chart.Element[]} the tooltip elements\\n\\t\\t * @param eventPosition {Point} the position of the event in canvas coordinates\\n\\t\\t * @returns {Point} the tooltip position\\n\\t\\t */\\n\\t\\tnearest: function(elements, eventPosition) {\\n\\t\\t\\tvar x = eventPosition.x;\\n\\t\\t\\tvar y = eventPosition.y;\\n\\t\\t\\tvar minDistance = Number.POSITIVE_INFINITY;\\n\\t\\t\\tvar i, len, nearestElement;\\n\\n\\t\\t\\tfor (i = 0, len = elements.length; i < len; ++i) {\\n\\t\\t\\t\\tvar el = elements[i];\\n\\t\\t\\t\\tif (el && el.hasValue()) {\\n\\t\\t\\t\\t\\tvar center = el.getCenterPoint();\\n\\t\\t\\t\\t\\tvar d = helpers.distanceBetweenPoints(eventPosition, center);\\n\\n\\t\\t\\t\\t\\tif (d < minDistance) {\\n\\t\\t\\t\\t\\t\\tminDistance = d;\\n\\t\\t\\t\\t\\t\\tnearestElement = el;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (nearestElement) {\\n\\t\\t\\t\\tvar tp = nearestElement.tooltipPosition();\\n\\t\\t\\t\\tx = tp.x;\\n\\t\\t\\t\\ty = tp.y;\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn {\\n\\t\\t\\t\\tx: x,\\n\\t\\t\\t\\ty: y\\n\\t\\t\\t};\\n\\t\\t}\\n\\t};\\n};\\n\\n},{\\\"25\\\":25,\\\"26\\\":26,\\\"45\\\":45}],36:[function(require,module,exports){\\n'use strict';\\n\\nvar defaults = require(25);\\nvar Element = require(26);\\nvar helpers = require(45);\\n\\ndefaults._set('global', {\\n\\telements: {\\n\\t\\tarc: {\\n\\t\\t\\tbackgroundColor: defaults.global.defaultColor,\\n\\t\\t\\tborderColor: '#fff',\\n\\t\\t\\tborderWidth: 2\\n\\t\\t}\\n\\t}\\n});\\n\\nmodule.exports = Element.extend({\\n\\tinLabelRange: function(mouseX) {\\n\\t\\tvar vm = this._view;\\n\\n\\t\\tif (vm) {\\n\\t\\t\\treturn (Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2));\\n\\t\\t}\\n\\t\\treturn false;\\n\\t},\\n\\n\\tinRange: function(chartX, chartY) {\\n\\t\\tvar vm = this._view;\\n\\n\\t\\tif (vm) {\\n\\t\\t\\tvar pointRelativePosition = helpers.getAngleFromPoint(vm, {x: chartX, y: chartY});\\n\\t\\t\\tvar\\tangle = pointRelativePosition.angle;\\n\\t\\t\\tvar distance = pointRelativePosition.distance;\\n\\n\\t\\t\\t// Sanitise angle range\\n\\t\\t\\tvar startAngle = vm.startAngle;\\n\\t\\t\\tvar endAngle = vm.endAngle;\\n\\t\\t\\twhile (endAngle < startAngle) {\\n\\t\\t\\t\\tendAngle += 2.0 * Math.PI;\\n\\t\\t\\t}\\n\\t\\t\\twhile (angle > endAngle) {\\n\\t\\t\\t\\tangle -= 2.0 * Math.PI;\\n\\t\\t\\t}\\n\\t\\t\\twhile (angle < startAngle) {\\n\\t\\t\\t\\tangle += 2.0 * Math.PI;\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Check if within the range of the open/close angle\\n\\t\\t\\tvar betweenAngles = (angle >= startAngle && angle <= endAngle);\\n\\t\\t\\tvar withinRadius = (distance >= vm.innerRadius && distance <= vm.outerRadius);\\n\\n\\t\\t\\treturn (betweenAngles && withinRadius);\\n\\t\\t}\\n\\t\\treturn false;\\n\\t},\\n\\n\\tgetCenterPoint: function() {\\n\\t\\tvar vm = this._view;\\n\\t\\tvar halfAngle = (vm.startAngle + vm.endAngle) / 2;\\n\\t\\tvar halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\\n\\t\\treturn {\\n\\t\\t\\tx: vm.x + Math.cos(halfAngle) * halfRadius,\\n\\t\\t\\ty: vm.y + Math.sin(halfAngle) * halfRadius\\n\\t\\t};\\n\\t},\\n\\n\\tgetArea: function() {\\n\\t\\tvar vm = this._view;\\n\\t\\treturn Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\\n\\t},\\n\\n\\ttooltipPosition: function() {\\n\\t\\tvar vm = this._view;\\n\\t\\tvar centreAngle = vm.startAngle + ((vm.endAngle - vm.startAngle) / 2);\\n\\t\\tvar rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\\n\\n\\t\\treturn {\\n\\t\\t\\tx: vm.x + (Math.cos(centreAngle) * rangeFromCentre),\\n\\t\\t\\ty: vm.y + (Math.sin(centreAngle) * rangeFromCentre)\\n\\t\\t};\\n\\t},\\n\\n\\tdraw: function() {\\n\\t\\tvar ctx = this._chart.ctx;\\n\\t\\tvar vm = this._view;\\n\\t\\tvar sA = vm.startAngle;\\n\\t\\tvar eA = vm.endAngle;\\n\\n\\t\\tctx.beginPath();\\n\\n\\t\\tctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\\n\\t\\tctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\\n\\n\\t\\tctx.closePath();\\n\\t\\tctx.strokeStyle = vm.borderColor;\\n\\t\\tctx.lineWidth = vm.borderWidth;\\n\\n\\t\\tctx.fillStyle = vm.backgroundColor;\\n\\n\\t\\tctx.fill();\\n\\t\\tctx.lineJoin = 'bevel';\\n\\n\\t\\tif (vm.borderWidth) {\\n\\t\\t\\tctx.stroke();\\n\\t\\t}\\n\\t}\\n});\\n\\n},{\\\"25\\\":25,\\\"26\\\":26,\\\"45\\\":45}],37:[function(require,module,exports){\\n'use strict';\\n\\nvar defaults = require(25);\\nvar Element = require(26);\\nvar helpers = require(45);\\n\\nvar globalDefaults = defaults.global;\\n\\ndefaults._set('global', {\\n\\telements: {\\n\\t\\tline: {\\n\\t\\t\\ttension: 0.4,\\n\\t\\t\\tbackgroundColor: globalDefaults.defaultColor,\\n\\t\\t\\tborderWidth: 3,\\n\\t\\t\\tborderColor: globalDefaults.defaultColor,\\n\\t\\t\\tborderCapStyle: 'butt',\\n\\t\\t\\tborderDash: [],\\n\\t\\t\\tborderDashOffset: 0.0,\\n\\t\\t\\tborderJoinStyle: 'miter',\\n\\t\\t\\tcapBezierPoints: true,\\n\\t\\t\\tfill: true, // do we fill in the area between the line and its base axis\\n\\t\\t}\\n\\t}\\n});\\n\\nmodule.exports = Element.extend({\\n\\tdraw: function() {\\n\\t\\tvar me = this;\\n\\t\\tvar vm = me._view;\\n\\t\\tvar ctx = me._chart.ctx;\\n\\t\\tvar spanGaps = vm.spanGaps;\\n\\t\\tvar points = me._children.slice(); // clone array\\n\\t\\tvar globalOptionLineElements = globalDefaults.elements.line;\\n\\t\\tvar lastDrawnIndex = -1;\\n\\t\\tvar index, current, previous, currentVM;\\n\\n\\t\\t// If we are looping, adding the first point again\\n\\t\\tif (me._loop && points.length) {\\n\\t\\t\\tpoints.push(points[0]);\\n\\t\\t}\\n\\n\\t\\tctx.save();\\n\\n\\t\\t// Stroke Line Options\\n\\t\\tctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle;\\n\\n\\t\\t// IE 9 and 10 do not support line dash\\n\\t\\tif (ctx.setLineDash) {\\n\\t\\t\\tctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\\n\\t\\t}\\n\\n\\t\\tctx.lineDashOffset = vm.borderDashOffset || globalOptionLineElements.borderDashOffset;\\n\\t\\tctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\\n\\t\\tctx.lineWidth = vm.borderWidth || globalOptionLineElements.borderWidth;\\n\\t\\tctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor;\\n\\n\\t\\t// Stroke Line\\n\\t\\tctx.beginPath();\\n\\t\\tlastDrawnIndex = -1;\\n\\n\\t\\tfor (index = 0; index < points.length; ++index) {\\n\\t\\t\\tcurrent = points[index];\\n\\t\\t\\tprevious = helpers.previousItem(points, index);\\n\\t\\t\\tcurrentVM = current._view;\\n\\n\\t\\t\\t// First point moves to it's starting position no matter what\\n\\t\\t\\tif (index === 0) {\\n\\t\\t\\t\\tif (!currentVM.skip) {\\n\\t\\t\\t\\t\\tctx.moveTo(currentVM.x, currentVM.y);\\n\\t\\t\\t\\t\\tlastDrawnIndex = index;\\n\\t\\t\\t\\t}\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tprevious = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\\n\\n\\t\\t\\t\\tif (!currentVM.skip) {\\n\\t\\t\\t\\t\\tif ((lastDrawnIndex !== (index - 1) && !spanGaps) || lastDrawnIndex === -1) {\\n\\t\\t\\t\\t\\t\\t// There was a gap and this is the first point after the gap\\n\\t\\t\\t\\t\\t\\tctx.moveTo(currentVM.x, currentVM.y);\\n\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t// Line to next point\\n\\t\\t\\t\\t\\t\\thelpers.canvas.lineTo(ctx, previous._view, current._view);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\tlastDrawnIndex = index;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tctx.stroke();\\n\\t\\tctx.restore();\\n\\t}\\n});\\n\\n},{\\\"25\\\":25,\\\"26\\\":26,\\\"45\\\":45}],38:[function(require,module,exports){\\n'use strict';\\n\\nvar defaults = require(25);\\nvar Element = require(26);\\nvar helpers = require(45);\\n\\nvar defaultColor = defaults.global.defaultColor;\\n\\ndefaults._set('global', {\\n\\telements: {\\n\\t\\tpoint: {\\n\\t\\t\\tradius: 3,\\n\\t\\t\\tpointStyle: 'circle',\\n\\t\\t\\tbackgroundColor: defaultColor,\\n\\t\\t\\tborderColor: defaultColor,\\n\\t\\t\\tborderWidth: 1,\\n\\t\\t\\t// Hover\\n\\t\\t\\thitRadius: 1,\\n\\t\\t\\thoverRadius: 4,\\n\\t\\t\\thoverBorderWidth: 1\\n\\t\\t}\\n\\t}\\n});\\n\\nfunction xRange(mouseX) {\\n\\tvar vm = this._view;\\n\\treturn vm ? (Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hitRadius, 2)) : false;\\n}\\n\\nfunction yRange(mouseY) {\\n\\tvar vm = this._view;\\n\\treturn vm ? (Math.pow(mouseY - vm.y, 2) < Math.pow(vm.radius + vm.hitRadius, 2)) : false;\\n}\\n\\nmodule.exports = Element.extend({\\n\\tinRange: function(mouseX, mouseY) {\\n\\t\\tvar vm = this._view;\\n\\t\\treturn vm ? ((Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2)) < Math.pow(vm.hitRadius + vm.radius, 2)) : false;\\n\\t},\\n\\n\\tinLabelRange: xRange,\\n\\tinXRange: xRange,\\n\\tinYRange: yRange,\\n\\n\\tgetCenterPoint: function() {\\n\\t\\tvar vm = this._view;\\n\\t\\treturn {\\n\\t\\t\\tx: vm.x,\\n\\t\\t\\ty: vm.y\\n\\t\\t};\\n\\t},\\n\\n\\tgetArea: function() {\\n\\t\\treturn Math.PI * Math.pow(this._view.radius, 2);\\n\\t},\\n\\n\\ttooltipPosition: function() {\\n\\t\\tvar vm = this._view;\\n\\t\\treturn {\\n\\t\\t\\tx: vm.x,\\n\\t\\t\\ty: vm.y,\\n\\t\\t\\tpadding: vm.radius + vm.borderWidth\\n\\t\\t};\\n\\t},\\n\\n\\tdraw: function(chartArea) {\\n\\t\\tvar vm = this._view;\\n\\t\\tvar model = this._model;\\n\\t\\tvar ctx = this._chart.ctx;\\n\\t\\tvar pointStyle = vm.pointStyle;\\n\\t\\tvar radius = vm.radius;\\n\\t\\tvar x = vm.x;\\n\\t\\tvar y = vm.y;\\n\\t\\tvar color = helpers.color;\\n\\t\\tvar errMargin = 1.01; // 1.01 is margin for Accumulated error. (Especially Edge, IE.)\\n\\t\\tvar ratio = 0;\\n\\n\\t\\tif (vm.skip) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tctx.strokeStyle = vm.borderColor || defaultColor;\\n\\t\\tctx.lineWidth = helpers.valueOrDefault(vm.borderWidth, defaults.global.elements.point.borderWidth);\\n\\t\\tctx.fillStyle = vm.backgroundColor || defaultColor;\\n\\n\\t\\t// Cliping for Points.\\n\\t\\t// going out from inner charArea?\\n\\t\\tif ((chartArea !== undefined) && ((model.x < chartArea.left) || (chartArea.right * errMargin < model.x) || (model.y < chartArea.top) || (chartArea.bottom * errMargin < model.y))) {\\n\\t\\t\\t// Point fade out\\n\\t\\t\\tif (model.x < chartArea.left) {\\n\\t\\t\\t\\tratio = (x - model.x) / (chartArea.left - model.x);\\n\\t\\t\\t} else if (chartArea.right * errMargin < model.x) {\\n\\t\\t\\t\\tratio = (model.x - x) / (model.x - chartArea.right);\\n\\t\\t\\t} else if (model.y < chartArea.top) {\\n\\t\\t\\t\\tratio = (y - model.y) / (chartArea.top - model.y);\\n\\t\\t\\t} else if (chartArea.bottom * errMargin < model.y) {\\n\\t\\t\\t\\tratio = (model.y - y) / (model.y - chartArea.bottom);\\n\\t\\t\\t}\\n\\t\\t\\tratio = Math.round(ratio * 100) / 100;\\n\\t\\t\\tctx.strokeStyle = color(ctx.strokeStyle).alpha(ratio).rgbString();\\n\\t\\t\\tctx.fillStyle = color(ctx.fillStyle).alpha(ratio).rgbString();\\n\\t\\t}\\n\\n\\t\\thelpers.canvas.drawPoint(ctx, pointStyle, radius, x, y);\\n\\t}\\n});\\n\\n},{\\\"25\\\":25,\\\"26\\\":26,\\\"45\\\":45}],39:[function(require,module,exports){\\n'use strict';\\n\\nvar defaults = require(25);\\nvar Element = require(26);\\n\\ndefaults._set('global', {\\n\\telements: {\\n\\t\\trectangle: {\\n\\t\\t\\tbackgroundColor: defaults.global.defaultColor,\\n\\t\\t\\tborderColor: defaults.global.defaultColor,\\n\\t\\t\\tborderSkipped: 'bottom',\\n\\t\\t\\tborderWidth: 0\\n\\t\\t}\\n\\t}\\n});\\n\\nfunction isVertical(bar) {\\n\\treturn bar._view.width !== undefined;\\n}\\n\\n/**\\n * Helper function to get the bounds of the bar regardless of the orientation\\n * @param bar {Chart.Element.Rectangle} the bar\\n * @return {Bounds} bounds of the bar\\n * @private\\n */\\nfunction getBarBounds(bar) {\\n\\tvar vm = bar._view;\\n\\tvar x1, x2, y1, y2;\\n\\n\\tif (isVertical(bar)) {\\n\\t\\t// vertical\\n\\t\\tvar halfWidth = vm.width / 2;\\n\\t\\tx1 = vm.x - halfWidth;\\n\\t\\tx2 = vm.x + halfWidth;\\n\\t\\ty1 = Math.min(vm.y, vm.base);\\n\\t\\ty2 = Math.max(vm.y, vm.base);\\n\\t} else {\\n\\t\\t// horizontal bar\\n\\t\\tvar halfHeight = vm.height / 2;\\n\\t\\tx1 = Math.min(vm.x, vm.base);\\n\\t\\tx2 = Math.max(vm.x, vm.base);\\n\\t\\ty1 = vm.y - halfHeight;\\n\\t\\ty2 = vm.y + halfHeight;\\n\\t}\\n\\n\\treturn {\\n\\t\\tleft: x1,\\n\\t\\ttop: y1,\\n\\t\\tright: x2,\\n\\t\\tbottom: y2\\n\\t};\\n}\\n\\nmodule.exports = Element.extend({\\n\\tdraw: function() {\\n\\t\\tvar ctx = this._chart.ctx;\\n\\t\\tvar vm = this._view;\\n\\t\\tvar left, right, top, bottom, signX, signY, borderSkipped;\\n\\t\\tvar borderWidth = vm.borderWidth;\\n\\n\\t\\tif (!vm.horizontal) {\\n\\t\\t\\t// bar\\n\\t\\t\\tleft = vm.x - vm.width / 2;\\n\\t\\t\\tright = vm.x + vm.width / 2;\\n\\t\\t\\ttop = vm.y;\\n\\t\\t\\tbottom = vm.base;\\n\\t\\t\\tsignX = 1;\\n\\t\\t\\tsignY = bottom > top ? 1 : -1;\\n\\t\\t\\tborderSkipped = vm.borderSkipped || 'bottom';\\n\\t\\t} else {\\n\\t\\t\\t// horizontal bar\\n\\t\\t\\tleft = vm.base;\\n\\t\\t\\tright = vm.x;\\n\\t\\t\\ttop = vm.y - vm.height / 2;\\n\\t\\t\\tbottom = vm.y + vm.height / 2;\\n\\t\\t\\tsignX = right > left ? 1 : -1;\\n\\t\\t\\tsignY = 1;\\n\\t\\t\\tborderSkipped = vm.borderSkipped || 'left';\\n\\t\\t}\\n\\n\\t\\t// Canvas doesn't allow us to stroke inside the width so we can\\n\\t\\t// adjust the sizes to fit if we're setting a stroke on the line\\n\\t\\tif (borderWidth) {\\n\\t\\t\\t// borderWidth shold be less than bar width and bar height.\\n\\t\\t\\tvar barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\\n\\t\\t\\tborderWidth = borderWidth > barSize ? barSize : borderWidth;\\n\\t\\t\\tvar halfStroke = borderWidth / 2;\\n\\t\\t\\t// Adjust borderWidth when bar top position is near vm.base(zero).\\n\\t\\t\\tvar borderLeft = left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\\n\\t\\t\\tvar borderRight = right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\\n\\t\\t\\tvar borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\\n\\t\\t\\tvar borderBottom = bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0);\\n\\t\\t\\t// not become a vertical line?\\n\\t\\t\\tif (borderLeft !== borderRight) {\\n\\t\\t\\t\\ttop = borderTop;\\n\\t\\t\\t\\tbottom = borderBottom;\\n\\t\\t\\t}\\n\\t\\t\\t// not become a horizontal line?\\n\\t\\t\\tif (borderTop !== borderBottom) {\\n\\t\\t\\t\\tleft = borderLeft;\\n\\t\\t\\t\\tright = borderRight;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tctx.beginPath();\\n\\t\\tctx.fillStyle = vm.backgroundColor;\\n\\t\\tctx.strokeStyle = vm.borderColor;\\n\\t\\tctx.lineWidth = borderWidth;\\n\\n\\t\\t// Corner points, from bottom-left to bottom-right clockwise\\n\\t\\t// | 1 2 |\\n\\t\\t// | 0 3 |\\n\\t\\tvar corners = [\\n\\t\\t\\t[left, bottom],\\n\\t\\t\\t[left, top],\\n\\t\\t\\t[right, top],\\n\\t\\t\\t[right, bottom]\\n\\t\\t];\\n\\n\\t\\t// Find first (starting) corner with fallback to 'bottom'\\n\\t\\tvar borders = ['bottom', 'left', 'top', 'right'];\\n\\t\\tvar startCorner = borders.indexOf(borderSkipped, 0);\\n\\t\\tif (startCorner === -1) {\\n\\t\\t\\tstartCorner = 0;\\n\\t\\t}\\n\\n\\t\\tfunction cornerAt(index) {\\n\\t\\t\\treturn corners[(startCorner + index) % 4];\\n\\t\\t}\\n\\n\\t\\t// Draw rectangle from 'startCorner'\\n\\t\\tvar corner = cornerAt(0);\\n\\t\\tctx.moveTo(corner[0], corner[1]);\\n\\n\\t\\tfor (var i = 1; i < 4; i++) {\\n\\t\\t\\tcorner = cornerAt(i);\\n\\t\\t\\tctx.lineTo(corner[0], corner[1]);\\n\\t\\t}\\n\\n\\t\\tctx.fill();\\n\\t\\tif (borderWidth) {\\n\\t\\t\\tctx.stroke();\\n\\t\\t}\\n\\t},\\n\\n\\theight: function() {\\n\\t\\tvar vm = this._view;\\n\\t\\treturn vm.base - vm.y;\\n\\t},\\n\\n\\tinRange: function(mouseX, mouseY) {\\n\\t\\tvar inRange = false;\\n\\n\\t\\tif (this._view) {\\n\\t\\t\\tvar bounds = getBarBounds(this);\\n\\t\\t\\tinRange = mouseX >= bounds.left && mouseX <= bounds.right && mouseY >= bounds.top && mouseY <= bounds.bottom;\\n\\t\\t}\\n\\n\\t\\treturn inRange;\\n\\t},\\n\\n\\tinLabelRange: function(mouseX, mouseY) {\\n\\t\\tvar me = this;\\n\\t\\tif (!me._view) {\\n\\t\\t\\treturn false;\\n\\t\\t}\\n\\n\\t\\tvar inRange = false;\\n\\t\\tvar bounds = getBarBounds(me);\\n\\n\\t\\tif (isVertical(me)) {\\n\\t\\t\\tinRange = mouseX >= bounds.left && mouseX <= bounds.right;\\n\\t\\t} else {\\n\\t\\t\\tinRange = mouseY >= bounds.top && mouseY <= bounds.bottom;\\n\\t\\t}\\n\\n\\t\\treturn inRange;\\n\\t},\\n\\n\\tinXRange: function(mouseX) {\\n\\t\\tvar bounds = getBarBounds(this);\\n\\t\\treturn mouseX >= bounds.left && mouseX <= bounds.right;\\n\\t},\\n\\n\\tinYRange: function(mouseY) {\\n\\t\\tvar bounds = getBarBounds(this);\\n\\t\\treturn mouseY >= bounds.top && mouseY <= bounds.bottom;\\n\\t},\\n\\n\\tgetCenterPoint: function() {\\n\\t\\tvar vm = this._view;\\n\\t\\tvar x, y;\\n\\t\\tif (isVertical(this)) {\\n\\t\\t\\tx = vm.x;\\n\\t\\t\\ty = (vm.y + vm.base) / 2;\\n\\t\\t} else {\\n\\t\\t\\tx = (vm.x + vm.base) / 2;\\n\\t\\t\\ty = vm.y;\\n\\t\\t}\\n\\n\\t\\treturn {x: x, y: y};\\n\\t},\\n\\n\\tgetArea: function() {\\n\\t\\tvar vm = this._view;\\n\\t\\treturn vm.width * Math.abs(vm.y - vm.base);\\n\\t},\\n\\n\\ttooltipPosition: function() {\\n\\t\\tvar vm = this._view;\\n\\t\\treturn {\\n\\t\\t\\tx: vm.x,\\n\\t\\t\\ty: vm.y\\n\\t\\t};\\n\\t}\\n});\\n\\n},{\\\"25\\\":25,\\\"26\\\":26}],40:[function(require,module,exports){\\n'use strict';\\n\\nmodule.exports = {};\\nmodule.exports.Arc = require(36);\\nmodule.exports.Line = require(37);\\nmodule.exports.Point = require(38);\\nmodule.exports.Rectangle = require(39);\\n\\n},{\\\"36\\\":36,\\\"37\\\":37,\\\"38\\\":38,\\\"39\\\":39}],41:[function(require,module,exports){\\n'use strict';\\n\\nvar helpers = require(42);\\n\\n/**\\n * @namespace Chart.helpers.canvas\\n */\\nvar exports = module.exports = {\\n\\t/**\\n\\t * Clears the entire canvas associated to the given `chart`.\\n\\t * @param {Chart} chart - The chart for which to clear the canvas.\\n\\t */\\n\\tclear: function(chart) {\\n\\t\\tchart.ctx.clearRect(0, 0, chart.width, chart.height);\\n\\t},\\n\\n\\t/**\\n\\t * Creates a \\\"path\\\" for a rectangle with rounded corners at position (x, y) with a\\n\\t * given size (width, height) and the same `radius` for all corners.\\n\\t * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\\n\\t * @param {Number} x - The x axis of the coordinate for the rectangle starting point.\\n\\t * @param {Number} y - The y axis of the coordinate for the rectangle starting point.\\n\\t * @param {Number} width - The rectangle's width.\\n\\t * @param {Number} height - The rectangle's height.\\n\\t * @param {Number} radius - The rounded amount (in pixels) for the four corners.\\n\\t * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\\n\\t */\\n\\troundedRect: function(ctx, x, y, width, height, radius) {\\n\\t\\tif (radius) {\\n\\t\\t\\tvar rx = Math.min(radius, width / 2);\\n\\t\\t\\tvar ry = Math.min(radius, height / 2);\\n\\n\\t\\t\\tctx.moveTo(x + rx, y);\\n\\t\\t\\tctx.lineTo(x + width - rx, y);\\n\\t\\t\\tctx.quadraticCurveTo(x + width, y, x + width, y + ry);\\n\\t\\t\\tctx.lineTo(x + width, y + height - ry);\\n\\t\\t\\tctx.quadraticCurveTo(x + width, y + height, x + width - rx, y + height);\\n\\t\\t\\tctx.lineTo(x + rx, y + height);\\n\\t\\t\\tctx.quadraticCurveTo(x, y + height, x, y + height - ry);\\n\\t\\t\\tctx.lineTo(x, y + ry);\\n\\t\\t\\tctx.quadraticCurveTo(x, y, x + rx, y);\\n\\t\\t} else {\\n\\t\\t\\tctx.rect(x, y, width, height);\\n\\t\\t}\\n\\t},\\n\\n\\tdrawPoint: function(ctx, style, radius, x, y) {\\n\\t\\tvar type, edgeLength, xOffset, yOffset, height, size;\\n\\n\\t\\tif (typeof style === 'object') {\\n\\t\\t\\ttype = style.toString();\\n\\t\\t\\tif (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\\n\\t\\t\\t\\tctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tif (isNaN(radius) || radius <= 0) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tswitch (style) {\\n\\t\\t// Default includes circle\\n\\t\\tdefault:\\n\\t\\t\\tctx.beginPath();\\n\\t\\t\\tctx.arc(x, y, radius, 0, Math.PI * 2);\\n\\t\\t\\tctx.closePath();\\n\\t\\t\\tctx.fill();\\n\\t\\t\\tbreak;\\n\\t\\tcase 'triangle':\\n\\t\\t\\tctx.beginPath();\\n\\t\\t\\tedgeLength = 3 * radius / Math.sqrt(3);\\n\\t\\t\\theight = edgeLength * Math.sqrt(3) / 2;\\n\\t\\t\\tctx.moveTo(x - edgeLength / 2, y + height / 3);\\n\\t\\t\\tctx.lineTo(x + edgeLength / 2, y + height / 3);\\n\\t\\t\\tctx.lineTo(x, y - 2 * height / 3);\\n\\t\\t\\tctx.closePath();\\n\\t\\t\\tctx.fill();\\n\\t\\t\\tbreak;\\n\\t\\tcase 'rect':\\n\\t\\t\\tsize = 1 / Math.SQRT2 * radius;\\n\\t\\t\\tctx.beginPath();\\n\\t\\t\\tctx.fillRect(x - size, y - size, 2 * size, 2 * size);\\n\\t\\t\\tctx.strokeRect(x - size, y - size, 2 * size, 2 * size);\\n\\t\\t\\tbreak;\\n\\t\\tcase 'rectRounded':\\n\\t\\t\\tvar offset = radius / Math.SQRT2;\\n\\t\\t\\tvar leftX = x - offset;\\n\\t\\t\\tvar topY = y - offset;\\n\\t\\t\\tvar sideSize = Math.SQRT2 * radius;\\n\\t\\t\\tctx.beginPath();\\n\\t\\t\\tthis.roundedRect(ctx, leftX, topY, sideSize, sideSize, radius / 2);\\n\\t\\t\\tctx.closePath();\\n\\t\\t\\tctx.fill();\\n\\t\\t\\tbreak;\\n\\t\\tcase 'rectRot':\\n\\t\\t\\tsize = 1 / Math.SQRT2 * radius;\\n\\t\\t\\tctx.beginPath();\\n\\t\\t\\tctx.moveTo(x - size, y);\\n\\t\\t\\tctx.lineTo(x, y + size);\\n\\t\\t\\tctx.lineTo(x + size, y);\\n\\t\\t\\tctx.lineTo(x, y - size);\\n\\t\\t\\tctx.closePath();\\n\\t\\t\\tctx.fill();\\n\\t\\t\\tbreak;\\n\\t\\tcase 'cross':\\n\\t\\t\\tctx.beginPath();\\n\\t\\t\\tctx.moveTo(x, y + radius);\\n\\t\\t\\tctx.lineTo(x, y - radius);\\n\\t\\t\\tctx.moveTo(x - radius, y);\\n\\t\\t\\tctx.lineTo(x + radius, y);\\n\\t\\t\\tctx.closePath();\\n\\t\\t\\tbreak;\\n\\t\\tcase 'crossRot':\\n\\t\\t\\tctx.beginPath();\\n\\t\\t\\txOffset = Math.cos(Math.PI / 4) * radius;\\n\\t\\t\\tyOffset = Math.sin(Math.PI / 4) * radius;\\n\\t\\t\\tctx.moveTo(x - xOffset, y - yOffset);\\n\\t\\t\\tctx.lineTo(x + xOffset, y + yOffset);\\n\\t\\t\\tctx.moveTo(x - xOffset, y + yOffset);\\n\\t\\t\\tctx.lineTo(x + xOffset, y - yOffset);\\n\\t\\t\\tctx.closePath();\\n\\t\\t\\tbreak;\\n\\t\\tcase 'star':\\n\\t\\t\\tctx.beginPath();\\n\\t\\t\\tctx.moveTo(x, y + radius);\\n\\t\\t\\tctx.lineTo(x, y - radius);\\n\\t\\t\\tctx.moveTo(x - radius, y);\\n\\t\\t\\tctx.lineTo(x + radius, y);\\n\\t\\t\\txOffset = Math.cos(Math.PI / 4) * radius;\\n\\t\\t\\tyOffset = Math.sin(Math.PI / 4) * radius;\\n\\t\\t\\tctx.moveTo(x - xOffset, y - yOffset);\\n\\t\\t\\tctx.lineTo(x + xOffset, y + yOffset);\\n\\t\\t\\tctx.moveTo(x - xOffset, y + yOffset);\\n\\t\\t\\tctx.lineTo(x + xOffset, y - yOffset);\\n\\t\\t\\tctx.closePath();\\n\\t\\t\\tbreak;\\n\\t\\tcase 'line':\\n\\t\\t\\tctx.beginPath();\\n\\t\\t\\tctx.moveTo(x - radius, y);\\n\\t\\t\\tctx.lineTo(x + radius, y);\\n\\t\\t\\tctx.closePath();\\n\\t\\t\\tbreak;\\n\\t\\tcase 'dash':\\n\\t\\t\\tctx.beginPath();\\n\\t\\t\\tctx.moveTo(x, y);\\n\\t\\t\\tctx.lineTo(x + radius, y);\\n\\t\\t\\tctx.closePath();\\n\\t\\t\\tbreak;\\n\\t\\t}\\n\\n\\t\\tctx.stroke();\\n\\t},\\n\\n\\tclipArea: function(ctx, area) {\\n\\t\\tctx.save();\\n\\t\\tctx.beginPath();\\n\\t\\tctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\\n\\t\\tctx.clip();\\n\\t},\\n\\n\\tunclipArea: function(ctx) {\\n\\t\\tctx.restore();\\n\\t},\\n\\n\\tlineTo: function(ctx, previous, target, flip) {\\n\\t\\tif (target.steppedLine) {\\n\\t\\t\\tif ((target.steppedLine === 'after' && !flip) || (target.steppedLine !== 'after' && flip)) {\\n\\t\\t\\t\\tctx.lineTo(previous.x, target.y);\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tctx.lineTo(target.x, previous.y);\\n\\t\\t\\t}\\n\\t\\t\\tctx.lineTo(target.x, target.y);\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tif (!target.tension) {\\n\\t\\t\\tctx.lineTo(target.x, target.y);\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tctx.bezierCurveTo(\\n\\t\\t\\tflip ? previous.controlPointPreviousX : previous.controlPointNextX,\\n\\t\\t\\tflip ? previous.controlPointPreviousY : previous.controlPointNextY,\\n\\t\\t\\tflip ? target.controlPointNextX : target.controlPointPreviousX,\\n\\t\\t\\tflip ? target.controlPointNextY : target.controlPointPreviousY,\\n\\t\\t\\ttarget.x,\\n\\t\\t\\ttarget.y);\\n\\t}\\n};\\n\\n// DEPRECATIONS\\n\\n/**\\n * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\\n * @namespace Chart.helpers.clear\\n * @deprecated since version 2.7.0\\n * @todo remove at version 3\\n * @private\\n */\\nhelpers.clear = exports.clear;\\n\\n/**\\n * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\\n * @namespace Chart.helpers.drawRoundedRectangle\\n * @deprecated since version 2.7.0\\n * @todo remove at version 3\\n * @private\\n */\\nhelpers.drawRoundedRectangle = function(ctx) {\\n\\tctx.beginPath();\\n\\texports.roundedRect.apply(exports, arguments);\\n\\tctx.closePath();\\n};\\n\\n},{\\\"42\\\":42}],42:[function(require,module,exports){\\n'use strict';\\n\\n/**\\n * @namespace Chart.helpers\\n */\\nvar helpers = {\\n\\t/**\\n\\t * An empty function that can be used, for example, for optional callback.\\n\\t */\\n\\tnoop: function() {},\\n\\n\\t/**\\n\\t * Returns a unique id, sequentially generated from a global variable.\\n\\t * @returns {Number}\\n\\t * @function\\n\\t */\\n\\tuid: (function() {\\n\\t\\tvar id = 0;\\n\\t\\treturn function() {\\n\\t\\t\\treturn id++;\\n\\t\\t};\\n\\t}()),\\n\\n\\t/**\\n\\t * Returns true if `value` is neither null nor undefined, else returns false.\\n\\t * @param {*} value - The value to test.\\n\\t * @returns {Boolean}\\n\\t * @since 2.7.0\\n\\t */\\n\\tisNullOrUndef: function(value) {\\n\\t\\treturn value === null || typeof value === 'undefined';\\n\\t},\\n\\n\\t/**\\n\\t * Returns true if `value` is an array, else returns false.\\n\\t * @param {*} value - The value to test.\\n\\t * @returns {Boolean}\\n\\t * @function\\n\\t */\\n\\tisArray: Array.isArray ? Array.isArray : function(value) {\\n\\t\\treturn Object.prototype.toString.call(value) === '[object Array]';\\n\\t},\\n\\n\\t/**\\n\\t * Returns true if `value` is an object (excluding null), else returns false.\\n\\t * @param {*} value - The value to test.\\n\\t * @returns {Boolean}\\n\\t * @since 2.7.0\\n\\t */\\n\\tisObject: function(value) {\\n\\t\\treturn value !== null && Object.prototype.toString.call(value) === '[object Object]';\\n\\t},\\n\\n\\t/**\\n\\t * Returns `value` if defined, else returns `defaultValue`.\\n\\t * @param {*} value - The value to return if defined.\\n\\t * @param {*} defaultValue - The value to return if `value` is undefined.\\n\\t * @returns {*}\\n\\t */\\n\\tvalueOrDefault: function(value, defaultValue) {\\n\\t\\treturn typeof value === 'undefined' ? defaultValue : value;\\n\\t},\\n\\n\\t/**\\n\\t * Returns value at the given `index` in array if defined, else returns `defaultValue`.\\n\\t * @param {Array} value - The array to lookup for value at `index`.\\n\\t * @param {Number} index - The index in `value` to lookup for value.\\n\\t * @param {*} defaultValue - The value to return if `value[index]` is undefined.\\n\\t * @returns {*}\\n\\t */\\n\\tvalueAtIndexOrDefault: function(value, index, defaultValue) {\\n\\t\\treturn helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\\n\\t},\\n\\n\\t/**\\n\\t * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\\n\\t * value returned by `fn`. If `fn` is not a function, this method returns undefined.\\n\\t * @param {Function} fn - The function to call.\\n\\t * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\\n\\t * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\\n\\t * @returns {*}\\n\\t */\\n\\tcallback: function(fn, args, thisArg) {\\n\\t\\tif (fn && typeof fn.call === 'function') {\\n\\t\\t\\treturn fn.apply(thisArg, args);\\n\\t\\t}\\n\\t},\\n\\n\\t/**\\n\\t * Note(SB) for performance sake, this method should only be used when loopable type\\n\\t * is unknown or in none intensive code (not called often and small loopable). Else\\n\\t * it's preferable to use a regular for() loop and save extra function calls.\\n\\t * @param {Object|Array} loopable - The object or array to be iterated.\\n\\t * @param {Function} fn - The function to call for each item.\\n\\t * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\\n\\t * @param {Boolean} [reverse] - If true, iterates backward on the loopable.\\n\\t */\\n\\teach: function(loopable, fn, thisArg, reverse) {\\n\\t\\tvar i, len, keys;\\n\\t\\tif (helpers.isArray(loopable)) {\\n\\t\\t\\tlen = loopable.length;\\n\\t\\t\\tif (reverse) {\\n\\t\\t\\t\\tfor (i = len - 1; i >= 0; i--) {\\n\\t\\t\\t\\t\\tfn.call(thisArg, loopable[i], i);\\n\\t\\t\\t\\t}\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tfor (i = 0; i < len; i++) {\\n\\t\\t\\t\\t\\tfn.call(thisArg, loopable[i], i);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t} else if (helpers.isObject(loopable)) {\\n\\t\\t\\tkeys = Object.keys(loopable);\\n\\t\\t\\tlen = keys.length;\\n\\t\\t\\tfor (i = 0; i < len; i++) {\\n\\t\\t\\t\\tfn.call(thisArg, loopable[keys[i]], keys[i]);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t},\\n\\n\\t/**\\n\\t * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\\n\\t * @see http://stackoverflow.com/a/14853974\\n\\t * @param {Array} a0 - The array to compare\\n\\t * @param {Array} a1 - The array to compare\\n\\t * @returns {Boolean}\\n\\t */\\n\\tarrayEquals: function(a0, a1) {\\n\\t\\tvar i, ilen, v0, v1;\\n\\n\\t\\tif (!a0 || !a1 || a0.length !== a1.length) {\\n\\t\\t\\treturn false;\\n\\t\\t}\\n\\n\\t\\tfor (i = 0, ilen = a0.length; i < ilen; ++i) {\\n\\t\\t\\tv0 = a0[i];\\n\\t\\t\\tv1 = a1[i];\\n\\n\\t\\t\\tif (v0 instanceof Array && v1 instanceof Array) {\\n\\t\\t\\t\\tif (!helpers.arrayEquals(v0, v1)) {\\n\\t\\t\\t\\t\\treturn false;\\n\\t\\t\\t\\t}\\n\\t\\t\\t} else if (v0 !== v1) {\\n\\t\\t\\t\\t// NOTE: two different object instances will never be equal: {x:20} != {x:20}\\n\\t\\t\\t\\treturn false;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn true;\\n\\t},\\n\\n\\t/**\\n\\t * Returns a deep copy of `source` without keeping references on objects and arrays.\\n\\t * @param {*} source - The value to clone.\\n\\t * @returns {*}\\n\\t */\\n\\tclone: function(source) {\\n\\t\\tif (helpers.isArray(source)) {\\n\\t\\t\\treturn source.map(helpers.clone);\\n\\t\\t}\\n\\n\\t\\tif (helpers.isObject(source)) {\\n\\t\\t\\tvar target = {};\\n\\t\\t\\tvar keys = Object.keys(source);\\n\\t\\t\\tvar klen = keys.length;\\n\\t\\t\\tvar k = 0;\\n\\n\\t\\t\\tfor (; k < klen; ++k) {\\n\\t\\t\\t\\ttarget[keys[k]] = helpers.clone(source[keys[k]]);\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn target;\\n\\t\\t}\\n\\n\\t\\treturn source;\\n\\t},\\n\\n\\t/**\\n\\t * The default merger when Chart.helpers.merge is called without merger option.\\n\\t * Note(SB): this method is also used by configMerge and scaleMerge as fallback.\\n\\t * @private\\n\\t */\\n\\t_merger: function(key, target, source, options) {\\n\\t\\tvar tval = target[key];\\n\\t\\tvar sval = source[key];\\n\\n\\t\\tif (helpers.isObject(tval) && helpers.isObject(sval)) {\\n\\t\\t\\thelpers.merge(tval, sval, options);\\n\\t\\t} else {\\n\\t\\t\\ttarget[key] = helpers.clone(sval);\\n\\t\\t}\\n\\t},\\n\\n\\t/**\\n\\t * Merges source[key] in target[key] only if target[key] is undefined.\\n\\t * @private\\n\\t */\\n\\t_mergerIf: function(key, target, source) {\\n\\t\\tvar tval = target[key];\\n\\t\\tvar sval = source[key];\\n\\n\\t\\tif (helpers.isObject(tval) && helpers.isObject(sval)) {\\n\\t\\t\\thelpers.mergeIf(tval, sval);\\n\\t\\t} else if (!target.hasOwnProperty(key)) {\\n\\t\\t\\ttarget[key] = helpers.clone(sval);\\n\\t\\t}\\n\\t},\\n\\n\\t/**\\n\\t * Recursively deep copies `source` properties into `target` with the given `options`.\\n\\t * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\\n\\t * @param {Object} target - The target object in which all sources are merged into.\\n\\t * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\\n\\t * @param {Object} [options] - Merging options:\\n\\t * @param {Function} [options.merger] - The merge method (key, target, source, options)\\n\\t * @returns {Object} The `target` object.\\n\\t */\\n\\tmerge: function(target, source, options) {\\n\\t\\tvar sources = helpers.isArray(source) ? source : [source];\\n\\t\\tvar ilen = sources.length;\\n\\t\\tvar merge, i, keys, klen, k;\\n\\n\\t\\tif (!helpers.isObject(target)) {\\n\\t\\t\\treturn target;\\n\\t\\t}\\n\\n\\t\\toptions = options || {};\\n\\t\\tmerge = options.merger || helpers._merger;\\n\\n\\t\\tfor (i = 0; i < ilen; ++i) {\\n\\t\\t\\tsource = sources[i];\\n\\t\\t\\tif (!helpers.isObject(source)) {\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tkeys = Object.keys(source);\\n\\t\\t\\tfor (k = 0, klen = keys.length; k < klen; ++k) {\\n\\t\\t\\t\\tmerge(keys[k], target, source, options);\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn target;\\n\\t},\\n\\n\\t/**\\n\\t * Recursively deep copies `source` properties into `target` *only* if not defined in target.\\n\\t * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\\n\\t * @param {Object} target - The target object in which all sources are merged into.\\n\\t * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\\n\\t * @returns {Object} The `target` object.\\n\\t */\\n\\tmergeIf: function(target, source) {\\n\\t\\treturn helpers.merge(target, source, {merger: helpers._mergerIf});\\n\\t}\\n};\\n\\nmodule.exports = helpers;\\n\\n// DEPRECATIONS\\n\\n/**\\n * Provided for backward compatibility, use Chart.helpers.callback instead.\\n * @function Chart.helpers.callCallback\\n * @deprecated since version 2.6.0\\n * @todo remove at version 3\\n * @private\\n */\\nhelpers.callCallback = helpers.callback;\\n\\n/**\\n * Provided for backward compatibility, use Array.prototype.indexOf instead.\\n * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\\n * @function Chart.helpers.indexOf\\n * @deprecated since version 2.7.0\\n * @todo remove at version 3\\n * @private\\n */\\nhelpers.indexOf = function(array, item, fromIndex) {\\n\\treturn Array.prototype.indexOf.call(array, item, fromIndex);\\n};\\n\\n/**\\n * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\\n * @function Chart.helpers.getValueOrDefault\\n * @deprecated since version 2.7.0\\n * @todo remove at version 3\\n * @private\\n */\\nhelpers.getValueOrDefault = helpers.valueOrDefault;\\n\\n/**\\n * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\\n * @function Chart.helpers.getValueAtIndexOrDefault\\n * @deprecated since version 2.7.0\\n * @todo remove at version 3\\n * @private\\n */\\nhelpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\\n\\n},{}],43:[function(require,module,exports){\\n'use strict';\\n\\nvar helpers = require(42);\\n\\n/**\\n * Easing functions adapted from Robert Penner's easing equations.\\n * @namespace Chart.helpers.easingEffects\\n * @see http://www.robertpenner.com/easing/\\n */\\nvar effects = {\\n\\tlinear: function(t) {\\n\\t\\treturn t;\\n\\t},\\n\\n\\teaseInQuad: function(t) {\\n\\t\\treturn t * t;\\n\\t},\\n\\n\\teaseOutQuad: function(t) {\\n\\t\\treturn -t * (t - 2);\\n\\t},\\n\\n\\teaseInOutQuad: function(t) {\\n\\t\\tif ((t /= 0.5) < 1) {\\n\\t\\t\\treturn 0.5 * t * t;\\n\\t\\t}\\n\\t\\treturn -0.5 * ((--t) * (t - 2) - 1);\\n\\t},\\n\\n\\teaseInCubic: function(t) {\\n\\t\\treturn t * t * t;\\n\\t},\\n\\n\\teaseOutCubic: function(t) {\\n\\t\\treturn (t = t - 1) * t * t + 1;\\n\\t},\\n\\n\\teaseInOutCubic: function(t) {\\n\\t\\tif ((t /= 0.5) < 1) {\\n\\t\\t\\treturn 0.5 * t * t * t;\\n\\t\\t}\\n\\t\\treturn 0.5 * ((t -= 2) * t * t + 2);\\n\\t},\\n\\n\\teaseInQuart: function(t) {\\n\\t\\treturn t * t * t * t;\\n\\t},\\n\\n\\teaseOutQuart: function(t) {\\n\\t\\treturn -((t = t - 1) * t * t * t - 1);\\n\\t},\\n\\n\\teaseInOutQuart: function(t) {\\n\\t\\tif ((t /= 0.5) < 1) {\\n\\t\\t\\treturn 0.5 * t * t * t * t;\\n\\t\\t}\\n\\t\\treturn -0.5 * ((t -= 2) * t * t * t - 2);\\n\\t},\\n\\n\\teaseInQuint: function(t) {\\n\\t\\treturn t * t * t * t * t;\\n\\t},\\n\\n\\teaseOutQuint: function(t) {\\n\\t\\treturn (t = t - 1) * t * t * t * t + 1;\\n\\t},\\n\\n\\teaseInOutQuint: function(t) {\\n\\t\\tif ((t /= 0.5) < 1) {\\n\\t\\t\\treturn 0.5 * t * t * t * t * t;\\n\\t\\t}\\n\\t\\treturn 0.5 * ((t -= 2) * t * t * t * t + 2);\\n\\t},\\n\\n\\teaseInSine: function(t) {\\n\\t\\treturn -Math.cos(t * (Math.PI / 2)) + 1;\\n\\t},\\n\\n\\teaseOutSine: function(t) {\\n\\t\\treturn Math.sin(t * (Math.PI / 2));\\n\\t},\\n\\n\\teaseInOutSine: function(t) {\\n\\t\\treturn -0.5 * (Math.cos(Math.PI * t) - 1);\\n\\t},\\n\\n\\teaseInExpo: function(t) {\\n\\t\\treturn (t === 0) ? 0 : Math.pow(2, 10 * (t - 1));\\n\\t},\\n\\n\\teaseOutExpo: function(t) {\\n\\t\\treturn (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1;\\n\\t},\\n\\n\\teaseInOutExpo: function(t) {\\n\\t\\tif (t === 0) {\\n\\t\\t\\treturn 0;\\n\\t\\t}\\n\\t\\tif (t === 1) {\\n\\t\\t\\treturn 1;\\n\\t\\t}\\n\\t\\tif ((t /= 0.5) < 1) {\\n\\t\\t\\treturn 0.5 * Math.pow(2, 10 * (t - 1));\\n\\t\\t}\\n\\t\\treturn 0.5 * (-Math.pow(2, -10 * --t) + 2);\\n\\t},\\n\\n\\teaseInCirc: function(t) {\\n\\t\\tif (t >= 1) {\\n\\t\\t\\treturn t;\\n\\t\\t}\\n\\t\\treturn -(Math.sqrt(1 - t * t) - 1);\\n\\t},\\n\\n\\teaseOutCirc: function(t) {\\n\\t\\treturn Math.sqrt(1 - (t = t - 1) * t);\\n\\t},\\n\\n\\teaseInOutCirc: function(t) {\\n\\t\\tif ((t /= 0.5) < 1) {\\n\\t\\t\\treturn -0.5 * (Math.sqrt(1 - t * t) - 1);\\n\\t\\t}\\n\\t\\treturn 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\\n\\t},\\n\\n\\teaseInElastic: function(t) {\\n\\t\\tvar s = 1.70158;\\n\\t\\tvar p = 0;\\n\\t\\tvar a = 1;\\n\\t\\tif (t === 0) {\\n\\t\\t\\treturn 0;\\n\\t\\t}\\n\\t\\tif (t === 1) {\\n\\t\\t\\treturn 1;\\n\\t\\t}\\n\\t\\tif (!p) {\\n\\t\\t\\tp = 0.3;\\n\\t\\t}\\n\\t\\tif (a < 1) {\\n\\t\\t\\ta = 1;\\n\\t\\t\\ts = p / 4;\\n\\t\\t} else {\\n\\t\\t\\ts = p / (2 * Math.PI) * Math.asin(1 / a);\\n\\t\\t}\\n\\t\\treturn -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\\n\\t},\\n\\n\\teaseOutElastic: function(t) {\\n\\t\\tvar s = 1.70158;\\n\\t\\tvar p = 0;\\n\\t\\tvar a = 1;\\n\\t\\tif (t === 0) {\\n\\t\\t\\treturn 0;\\n\\t\\t}\\n\\t\\tif (t === 1) {\\n\\t\\t\\treturn 1;\\n\\t\\t}\\n\\t\\tif (!p) {\\n\\t\\t\\tp = 0.3;\\n\\t\\t}\\n\\t\\tif (a < 1) {\\n\\t\\t\\ta = 1;\\n\\t\\t\\ts = p / 4;\\n\\t\\t} else {\\n\\t\\t\\ts = p / (2 * Math.PI) * Math.asin(1 / a);\\n\\t\\t}\\n\\t\\treturn a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\\n\\t},\\n\\n\\teaseInOutElastic: function(t) {\\n\\t\\tvar s = 1.70158;\\n\\t\\tvar p = 0;\\n\\t\\tvar a = 1;\\n\\t\\tif (t === 0) {\\n\\t\\t\\treturn 0;\\n\\t\\t}\\n\\t\\tif ((t /= 0.5) === 2) {\\n\\t\\t\\treturn 1;\\n\\t\\t}\\n\\t\\tif (!p) {\\n\\t\\t\\tp = 0.45;\\n\\t\\t}\\n\\t\\tif (a < 1) {\\n\\t\\t\\ta = 1;\\n\\t\\t\\ts = p / 4;\\n\\t\\t} else {\\n\\t\\t\\ts = p / (2 * Math.PI) * Math.asin(1 / a);\\n\\t\\t}\\n\\t\\tif (t < 1) {\\n\\t\\t\\treturn -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\\n\\t\\t}\\n\\t\\treturn a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\\n\\t},\\n\\teaseInBack: function(t) {\\n\\t\\tvar s = 1.70158;\\n\\t\\treturn t * t * ((s + 1) * t - s);\\n\\t},\\n\\n\\teaseOutBack: function(t) {\\n\\t\\tvar s = 1.70158;\\n\\t\\treturn (t = t - 1) * t * ((s + 1) * t + s) + 1;\\n\\t},\\n\\n\\teaseInOutBack: function(t) {\\n\\t\\tvar s = 1.70158;\\n\\t\\tif ((t /= 0.5) < 1) {\\n\\t\\t\\treturn 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\\n\\t\\t}\\n\\t\\treturn 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\\n\\t},\\n\\n\\teaseInBounce: function(t) {\\n\\t\\treturn 1 - effects.easeOutBounce(1 - t);\\n\\t},\\n\\n\\teaseOutBounce: function(t) {\\n\\t\\tif (t < (1 / 2.75)) {\\n\\t\\t\\treturn 7.5625 * t * t;\\n\\t\\t}\\n\\t\\tif (t < (2 / 2.75)) {\\n\\t\\t\\treturn 7.5625 * (t -= (1.5 / 2.75)) * t + 0.75;\\n\\t\\t}\\n\\t\\tif (t < (2.5 / 2.75)) {\\n\\t\\t\\treturn 7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375;\\n\\t\\t}\\n\\t\\treturn 7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375;\\n\\t},\\n\\n\\teaseInOutBounce: function(t) {\\n\\t\\tif (t < 0.5) {\\n\\t\\t\\treturn effects.easeInBounce(t * 2) * 0.5;\\n\\t\\t}\\n\\t\\treturn effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\\n\\t}\\n};\\n\\nmodule.exports = {\\n\\teffects: effects\\n};\\n\\n// DEPRECATIONS\\n\\n/**\\n * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\\n * @function Chart.helpers.easingEffects\\n * @deprecated since version 2.7.0\\n * @todo remove at version 3\\n * @private\\n */\\nhelpers.easingEffects = effects;\\n\\n},{\\\"42\\\":42}],44:[function(require,module,exports){\\n'use strict';\\n\\nvar helpers = require(42);\\n\\n/**\\n * @alias Chart.helpers.options\\n * @namespace\\n */\\nmodule.exports = {\\n\\t/**\\n\\t * Converts the given line height `value` in pixels for a specific font `size`.\\n\\t * @param {Number|String} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\\n\\t * @param {Number} size - The font size (in pixels) used to resolve relative `value`.\\n\\t * @returns {Number} The effective line height in pixels (size * 1.2 if value is invalid).\\n\\t * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\\n\\t * @since 2.7.0\\n\\t */\\n\\ttoLineHeight: function(value, size) {\\n\\t\\tvar matches = ('' + value).match(/^(normal|(\\\\d+(?:\\\\.\\\\d+)?)(px|em|%)?)$/);\\n\\t\\tif (!matches || matches[1] === 'normal') {\\n\\t\\t\\treturn size * 1.2;\\n\\t\\t}\\n\\n\\t\\tvalue = +matches[2];\\n\\n\\t\\tswitch (matches[3]) {\\n\\t\\tcase 'px':\\n\\t\\t\\treturn value;\\n\\t\\tcase '%':\\n\\t\\t\\tvalue /= 100;\\n\\t\\t\\tbreak;\\n\\t\\tdefault:\\n\\t\\t\\tbreak;\\n\\t\\t}\\n\\n\\t\\treturn size * value;\\n\\t},\\n\\n\\t/**\\n\\t * Converts the given value into a padding object with pre-computed width/height.\\n\\t * @param {Number|Object} value - If a number, set the value to all TRBL component,\\n\\t *  else, if and object, use defined properties and sets undefined ones to 0.\\n\\t * @returns {Object} The padding values (top, right, bottom, left, width, height)\\n\\t * @since 2.7.0\\n\\t */\\n\\ttoPadding: function(value) {\\n\\t\\tvar t, r, b, l;\\n\\n\\t\\tif (helpers.isObject(value)) {\\n\\t\\t\\tt = +value.top || 0;\\n\\t\\t\\tr = +value.right || 0;\\n\\t\\t\\tb = +value.bottom || 0;\\n\\t\\t\\tl = +value.left || 0;\\n\\t\\t} else {\\n\\t\\t\\tt = r = b = l = +value || 0;\\n\\t\\t}\\n\\n\\t\\treturn {\\n\\t\\t\\ttop: t,\\n\\t\\t\\tright: r,\\n\\t\\t\\tbottom: b,\\n\\t\\t\\tleft: l,\\n\\t\\t\\theight: t + b,\\n\\t\\t\\twidth: l + r\\n\\t\\t};\\n\\t},\\n\\n\\t/**\\n\\t * Evaluates the given `inputs` sequentially and returns the first defined value.\\n\\t * @param {Array[]} inputs - An array of values, falling back to the last value.\\n\\t * @param {Object} [context] - If defined and the current value is a function, the value\\n\\t * is called with `context` as first argument and the result becomes the new input.\\n\\t * @param {Number} [index] - If defined and the current value is an array, the value\\n\\t * at `index` become the new input.\\n\\t * @since 2.7.0\\n\\t */\\n\\tresolve: function(inputs, context, index) {\\n\\t\\tvar i, ilen, value;\\n\\n\\t\\tfor (i = 0, ilen = inputs.length; i < ilen; ++i) {\\n\\t\\t\\tvalue = inputs[i];\\n\\t\\t\\tif (value === undefined) {\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\t\\t\\tif (context !== undefined && typeof value === 'function') {\\n\\t\\t\\t\\tvalue = value(context);\\n\\t\\t\\t}\\n\\t\\t\\tif (index !== undefined && helpers.isArray(value)) {\\n\\t\\t\\t\\tvalue = value[index];\\n\\t\\t\\t}\\n\\t\\t\\tif (value !== undefined) {\\n\\t\\t\\t\\treturn value;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n};\\n\\n},{\\\"42\\\":42}],45:[function(require,module,exports){\\n'use strict';\\n\\nmodule.exports = require(42);\\nmodule.exports.easing = require(43);\\nmodule.exports.canvas = require(41);\\nmodule.exports.options = require(44);\\n\\n},{\\\"41\\\":41,\\\"42\\\":42,\\\"43\\\":43,\\\"44\\\":44}],46:[function(require,module,exports){\\n/**\\n * Platform fallback implementation (minimal).\\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\\n */\\n\\nmodule.exports = {\\n\\tacquireContext: function(item) {\\n\\t\\tif (item && item.canvas) {\\n\\t\\t\\t// Support for any object associated to a canvas (including a context2d)\\n\\t\\t\\titem = item.canvas;\\n\\t\\t}\\n\\n\\t\\treturn item && item.getContext('2d') || null;\\n\\t}\\n};\\n\\n},{}],47:[function(require,module,exports){\\n/**\\n * Chart.Platform implementation for targeting a web browser\\n */\\n\\n'use strict';\\n\\nvar helpers = require(45);\\n\\nvar EXPANDO_KEY = '$chartjs';\\nvar CSS_PREFIX = 'chartjs-';\\nvar CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\\nvar CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\\nvar ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\\n\\n/**\\n * DOM event types -> Chart.js event types.\\n * Note: only events with different types are mapped.\\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\\n */\\nvar EVENT_TYPES = {\\n\\ttouchstart: 'mousedown',\\n\\ttouchmove: 'mousemove',\\n\\ttouchend: 'mouseup',\\n\\tpointerenter: 'mouseenter',\\n\\tpointerdown: 'mousedown',\\n\\tpointermove: 'mousemove',\\n\\tpointerup: 'mouseup',\\n\\tpointerleave: 'mouseout',\\n\\tpointerout: 'mouseout'\\n};\\n\\n/**\\n * The \\\"used\\\" size is the final value of a dimension property after all calculations have\\n * been performed. This method uses the computed style of `element` but returns undefined\\n * if the computed style is not expressed in pixels. That can happen in some cases where\\n * `element` has a size relative to its parent and this last one is not yet displayed,\\n * for example because of `display: none` on a parent node.\\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\\n * @returns {Number} Size in pixels or undefined if unknown.\\n */\\nfunction readUsedSize(element, property) {\\n\\tvar value = helpers.getStyle(element, property);\\n\\tvar matches = value && value.match(/^(\\\\d+)(\\\\.\\\\d+)?px$/);\\n\\treturn matches ? Number(matches[1]) : undefined;\\n}\\n\\n/**\\n * Initializes the canvas style and render size without modifying the canvas display size,\\n * since responsiveness is handled by the controller.resize() method. The config is used\\n * to determine the aspect ratio to apply in case no explicit height has been specified.\\n */\\nfunction initCanvas(canvas, config) {\\n\\tvar style = canvas.style;\\n\\n\\t// NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\\n\\t// returns null or '' if no explicit value has been set to the canvas attribute.\\n\\tvar renderHeight = canvas.getAttribute('height');\\n\\tvar renderWidth = canvas.getAttribute('width');\\n\\n\\t// Chart.js modifies some canvas values that we want to restore on destroy\\n\\tcanvas[EXPANDO_KEY] = {\\n\\t\\tinitial: {\\n\\t\\t\\theight: renderHeight,\\n\\t\\t\\twidth: renderWidth,\\n\\t\\t\\tstyle: {\\n\\t\\t\\t\\tdisplay: style.display,\\n\\t\\t\\t\\theight: style.height,\\n\\t\\t\\t\\twidth: style.width\\n\\t\\t\\t}\\n\\t\\t}\\n\\t};\\n\\n\\t// Force canvas to display as block to avoid extra space caused by inline\\n\\t// elements, which would interfere with the responsive resize process.\\n\\t// https://github.com/chartjs/Chart.js/issues/2538\\n\\tstyle.display = style.display || 'block';\\n\\n\\tif (renderWidth === null || renderWidth === '') {\\n\\t\\tvar displayWidth = readUsedSize(canvas, 'width');\\n\\t\\tif (displayWidth !== undefined) {\\n\\t\\t\\tcanvas.width = displayWidth;\\n\\t\\t}\\n\\t}\\n\\n\\tif (renderHeight === null || renderHeight === '') {\\n\\t\\tif (canvas.style.height === '') {\\n\\t\\t\\t// If no explicit render height and style height, let's apply the aspect ratio,\\n\\t\\t\\t// which one can be specified by the user but also by charts as default option\\n\\t\\t\\t// (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\\n\\t\\t\\tcanvas.height = canvas.width / (config.options.aspectRatio || 2);\\n\\t\\t} else {\\n\\t\\t\\tvar displayHeight = readUsedSize(canvas, 'height');\\n\\t\\t\\tif (displayWidth !== undefined) {\\n\\t\\t\\t\\tcanvas.height = displayHeight;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\treturn canvas;\\n}\\n\\n/**\\n * Detects support for options object argument in addEventListener.\\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\\n * @private\\n */\\nvar supportsEventListenerOptions = (function() {\\n\\tvar supports = false;\\n\\ttry {\\n\\t\\tvar options = Object.defineProperty({}, 'passive', {\\n\\t\\t\\tget: function() {\\n\\t\\t\\t\\tsupports = true;\\n\\t\\t\\t}\\n\\t\\t});\\n\\t\\twindow.addEventListener('e', null, options);\\n\\t} catch (e) {\\n\\t\\t// continue regardless of error\\n\\t}\\n\\treturn supports;\\n}());\\n\\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\\n// https://github.com/chartjs/Chart.js/issues/4287\\nvar eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\\n\\nfunction addEventListener(node, type, listener) {\\n\\tnode.addEventListener(type, listener, eventListenerOptions);\\n}\\n\\nfunction removeEventListener(node, type, listener) {\\n\\tnode.removeEventListener(type, listener, eventListenerOptions);\\n}\\n\\nfunction createEvent(type, chart, x, y, nativeEvent) {\\n\\treturn {\\n\\t\\ttype: type,\\n\\t\\tchart: chart,\\n\\t\\tnative: nativeEvent || null,\\n\\t\\tx: x !== undefined ? x : null,\\n\\t\\ty: y !== undefined ? y : null,\\n\\t};\\n}\\n\\nfunction fromNativeEvent(event, chart) {\\n\\tvar type = EVENT_TYPES[event.type] || event.type;\\n\\tvar pos = helpers.getRelativePosition(event, chart);\\n\\treturn createEvent(type, chart, pos.x, pos.y, event);\\n}\\n\\nfunction throttled(fn, thisArg) {\\n\\tvar ticking = false;\\n\\tvar args = [];\\n\\n\\treturn function() {\\n\\t\\targs = Array.prototype.slice.call(arguments);\\n\\t\\tthisArg = thisArg || this;\\n\\n\\t\\tif (!ticking) {\\n\\t\\t\\tticking = true;\\n\\t\\t\\thelpers.requestAnimFrame.call(window, function() {\\n\\t\\t\\t\\tticking = false;\\n\\t\\t\\t\\tfn.apply(thisArg, args);\\n\\t\\t\\t});\\n\\t\\t}\\n\\t};\\n}\\n\\n// Implementation based on https://github.com/marcj/css-element-queries\\nfunction createResizer(handler) {\\n\\tvar resizer = document.createElement('div');\\n\\tvar cls = CSS_PREFIX + 'size-monitor';\\n\\tvar maxSize = 1000000;\\n\\tvar style =\\n\\t\\t'position:absolute;' +\\n\\t\\t'left:0;' +\\n\\t\\t'top:0;' +\\n\\t\\t'right:0;' +\\n\\t\\t'bottom:0;' +\\n\\t\\t'overflow:hidden;' +\\n\\t\\t'pointer-events:none;' +\\n\\t\\t'visibility:hidden;' +\\n\\t\\t'z-index:-1;';\\n\\n\\tresizer.style.cssText = style;\\n\\tresizer.className = cls;\\n\\tresizer.innerHTML =\\n\\t\\t'<div class=\\\"' + cls + '-expand\\\" style=\\\"' + style + '\\\">' +\\n\\t\\t\\t'<div style=\\\"' +\\n\\t\\t\\t\\t'position:absolute;' +\\n\\t\\t\\t\\t'width:' + maxSize + 'px;' +\\n\\t\\t\\t\\t'height:' + maxSize + 'px;' +\\n\\t\\t\\t\\t'left:0;' +\\n\\t\\t\\t\\t'top:0\\\">' +\\n\\t\\t\\t'</div>' +\\n\\t\\t'</div>' +\\n\\t\\t'<div class=\\\"' + cls + '-shrink\\\" style=\\\"' + style + '\\\">' +\\n\\t\\t\\t'<div style=\\\"' +\\n\\t\\t\\t\\t'position:absolute;' +\\n\\t\\t\\t\\t'width:200%;' +\\n\\t\\t\\t\\t'height:200%;' +\\n\\t\\t\\t\\t'left:0; ' +\\n\\t\\t\\t\\t'top:0\\\">' +\\n\\t\\t\\t'</div>' +\\n\\t\\t'</div>';\\n\\n\\tvar expand = resizer.childNodes[0];\\n\\tvar shrink = resizer.childNodes[1];\\n\\n\\tresizer._reset = function() {\\n\\t\\texpand.scrollLeft = maxSize;\\n\\t\\texpand.scrollTop = maxSize;\\n\\t\\tshrink.scrollLeft = maxSize;\\n\\t\\tshrink.scrollTop = maxSize;\\n\\t};\\n\\tvar onScroll = function() {\\n\\t\\tresizer._reset();\\n\\t\\thandler();\\n\\t};\\n\\n\\taddEventListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\\n\\taddEventListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\\n\\n\\treturn resizer;\\n}\\n\\n// https://davidwalsh.name/detect-node-insertion\\nfunction watchForRender(node, handler) {\\n\\tvar expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\\n\\tvar proxy = expando.renderProxy = function(e) {\\n\\t\\tif (e.animationName === CSS_RENDER_ANIMATION) {\\n\\t\\t\\thandler();\\n\\t\\t}\\n\\t};\\n\\n\\thelpers.each(ANIMATION_START_EVENTS, function(type) {\\n\\t\\taddEventListener(node, type, proxy);\\n\\t});\\n\\n\\tnode.classList.add(CSS_RENDER_MONITOR);\\n}\\n\\nfunction unwatchForRender(node) {\\n\\tvar expando = node[EXPANDO_KEY] || {};\\n\\tvar proxy = expando.renderProxy;\\n\\n\\tif (proxy) {\\n\\t\\thelpers.each(ANIMATION_START_EVENTS, function(type) {\\n\\t\\t\\tremoveEventListener(node, type, proxy);\\n\\t\\t});\\n\\n\\t\\tdelete expando.renderProxy;\\n\\t}\\n\\n\\tnode.classList.remove(CSS_RENDER_MONITOR);\\n}\\n\\nfunction addResizeListener(node, listener, chart) {\\n\\tvar expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\\n\\n\\t// Let's keep track of this added resizer and thus avoid DOM query when removing it.\\n\\tvar resizer = expando.resizer = createResizer(throttled(function() {\\n\\t\\tif (expando.resizer) {\\n\\t\\t\\treturn listener(createEvent('resize', chart));\\n\\t\\t}\\n\\t}));\\n\\n\\t// The resizer needs to be attached to the node parent, so we first need to be\\n\\t// sure that `node` is attached to the DOM before injecting the resizer element.\\n\\twatchForRender(node, function() {\\n\\t\\tif (expando.resizer) {\\n\\t\\t\\tvar container = node.parentNode;\\n\\t\\t\\tif (container && container !== resizer.parentNode) {\\n\\t\\t\\t\\tcontainer.insertBefore(resizer, container.firstChild);\\n\\t\\t\\t}\\n\\n\\t\\t\\t// The container size might have changed, let's reset the resizer state.\\n\\t\\t\\tresizer._reset();\\n\\t\\t}\\n\\t});\\n}\\n\\nfunction removeResizeListener(node) {\\n\\tvar expando = node[EXPANDO_KEY] || {};\\n\\tvar resizer = expando.resizer;\\n\\n\\tdelete expando.resizer;\\n\\tunwatchForRender(node);\\n\\n\\tif (resizer && resizer.parentNode) {\\n\\t\\tresizer.parentNode.removeChild(resizer);\\n\\t}\\n}\\n\\nfunction injectCSS(platform, css) {\\n\\t// http://stackoverflow.com/q/3922139\\n\\tvar style = platform._style || document.createElement('style');\\n\\tif (!platform._style) {\\n\\t\\tplatform._style = style;\\n\\t\\tcss = '/* Chart.js */\\\\n' + css;\\n\\t\\tstyle.setAttribute('type', 'text/css');\\n\\t\\tdocument.getElementsByTagName('head')[0].appendChild(style);\\n\\t}\\n\\n\\tstyle.appendChild(document.createTextNode(css));\\n}\\n\\nmodule.exports = {\\n\\t/**\\n\\t * This property holds whether this platform is enabled for the current environment.\\n\\t * Currently used by platform.js to select the proper implementation.\\n\\t * @private\\n\\t */\\n\\t_enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\\n\\n\\tinitialize: function() {\\n\\t\\tvar keyframes = 'from{opacity:0.99}to{opacity:1}';\\n\\n\\t\\tinjectCSS(this,\\n\\t\\t\\t// DOM rendering detection\\n\\t\\t\\t// https://davidwalsh.name/detect-node-insertion\\n\\t\\t\\t'@-webkit-keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' +\\n\\t\\t\\t'@keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' +\\n\\t\\t\\t'.' + CSS_RENDER_MONITOR + '{' +\\n\\t\\t\\t\\t'-webkit-animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' +\\n\\t\\t\\t\\t'animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' +\\n\\t\\t\\t'}'\\n\\t\\t);\\n\\t},\\n\\n\\tacquireContext: function(item, config) {\\n\\t\\tif (typeof item === 'string') {\\n\\t\\t\\titem = document.getElementById(item);\\n\\t\\t} else if (item.length) {\\n\\t\\t\\t// Support for array based queries (such as jQuery)\\n\\t\\t\\titem = item[0];\\n\\t\\t}\\n\\n\\t\\tif (item && item.canvas) {\\n\\t\\t\\t// Support for any object associated to a canvas (including a context2d)\\n\\t\\t\\titem = item.canvas;\\n\\t\\t}\\n\\n\\t\\t// To prevent canvas fingerprinting, some add-ons undefine the getContext\\n\\t\\t// method, for example: https://github.com/kkapsner/CanvasBlocker\\n\\t\\t// https://github.com/chartjs/Chart.js/issues/2807\\n\\t\\tvar context = item && item.getContext && item.getContext('2d');\\n\\n\\t\\t// `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\\n\\t\\t// inside an iframe or when running in a protected environment. We could guess the\\n\\t\\t// types from their toString() value but let's keep things flexible and assume it's\\n\\t\\t// a sufficient condition if the item has a context2D which has item as `canvas`.\\n\\t\\t// https://github.com/chartjs/Chart.js/issues/3887\\n\\t\\t// https://github.com/chartjs/Chart.js/issues/4102\\n\\t\\t// https://github.com/chartjs/Chart.js/issues/4152\\n\\t\\tif (context && context.canvas === item) {\\n\\t\\t\\tinitCanvas(item, config);\\n\\t\\t\\treturn context;\\n\\t\\t}\\n\\n\\t\\treturn null;\\n\\t},\\n\\n\\treleaseContext: function(context) {\\n\\t\\tvar canvas = context.canvas;\\n\\t\\tif (!canvas[EXPANDO_KEY]) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tvar initial = canvas[EXPANDO_KEY].initial;\\n\\t\\t['height', 'width'].forEach(function(prop) {\\n\\t\\t\\tvar value = initial[prop];\\n\\t\\t\\tif (helpers.isNullOrUndef(value)) {\\n\\t\\t\\t\\tcanvas.removeAttribute(prop);\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tcanvas.setAttribute(prop, value);\\n\\t\\t\\t}\\n\\t\\t});\\n\\n\\t\\thelpers.each(initial.style || {}, function(value, key) {\\n\\t\\t\\tcanvas.style[key] = value;\\n\\t\\t});\\n\\n\\t\\t// The canvas render size might have been changed (and thus the state stack discarded),\\n\\t\\t// we can't use save() and restore() to restore the initial state. So make sure that at\\n\\t\\t// least the canvas context is reset to the default state by setting the canvas width.\\n\\t\\t// https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\\n\\t\\tcanvas.width = canvas.width;\\n\\n\\t\\tdelete canvas[EXPANDO_KEY];\\n\\t},\\n\\n\\taddEventListener: function(chart, type, listener) {\\n\\t\\tvar canvas = chart.canvas;\\n\\t\\tif (type === 'resize') {\\n\\t\\t\\t// Note: the resize event is not supported on all browsers.\\n\\t\\t\\taddResizeListener(canvas, listener, chart);\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tvar expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\\n\\t\\tvar proxies = expando.proxies || (expando.proxies = {});\\n\\t\\tvar proxy = proxies[chart.id + '_' + type] = function(event) {\\n\\t\\t\\tlistener(fromNativeEvent(event, chart));\\n\\t\\t};\\n\\n\\t\\taddEventListener(canvas, type, proxy);\\n\\t},\\n\\n\\tremoveEventListener: function(chart, type, listener) {\\n\\t\\tvar canvas = chart.canvas;\\n\\t\\tif (type === 'resize') {\\n\\t\\t\\t// Note: the resize event is not supported on all browsers.\\n\\t\\t\\tremoveResizeListener(canvas, listener);\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tvar expando = listener[EXPANDO_KEY] || {};\\n\\t\\tvar proxies = expando.proxies || {};\\n\\t\\tvar proxy = proxies[chart.id + '_' + type];\\n\\t\\tif (!proxy) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tremoveEventListener(canvas, type, proxy);\\n\\t}\\n};\\n\\n// DEPRECATIONS\\n\\n/**\\n * Provided for backward compatibility, use EventTarget.addEventListener instead.\\n * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\\n * @function Chart.helpers.addEvent\\n * @deprecated since version 2.7.0\\n * @todo remove at version 3\\n * @private\\n */\\nhelpers.addEvent = addEventListener;\\n\\n/**\\n * Provided for backward compatibility, use EventTarget.removeEventListener instead.\\n * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\\n * @function Chart.helpers.removeEvent\\n * @deprecated since version 2.7.0\\n * @todo remove at version 3\\n * @private\\n */\\nhelpers.removeEvent = removeEventListener;\\n\\n},{\\\"45\\\":45}],48:[function(require,module,exports){\\n'use strict';\\n\\nvar helpers = require(45);\\nvar basic = require(46);\\nvar dom = require(47);\\n\\n// @TODO Make possible to select another platform at build time.\\nvar implementation = dom._enabled ? dom : basic;\\n\\n/**\\n * @namespace Chart.platform\\n * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\\n * @since 2.4.0\\n */\\nmodule.exports = helpers.extend({\\n\\t/**\\n\\t * @since 2.7.0\\n\\t */\\n\\tinitialize: function() {},\\n\\n\\t/**\\n\\t * Called at chart construction time, returns a context2d instance implementing\\n\\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\\n\\t * @param {*} item - The native item from which to acquire context (platform specific)\\n\\t * @param {Object} options - The chart options\\n\\t * @returns {CanvasRenderingContext2D} context2d instance\\n\\t */\\n\\tacquireContext: function() {},\\n\\n\\t/**\\n\\t * Called at chart destruction time, releases any resources associated to the context\\n\\t * previously returned by the acquireContext() method.\\n\\t * @param {CanvasRenderingContext2D} context - The context2d instance\\n\\t * @returns {Boolean} true if the method succeeded, else false\\n\\t */\\n\\treleaseContext: function() {},\\n\\n\\t/**\\n\\t * Registers the specified listener on the given chart.\\n\\t * @param {Chart} chart - Chart from which to listen for event\\n\\t * @param {String} type - The ({@link IEvent}) type to listen for\\n\\t * @param {Function} listener - Receives a notification (an object that implements\\n\\t * the {@link IEvent} interface) when an event of the specified type occurs.\\n\\t */\\n\\taddEventListener: function() {},\\n\\n\\t/**\\n\\t * Removes the specified listener previously registered with addEventListener.\\n\\t * @param {Chart} chart -Chart from which to remove the listener\\n\\t * @param {String} type - The ({@link IEvent}) type to remove\\n\\t * @param {Function} listener - The listener function to remove from the event target.\\n\\t */\\n\\tremoveEventListener: function() {}\\n\\n}, implementation);\\n\\n/**\\n * @interface IPlatform\\n * Allows abstracting platform dependencies away from the chart\\n * @borrows Chart.platform.acquireContext as acquireContext\\n * @borrows Chart.platform.releaseContext as releaseContext\\n * @borrows Chart.platform.addEventListener as addEventListener\\n * @borrows Chart.platform.removeEventListener as removeEventListener\\n */\\n\\n/**\\n * @interface IEvent\\n * @prop {String} type - The event type name, possible values are:\\n * 'contextmenu', 'mouseenter', 'mousedown', 'mousemove', 'mouseup', 'mouseout',\\n * 'click', 'dblclick', 'keydown', 'keypress', 'keyup' and 'resize'\\n * @prop {*} native - The original native event (null for emulated events, e.g. 'resize')\\n * @prop {Number} x - The mouse x position, relative to the canvas (null for incompatible events)\\n * @prop {Number} y - The mouse y position, relative to the canvas (null for incompatible events)\\n */\\n\\n},{\\\"45\\\":45,\\\"46\\\":46,\\\"47\\\":47}],49:[function(require,module,exports){\\n/**\\n * Plugin based on discussion from the following Chart.js issues:\\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\\n */\\n\\n'use strict';\\n\\nvar defaults = require(25);\\nvar elements = require(40);\\nvar helpers = require(45);\\n\\ndefaults._set('global', {\\n\\tplugins: {\\n\\t\\tfiller: {\\n\\t\\t\\tpropagate: true\\n\\t\\t}\\n\\t}\\n});\\n\\nmodule.exports = function() {\\n\\n\\tvar mappers = {\\n\\t\\tdataset: function(source) {\\n\\t\\t\\tvar index = source.fill;\\n\\t\\t\\tvar chart = source.chart;\\n\\t\\t\\tvar meta = chart.getDatasetMeta(index);\\n\\t\\t\\tvar visible = meta && chart.isDatasetVisible(index);\\n\\t\\t\\tvar points = (visible && meta.dataset._children) || [];\\n\\t\\t\\tvar length = points.length || 0;\\n\\n\\t\\t\\treturn !length ? null : function(point, i) {\\n\\t\\t\\t\\treturn (i < length && points[i]._view) || null;\\n\\t\\t\\t};\\n\\t\\t},\\n\\n\\t\\tboundary: function(source) {\\n\\t\\t\\tvar boundary = source.boundary;\\n\\t\\t\\tvar x = boundary ? boundary.x : null;\\n\\t\\t\\tvar y = boundary ? boundary.y : null;\\n\\n\\t\\t\\treturn function(point) {\\n\\t\\t\\t\\treturn {\\n\\t\\t\\t\\t\\tx: x === null ? point.x : x,\\n\\t\\t\\t\\t\\ty: y === null ? point.y : y,\\n\\t\\t\\t\\t};\\n\\t\\t\\t};\\n\\t\\t}\\n\\t};\\n\\n\\t// @todo if (fill[0] === '#')\\n\\tfunction decodeFill(el, index, count) {\\n\\t\\tvar model = el._model || {};\\n\\t\\tvar fill = model.fill;\\n\\t\\tvar target;\\n\\n\\t\\tif (fill === undefined) {\\n\\t\\t\\tfill = !!model.backgroundColor;\\n\\t\\t}\\n\\n\\t\\tif (fill === false || fill === null) {\\n\\t\\t\\treturn false;\\n\\t\\t}\\n\\n\\t\\tif (fill === true) {\\n\\t\\t\\treturn 'origin';\\n\\t\\t}\\n\\n\\t\\ttarget = parseFloat(fill, 10);\\n\\t\\tif (isFinite(target) && Math.floor(target) === target) {\\n\\t\\t\\tif (fill[0] === '-' || fill[0] === '+') {\\n\\t\\t\\t\\ttarget = index + target;\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (target === index || target < 0 || target >= count) {\\n\\t\\t\\t\\treturn false;\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn target;\\n\\t\\t}\\n\\n\\t\\tswitch (fill) {\\n\\t\\t// compatibility\\n\\t\\tcase 'bottom':\\n\\t\\t\\treturn 'start';\\n\\t\\tcase 'top':\\n\\t\\t\\treturn 'end';\\n\\t\\tcase 'zero':\\n\\t\\t\\treturn 'origin';\\n\\t\\t// supported boundaries\\n\\t\\tcase 'origin':\\n\\t\\tcase 'start':\\n\\t\\tcase 'end':\\n\\t\\t\\treturn fill;\\n\\t\\t// invalid fill values\\n\\t\\tdefault:\\n\\t\\t\\treturn false;\\n\\t\\t}\\n\\t}\\n\\n\\tfunction computeBoundary(source) {\\n\\t\\tvar model = source.el._model || {};\\n\\t\\tvar scale = source.el._scale || {};\\n\\t\\tvar fill = source.fill;\\n\\t\\tvar target = null;\\n\\t\\tvar horizontal;\\n\\n\\t\\tif (isFinite(fill)) {\\n\\t\\t\\treturn null;\\n\\t\\t}\\n\\n\\t\\t// Backward compatibility: until v3, we still need to support boundary values set on\\n\\t\\t// the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\\n\\t\\t// controllers might still use it (e.g. the Smith chart).\\n\\n\\t\\tif (fill === 'start') {\\n\\t\\t\\ttarget = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\\n\\t\\t} else if (fill === 'end') {\\n\\t\\t\\ttarget = model.scaleTop === undefined ? scale.top : model.scaleTop;\\n\\t\\t} else if (model.scaleZero !== undefined) {\\n\\t\\t\\ttarget = model.scaleZero;\\n\\t\\t} else if (scale.getBasePosition) {\\n\\t\\t\\ttarget = scale.getBasePosition();\\n\\t\\t} else if (scale.getBasePixel) {\\n\\t\\t\\ttarget = scale.getBasePixel();\\n\\t\\t}\\n\\n\\t\\tif (target !== undefined && target !== null) {\\n\\t\\t\\tif (target.x !== undefined && target.y !== undefined) {\\n\\t\\t\\t\\treturn target;\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (typeof target === 'number' && isFinite(target)) {\\n\\t\\t\\t\\thorizontal = scale.isHorizontal();\\n\\t\\t\\t\\treturn {\\n\\t\\t\\t\\t\\tx: horizontal ? target : null,\\n\\t\\t\\t\\t\\ty: horizontal ? null : target\\n\\t\\t\\t\\t};\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn null;\\n\\t}\\n\\n\\tfunction resolveTarget(sources, index, propagate) {\\n\\t\\tvar source = sources[index];\\n\\t\\tvar fill = source.fill;\\n\\t\\tvar visited = [index];\\n\\t\\tvar target;\\n\\n\\t\\tif (!propagate) {\\n\\t\\t\\treturn fill;\\n\\t\\t}\\n\\n\\t\\twhile (fill !== false && visited.indexOf(fill) === -1) {\\n\\t\\t\\tif (!isFinite(fill)) {\\n\\t\\t\\t\\treturn fill;\\n\\t\\t\\t}\\n\\n\\t\\t\\ttarget = sources[fill];\\n\\t\\t\\tif (!target) {\\n\\t\\t\\t\\treturn false;\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (target.visible) {\\n\\t\\t\\t\\treturn fill;\\n\\t\\t\\t}\\n\\n\\t\\t\\tvisited.push(fill);\\n\\t\\t\\tfill = target.fill;\\n\\t\\t}\\n\\n\\t\\treturn false;\\n\\t}\\n\\n\\tfunction createMapper(source) {\\n\\t\\tvar fill = source.fill;\\n\\t\\tvar type = 'dataset';\\n\\n\\t\\tif (fill === false) {\\n\\t\\t\\treturn null;\\n\\t\\t}\\n\\n\\t\\tif (!isFinite(fill)) {\\n\\t\\t\\ttype = 'boundary';\\n\\t\\t}\\n\\n\\t\\treturn mappers[type](source);\\n\\t}\\n\\n\\tfunction isDrawable(point) {\\n\\t\\treturn point && !point.skip;\\n\\t}\\n\\n\\tfunction drawArea(ctx, curve0, curve1, len0, len1) {\\n\\t\\tvar i;\\n\\n\\t\\tif (!len0 || !len1) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\t// building first area curve (normal)\\n\\t\\tctx.moveTo(curve0[0].x, curve0[0].y);\\n\\t\\tfor (i = 1; i < len0; ++i) {\\n\\t\\t\\thelpers.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\\n\\t\\t}\\n\\n\\t\\t// joining the two area curves\\n\\t\\tctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y);\\n\\n\\t\\t// building opposite area curve (reverse)\\n\\t\\tfor (i = len1 - 1; i > 0; --i) {\\n\\t\\t\\thelpers.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\\n\\t\\t}\\n\\t}\\n\\n\\tfunction doFill(ctx, points, mapper, view, color, loop) {\\n\\t\\tvar count = points.length;\\n\\t\\tvar span = view.spanGaps;\\n\\t\\tvar curve0 = [];\\n\\t\\tvar curve1 = [];\\n\\t\\tvar len0 = 0;\\n\\t\\tvar len1 = 0;\\n\\t\\tvar i, ilen, index, p0, p1, d0, d1;\\n\\n\\t\\tctx.beginPath();\\n\\n\\t\\tfor (i = 0, ilen = (count + !!loop); i < ilen; ++i) {\\n\\t\\t\\tindex = i % count;\\n\\t\\t\\tp0 = points[index]._view;\\n\\t\\t\\tp1 = mapper(p0, index, view);\\n\\t\\t\\td0 = isDrawable(p0);\\n\\t\\t\\td1 = isDrawable(p1);\\n\\n\\t\\t\\tif (d0 && d1) {\\n\\t\\t\\t\\tlen0 = curve0.push(p0);\\n\\t\\t\\t\\tlen1 = curve1.push(p1);\\n\\t\\t\\t} else if (len0 && len1) {\\n\\t\\t\\t\\tif (!span) {\\n\\t\\t\\t\\t\\tdrawArea(ctx, curve0, curve1, len0, len1);\\n\\t\\t\\t\\t\\tlen0 = len1 = 0;\\n\\t\\t\\t\\t\\tcurve0 = [];\\n\\t\\t\\t\\t\\tcurve1 = [];\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tif (d0) {\\n\\t\\t\\t\\t\\t\\tcurve0.push(p0);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\tif (d1) {\\n\\t\\t\\t\\t\\t\\tcurve1.push(p1);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tdrawArea(ctx, curve0, curve1, len0, len1);\\n\\n\\t\\tctx.closePath();\\n\\t\\tctx.fillStyle = color;\\n\\t\\tctx.fill();\\n\\t}\\n\\n\\treturn {\\n\\t\\tid: 'filler',\\n\\n\\t\\tafterDatasetsUpdate: function(chart, options) {\\n\\t\\t\\tvar count = (chart.data.datasets || []).length;\\n\\t\\t\\tvar propagate = options.propagate;\\n\\t\\t\\tvar sources = [];\\n\\t\\t\\tvar meta, i, el, source;\\n\\n\\t\\t\\tfor (i = 0; i < count; ++i) {\\n\\t\\t\\t\\tmeta = chart.getDatasetMeta(i);\\n\\t\\t\\t\\tel = meta.dataset;\\n\\t\\t\\t\\tsource = null;\\n\\n\\t\\t\\t\\tif (el && el._model && el instanceof elements.Line) {\\n\\t\\t\\t\\t\\tsource = {\\n\\t\\t\\t\\t\\t\\tvisible: chart.isDatasetVisible(i),\\n\\t\\t\\t\\t\\t\\tfill: decodeFill(el, i, count),\\n\\t\\t\\t\\t\\t\\tchart: chart,\\n\\t\\t\\t\\t\\t\\tel: el\\n\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tmeta.$filler = source;\\n\\t\\t\\t\\tsources.push(source);\\n\\t\\t\\t}\\n\\n\\t\\t\\tfor (i = 0; i < count; ++i) {\\n\\t\\t\\t\\tsource = sources[i];\\n\\t\\t\\t\\tif (!source) {\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tsource.fill = resolveTarget(sources, i, propagate);\\n\\t\\t\\t\\tsource.boundary = computeBoundary(source);\\n\\t\\t\\t\\tsource.mapper = createMapper(source);\\n\\t\\t\\t}\\n\\t\\t},\\n\\n\\t\\tbeforeDatasetDraw: function(chart, args) {\\n\\t\\t\\tvar meta = args.meta.$filler;\\n\\t\\t\\tif (!meta) {\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar ctx = chart.ctx;\\n\\t\\t\\tvar el = meta.el;\\n\\t\\t\\tvar view = el._view;\\n\\t\\t\\tvar points = el._children || [];\\n\\t\\t\\tvar mapper = meta.mapper;\\n\\t\\t\\tvar color = view.backgroundColor || defaults.global.defaultColor;\\n\\n\\t\\t\\tif (mapper && color && points.length) {\\n\\t\\t\\t\\thelpers.canvas.clipArea(ctx, chart.chartArea);\\n\\t\\t\\t\\tdoFill(ctx, points, mapper, view, color, el._loop);\\n\\t\\t\\t\\thelpers.canvas.unclipArea(ctx);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t};\\n};\\n\\n},{\\\"25\\\":25,\\\"40\\\":40,\\\"45\\\":45}],50:[function(require,module,exports){\\n'use strict';\\n\\nvar defaults = require(25);\\nvar Element = require(26);\\nvar helpers = require(45);\\n\\ndefaults._set('global', {\\n\\tlegend: {\\n\\t\\tdisplay: true,\\n\\t\\tposition: 'top',\\n\\t\\tfullWidth: true,\\n\\t\\treverse: false,\\n\\t\\tweight: 1000,\\n\\n\\t\\t// a callback that will handle\\n\\t\\tonClick: function(e, legendItem) {\\n\\t\\t\\tvar index = legendItem.datasetIndex;\\n\\t\\t\\tvar ci = this.chart;\\n\\t\\t\\tvar meta = ci.getDatasetMeta(index);\\n\\n\\t\\t\\t// See controller.isDatasetVisible comment\\n\\t\\t\\tmeta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null;\\n\\n\\t\\t\\t// We hid a dataset ... rerender the chart\\n\\t\\t\\tci.update();\\n\\t\\t},\\n\\n\\t\\tonHover: null,\\n\\n\\t\\tlabels: {\\n\\t\\t\\tboxWidth: 40,\\n\\t\\t\\tpadding: 10,\\n\\t\\t\\t// Generates labels shown in the legend\\n\\t\\t\\t// Valid properties to return:\\n\\t\\t\\t// text : text to display\\n\\t\\t\\t// fillStyle : fill of coloured box\\n\\t\\t\\t// strokeStyle: stroke of coloured box\\n\\t\\t\\t// hidden : if this legend item refers to a hidden item\\n\\t\\t\\t// lineCap : cap style for line\\n\\t\\t\\t// lineDash\\n\\t\\t\\t// lineDashOffset :\\n\\t\\t\\t// lineJoin :\\n\\t\\t\\t// lineWidth :\\n\\t\\t\\tgenerateLabels: function(chart) {\\n\\t\\t\\t\\tvar data = chart.data;\\n\\t\\t\\t\\treturn helpers.isArray(data.datasets) ? data.datasets.map(function(dataset, i) {\\n\\t\\t\\t\\t\\treturn {\\n\\t\\t\\t\\t\\t\\ttext: dataset.label,\\n\\t\\t\\t\\t\\t\\tfillStyle: (!helpers.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0]),\\n\\t\\t\\t\\t\\t\\thidden: !chart.isDatasetVisible(i),\\n\\t\\t\\t\\t\\t\\tlineCap: dataset.borderCapStyle,\\n\\t\\t\\t\\t\\t\\tlineDash: dataset.borderDash,\\n\\t\\t\\t\\t\\t\\tlineDashOffset: dataset.borderDashOffset,\\n\\t\\t\\t\\t\\t\\tlineJoin: dataset.borderJoinStyle,\\n\\t\\t\\t\\t\\t\\tlineWidth: dataset.borderWidth,\\n\\t\\t\\t\\t\\t\\tstrokeStyle: dataset.borderColor,\\n\\t\\t\\t\\t\\t\\tpointStyle: dataset.pointStyle,\\n\\n\\t\\t\\t\\t\\t\\t// Below is extra data used for toggling the datasets\\n\\t\\t\\t\\t\\t\\tdatasetIndex: i\\n\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t}, this) : [];\\n\\t\\t\\t}\\n\\t\\t}\\n\\t},\\n\\n\\tlegendCallback: function(chart) {\\n\\t\\tvar text = [];\\n\\t\\ttext.push('<ul class=\\\"' + chart.id + '-legend\\\">');\\n\\t\\tfor (var i = 0; i < chart.data.datasets.length; i++) {\\n\\t\\t\\ttext.push('<li><span style=\\\"background-color:' + chart.data.datasets[i].backgroundColor + '\\\"></span>');\\n\\t\\t\\tif (chart.data.datasets[i].label) {\\n\\t\\t\\t\\ttext.push(chart.data.datasets[i].label);\\n\\t\\t\\t}\\n\\t\\t\\ttext.push('</li>');\\n\\t\\t}\\n\\t\\ttext.push('</ul>');\\n\\t\\treturn text.join('');\\n\\t}\\n});\\n\\nmodule.exports = function(Chart) {\\n\\n\\tvar layout = Chart.layoutService;\\n\\tvar noop = helpers.noop;\\n\\n\\t/**\\n\\t * Helper function to get the box width based on the usePointStyle option\\n\\t * @param labelopts {Object} the label options on the legend\\n\\t * @param fontSize {Number} the label font size\\n\\t * @return {Number} width of the color box area\\n\\t */\\n\\tfunction getBoxWidth(labelOpts, fontSize) {\\n\\t\\treturn labelOpts.usePointStyle ?\\n\\t\\t\\tfontSize * Math.SQRT2 :\\n\\t\\t\\tlabelOpts.boxWidth;\\n\\t}\\n\\n\\tChart.Legend = Element.extend({\\n\\n\\t\\tinitialize: function(config) {\\n\\t\\t\\thelpers.extend(this, config);\\n\\n\\t\\t\\t// Contains hit boxes for each dataset (in dataset order)\\n\\t\\t\\tthis.legendHitBoxes = [];\\n\\n\\t\\t\\t// Are we in doughnut mode which has a different data type\\n\\t\\t\\tthis.doughnutMode = false;\\n\\t\\t},\\n\\n\\t\\t// These methods are ordered by lifecycle. Utilities then follow.\\n\\t\\t// Any function defined here is inherited by all legend types.\\n\\t\\t// Any function can be extended by the legend type\\n\\n\\t\\tbeforeUpdate: noop,\\n\\t\\tupdate: function(maxWidth, maxHeight, margins) {\\n\\t\\t\\tvar me = this;\\n\\n\\t\\t\\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\\n\\t\\t\\tme.beforeUpdate();\\n\\n\\t\\t\\t// Absorb the master measurements\\n\\t\\t\\tme.maxWidth = maxWidth;\\n\\t\\t\\tme.maxHeight = maxHeight;\\n\\t\\t\\tme.margins = margins;\\n\\n\\t\\t\\t// Dimensions\\n\\t\\t\\tme.beforeSetDimensions();\\n\\t\\t\\tme.setDimensions();\\n\\t\\t\\tme.afterSetDimensions();\\n\\t\\t\\t// Labels\\n\\t\\t\\tme.beforeBuildLabels();\\n\\t\\t\\tme.buildLabels();\\n\\t\\t\\tme.afterBuildLabels();\\n\\n\\t\\t\\t// Fit\\n\\t\\t\\tme.beforeFit();\\n\\t\\t\\tme.fit();\\n\\t\\t\\tme.afterFit();\\n\\t\\t\\t//\\n\\t\\t\\tme.afterUpdate();\\n\\n\\t\\t\\treturn me.minSize;\\n\\t\\t},\\n\\t\\tafterUpdate: noop,\\n\\n\\t\\t//\\n\\n\\t\\tbeforeSetDimensions: noop,\\n\\t\\tsetDimensions: function() {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\t// Set the unconstrained dimension before label rotation\\n\\t\\t\\tif (me.isHorizontal()) {\\n\\t\\t\\t\\t// Reset position before calculating rotation\\n\\t\\t\\t\\tme.width = me.maxWidth;\\n\\t\\t\\t\\tme.left = 0;\\n\\t\\t\\t\\tme.right = me.width;\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tme.height = me.maxHeight;\\n\\n\\t\\t\\t\\t// Reset position before calculating rotation\\n\\t\\t\\t\\tme.top = 0;\\n\\t\\t\\t\\tme.bottom = me.height;\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Reset padding\\n\\t\\t\\tme.paddingLeft = 0;\\n\\t\\t\\tme.paddingTop = 0;\\n\\t\\t\\tme.paddingRight = 0;\\n\\t\\t\\tme.paddingBottom = 0;\\n\\n\\t\\t\\t// Reset minSize\\n\\t\\t\\tme.minSize = {\\n\\t\\t\\t\\twidth: 0,\\n\\t\\t\\t\\theight: 0\\n\\t\\t\\t};\\n\\t\\t},\\n\\t\\tafterSetDimensions: noop,\\n\\n\\t\\t//\\n\\n\\t\\tbeforeBuildLabels: noop,\\n\\t\\tbuildLabels: function() {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\tvar labelOpts = me.options.labels || {};\\n\\t\\t\\tvar legendItems = helpers.callback(labelOpts.generateLabels, [me.chart], me) || [];\\n\\n\\t\\t\\tif (labelOpts.filter) {\\n\\t\\t\\t\\tlegendItems = legendItems.filter(function(item) {\\n\\t\\t\\t\\t\\treturn labelOpts.filter(item, me.chart.data);\\n\\t\\t\\t\\t});\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (me.options.reverse) {\\n\\t\\t\\t\\tlegendItems.reverse();\\n\\t\\t\\t}\\n\\n\\t\\t\\tme.legendItems = legendItems;\\n\\t\\t},\\n\\t\\tafterBuildLabels: noop,\\n\\n\\t\\t//\\n\\n\\t\\tbeforeFit: noop,\\n\\t\\tfit: function() {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\tvar opts = me.options;\\n\\t\\t\\tvar labelOpts = opts.labels;\\n\\t\\t\\tvar display = opts.display;\\n\\n\\t\\t\\tvar ctx = me.ctx;\\n\\n\\t\\t\\tvar globalDefault = defaults.global;\\n\\t\\t\\tvar valueOrDefault = helpers.valueOrDefault;\\n\\t\\t\\tvar fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\\n\\t\\t\\tvar fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\\n\\t\\t\\tvar fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\\n\\t\\t\\tvar labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\\n\\n\\t\\t\\t// Reset hit boxes\\n\\t\\t\\tvar hitboxes = me.legendHitBoxes = [];\\n\\n\\t\\t\\tvar minSize = me.minSize;\\n\\t\\t\\tvar isHorizontal = me.isHorizontal();\\n\\n\\t\\t\\tif (isHorizontal) {\\n\\t\\t\\t\\tminSize.width = me.maxWidth; // fill all the width\\n\\t\\t\\t\\tminSize.height = display ? 10 : 0;\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tminSize.width = display ? 10 : 0;\\n\\t\\t\\t\\tminSize.height = me.maxHeight; // fill all the height\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Increase sizes here\\n\\t\\t\\tif (display) {\\n\\t\\t\\t\\tctx.font = labelFont;\\n\\n\\t\\t\\t\\tif (isHorizontal) {\\n\\t\\t\\t\\t\\t// Labels\\n\\n\\t\\t\\t\\t\\t// Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\\n\\t\\t\\t\\t\\tvar lineWidths = me.lineWidths = [0];\\n\\t\\t\\t\\t\\tvar totalHeight = me.legendItems.length ? fontSize + (labelOpts.padding) : 0;\\n\\n\\t\\t\\t\\t\\tctx.textAlign = 'left';\\n\\t\\t\\t\\t\\tctx.textBaseline = 'top';\\n\\n\\t\\t\\t\\t\\thelpers.each(me.legendItems, function(legendItem, i) {\\n\\t\\t\\t\\t\\t\\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\\n\\t\\t\\t\\t\\t\\tvar width = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\\n\\n\\t\\t\\t\\t\\t\\tif (lineWidths[lineWidths.length - 1] + width + labelOpts.padding >= me.width) {\\n\\t\\t\\t\\t\\t\\t\\ttotalHeight += fontSize + (labelOpts.padding);\\n\\t\\t\\t\\t\\t\\t\\tlineWidths[lineWidths.length] = me.left;\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t// Store the hitbox width and height here. Final position will be updated in `draw`\\n\\t\\t\\t\\t\\t\\thitboxes[i] = {\\n\\t\\t\\t\\t\\t\\t\\tleft: 0,\\n\\t\\t\\t\\t\\t\\t\\ttop: 0,\\n\\t\\t\\t\\t\\t\\t\\twidth: width,\\n\\t\\t\\t\\t\\t\\t\\theight: fontSize\\n\\t\\t\\t\\t\\t\\t};\\n\\n\\t\\t\\t\\t\\t\\tlineWidths[lineWidths.length - 1] += width + labelOpts.padding;\\n\\t\\t\\t\\t\\t});\\n\\n\\t\\t\\t\\t\\tminSize.height += totalHeight;\\n\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tvar vPadding = labelOpts.padding;\\n\\t\\t\\t\\t\\tvar columnWidths = me.columnWidths = [];\\n\\t\\t\\t\\t\\tvar totalWidth = labelOpts.padding;\\n\\t\\t\\t\\t\\tvar currentColWidth = 0;\\n\\t\\t\\t\\t\\tvar currentColHeight = 0;\\n\\t\\t\\t\\t\\tvar itemHeight = fontSize + vPadding;\\n\\n\\t\\t\\t\\t\\thelpers.each(me.legendItems, function(legendItem, i) {\\n\\t\\t\\t\\t\\t\\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\\n\\t\\t\\t\\t\\t\\tvar itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\\n\\n\\t\\t\\t\\t\\t\\t// If too tall, go to new column\\n\\t\\t\\t\\t\\t\\tif (currentColHeight + itemHeight > minSize.height) {\\n\\t\\t\\t\\t\\t\\t\\ttotalWidth += currentColWidth + labelOpts.padding;\\n\\t\\t\\t\\t\\t\\t\\tcolumnWidths.push(currentColWidth); // previous column width\\n\\n\\t\\t\\t\\t\\t\\t\\tcurrentColWidth = 0;\\n\\t\\t\\t\\t\\t\\t\\tcurrentColHeight = 0;\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t// Get max width\\n\\t\\t\\t\\t\\t\\tcurrentColWidth = Math.max(currentColWidth, itemWidth);\\n\\t\\t\\t\\t\\t\\tcurrentColHeight += itemHeight;\\n\\n\\t\\t\\t\\t\\t\\t// Store the hitbox width and height here. Final position will be updated in `draw`\\n\\t\\t\\t\\t\\t\\thitboxes[i] = {\\n\\t\\t\\t\\t\\t\\t\\tleft: 0,\\n\\t\\t\\t\\t\\t\\t\\ttop: 0,\\n\\t\\t\\t\\t\\t\\t\\twidth: itemWidth,\\n\\t\\t\\t\\t\\t\\t\\theight: fontSize\\n\\t\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t\\t});\\n\\n\\t\\t\\t\\t\\ttotalWidth += currentColWidth;\\n\\t\\t\\t\\t\\tcolumnWidths.push(currentColWidth);\\n\\t\\t\\t\\t\\tminSize.width += totalWidth;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\tme.width = minSize.width;\\n\\t\\t\\tme.height = minSize.height;\\n\\t\\t},\\n\\t\\tafterFit: noop,\\n\\n\\t\\t// Shared Methods\\n\\t\\tisHorizontal: function() {\\n\\t\\t\\treturn this.options.position === 'top' || this.options.position === 'bottom';\\n\\t\\t},\\n\\n\\t\\t// Actually draw the legend on the canvas\\n\\t\\tdraw: function() {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\tvar opts = me.options;\\n\\t\\t\\tvar labelOpts = opts.labels;\\n\\t\\t\\tvar globalDefault = defaults.global;\\n\\t\\t\\tvar lineDefault = globalDefault.elements.line;\\n\\t\\t\\tvar legendWidth = me.width;\\n\\t\\t\\tvar lineWidths = me.lineWidths;\\n\\n\\t\\t\\tif (opts.display) {\\n\\t\\t\\t\\tvar ctx = me.ctx;\\n\\t\\t\\t\\tvar valueOrDefault = helpers.valueOrDefault;\\n\\t\\t\\t\\tvar fontColor = valueOrDefault(labelOpts.fontColor, globalDefault.defaultFontColor);\\n\\t\\t\\t\\tvar fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\\n\\t\\t\\t\\tvar fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\\n\\t\\t\\t\\tvar fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\\n\\t\\t\\t\\tvar labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\\n\\t\\t\\t\\tvar cursor;\\n\\n\\t\\t\\t\\t// Canvas setup\\n\\t\\t\\t\\tctx.textAlign = 'left';\\n\\t\\t\\t\\tctx.textBaseline = 'middle';\\n\\t\\t\\t\\tctx.lineWidth = 0.5;\\n\\t\\t\\t\\tctx.strokeStyle = fontColor; // for strikethrough effect\\n\\t\\t\\t\\tctx.fillStyle = fontColor; // render in correct colour\\n\\t\\t\\t\\tctx.font = labelFont;\\n\\n\\t\\t\\t\\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\\n\\t\\t\\t\\tvar hitboxes = me.legendHitBoxes;\\n\\n\\t\\t\\t\\t// current position\\n\\t\\t\\t\\tvar drawLegendBox = function(x, y, legendItem) {\\n\\t\\t\\t\\t\\tif (isNaN(boxWidth) || boxWidth <= 0) {\\n\\t\\t\\t\\t\\t\\treturn;\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t// Set the ctx for the box\\n\\t\\t\\t\\t\\tctx.save();\\n\\n\\t\\t\\t\\t\\tctx.fillStyle = valueOrDefault(legendItem.fillStyle, globalDefault.defaultColor);\\n\\t\\t\\t\\t\\tctx.lineCap = valueOrDefault(legendItem.lineCap, lineDefault.borderCapStyle);\\n\\t\\t\\t\\t\\tctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, lineDefault.borderDashOffset);\\n\\t\\t\\t\\t\\tctx.lineJoin = valueOrDefault(legendItem.lineJoin, lineDefault.borderJoinStyle);\\n\\t\\t\\t\\t\\tctx.lineWidth = valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth);\\n\\t\\t\\t\\t\\tctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, globalDefault.defaultColor);\\n\\t\\t\\t\\t\\tvar isLineWidthZero = (valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth) === 0);\\n\\n\\t\\t\\t\\t\\tif (ctx.setLineDash) {\\n\\t\\t\\t\\t\\t\\t// IE 9 and 10 do not support line dash\\n\\t\\t\\t\\t\\t\\tctx.setLineDash(valueOrDefault(legendItem.lineDash, lineDefault.borderDash));\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tif (opts.labels && opts.labels.usePointStyle) {\\n\\t\\t\\t\\t\\t\\t// Recalculate x and y for drawPoint() because its expecting\\n\\t\\t\\t\\t\\t\\t// x and y to be center of figure (instead of top left)\\n\\t\\t\\t\\t\\t\\tvar radius = fontSize * Math.SQRT2 / 2;\\n\\t\\t\\t\\t\\t\\tvar offSet = radius / Math.SQRT2;\\n\\t\\t\\t\\t\\t\\tvar centerX = x + offSet;\\n\\t\\t\\t\\t\\t\\tvar centerY = y + offSet;\\n\\n\\t\\t\\t\\t\\t\\t// Draw pointStyle as legend symbol\\n\\t\\t\\t\\t\\t\\thelpers.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\\n\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t// Draw box as legend symbol\\n\\t\\t\\t\\t\\t\\tif (!isLineWidthZero) {\\n\\t\\t\\t\\t\\t\\t\\tctx.strokeRect(x, y, boxWidth, fontSize);\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\tctx.fillRect(x, y, boxWidth, fontSize);\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tctx.restore();\\n\\t\\t\\t\\t};\\n\\t\\t\\t\\tvar fillText = function(x, y, legendItem, textWidth) {\\n\\t\\t\\t\\t\\tvar halfFontSize = fontSize / 2;\\n\\t\\t\\t\\t\\tvar xLeft = boxWidth + halfFontSize + x;\\n\\t\\t\\t\\t\\tvar yMiddle = y + halfFontSize;\\n\\n\\t\\t\\t\\t\\tctx.fillText(legendItem.text, xLeft, yMiddle);\\n\\n\\t\\t\\t\\t\\tif (legendItem.hidden) {\\n\\t\\t\\t\\t\\t\\t// Strikethrough the text if hidden\\n\\t\\t\\t\\t\\t\\tctx.beginPath();\\n\\t\\t\\t\\t\\t\\tctx.lineWidth = 2;\\n\\t\\t\\t\\t\\t\\tctx.moveTo(xLeft, yMiddle);\\n\\t\\t\\t\\t\\t\\tctx.lineTo(xLeft + textWidth, yMiddle);\\n\\t\\t\\t\\t\\t\\tctx.stroke();\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t};\\n\\n\\t\\t\\t\\t// Horizontal\\n\\t\\t\\t\\tvar isHorizontal = me.isHorizontal();\\n\\t\\t\\t\\tif (isHorizontal) {\\n\\t\\t\\t\\t\\tcursor = {\\n\\t\\t\\t\\t\\t\\tx: me.left + ((legendWidth - lineWidths[0]) / 2),\\n\\t\\t\\t\\t\\t\\ty: me.top + labelOpts.padding,\\n\\t\\t\\t\\t\\t\\tline: 0\\n\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tcursor = {\\n\\t\\t\\t\\t\\t\\tx: me.left + labelOpts.padding,\\n\\t\\t\\t\\t\\t\\ty: me.top + labelOpts.padding,\\n\\t\\t\\t\\t\\t\\tline: 0\\n\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tvar itemHeight = fontSize + labelOpts.padding;\\n\\t\\t\\t\\thelpers.each(me.legendItems, function(legendItem, i) {\\n\\t\\t\\t\\t\\tvar textWidth = ctx.measureText(legendItem.text).width;\\n\\t\\t\\t\\t\\tvar width = boxWidth + (fontSize / 2) + textWidth;\\n\\t\\t\\t\\t\\tvar x = cursor.x;\\n\\t\\t\\t\\t\\tvar y = cursor.y;\\n\\n\\t\\t\\t\\t\\tif (isHorizontal) {\\n\\t\\t\\t\\t\\t\\tif (x + width >= legendWidth) {\\n\\t\\t\\t\\t\\t\\t\\ty = cursor.y += itemHeight;\\n\\t\\t\\t\\t\\t\\t\\tcursor.line++;\\n\\t\\t\\t\\t\\t\\t\\tx = cursor.x = me.left + ((legendWidth - lineWidths[cursor.line]) / 2);\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t} else if (y + itemHeight > me.bottom) {\\n\\t\\t\\t\\t\\t\\tx = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\\n\\t\\t\\t\\t\\t\\ty = cursor.y = me.top + labelOpts.padding;\\n\\t\\t\\t\\t\\t\\tcursor.line++;\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tdrawLegendBox(x, y, legendItem);\\n\\n\\t\\t\\t\\t\\thitboxes[i].left = x;\\n\\t\\t\\t\\t\\thitboxes[i].top = y;\\n\\n\\t\\t\\t\\t\\t// Fill the actual label\\n\\t\\t\\t\\t\\tfillText(x, y, legendItem, textWidth);\\n\\n\\t\\t\\t\\t\\tif (isHorizontal) {\\n\\t\\t\\t\\t\\t\\tcursor.x += width + (labelOpts.padding);\\n\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\tcursor.y += itemHeight;\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t});\\n\\t\\t\\t}\\n\\t\\t},\\n\\n\\t\\t/**\\n\\t\\t * Handle an event\\n\\t\\t * @private\\n\\t\\t * @param {IEvent} event - The event to handle\\n\\t\\t * @return {Boolean} true if a change occured\\n\\t\\t */\\n\\t\\thandleEvent: function(e) {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\tvar opts = me.options;\\n\\t\\t\\tvar type = e.type === 'mouseup' ? 'click' : e.type;\\n\\t\\t\\tvar changed = false;\\n\\n\\t\\t\\tif (type === 'mousemove') {\\n\\t\\t\\t\\tif (!opts.onHover) {\\n\\t\\t\\t\\t\\treturn;\\n\\t\\t\\t\\t}\\n\\t\\t\\t} else if (type === 'click') {\\n\\t\\t\\t\\tif (!opts.onClick) {\\n\\t\\t\\t\\t\\treturn;\\n\\t\\t\\t\\t}\\n\\t\\t\\t} else {\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Chart event already has relative position in it\\n\\t\\t\\tvar x = e.x;\\n\\t\\t\\tvar y = e.y;\\n\\n\\t\\t\\tif (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\\n\\t\\t\\t\\t// See if we are touching one of the dataset boxes\\n\\t\\t\\t\\tvar lh = me.legendHitBoxes;\\n\\t\\t\\t\\tfor (var i = 0; i < lh.length; ++i) {\\n\\t\\t\\t\\t\\tvar hitBox = lh[i];\\n\\n\\t\\t\\t\\t\\tif (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\\n\\t\\t\\t\\t\\t\\t// Touching an element\\n\\t\\t\\t\\t\\t\\tif (type === 'click') {\\n\\t\\t\\t\\t\\t\\t\\t// use e.native for backwards compatibility\\n\\t\\t\\t\\t\\t\\t\\topts.onClick.call(me, e.native, me.legendItems[i]);\\n\\t\\t\\t\\t\\t\\t\\tchanged = true;\\n\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t\\t} else if (type === 'mousemove') {\\n\\t\\t\\t\\t\\t\\t\\t// use e.native for backwards compatibility\\n\\t\\t\\t\\t\\t\\t\\topts.onHover.call(me, e.native, me.legendItems[i]);\\n\\t\\t\\t\\t\\t\\t\\tchanged = true;\\n\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn changed;\\n\\t\\t}\\n\\t});\\n\\n\\tfunction createNewLegendAndAttach(chart, legendOpts) {\\n\\t\\tvar legend = new Chart.Legend({\\n\\t\\t\\tctx: chart.ctx,\\n\\t\\t\\toptions: legendOpts,\\n\\t\\t\\tchart: chart\\n\\t\\t});\\n\\n\\t\\tlayout.configure(chart, legend, legendOpts);\\n\\t\\tlayout.addBox(chart, legend);\\n\\t\\tchart.legend = legend;\\n\\t}\\n\\n\\treturn {\\n\\t\\tid: 'legend',\\n\\n\\t\\tbeforeInit: function(chart) {\\n\\t\\t\\tvar legendOpts = chart.options.legend;\\n\\n\\t\\t\\tif (legendOpts) {\\n\\t\\t\\t\\tcreateNewLegendAndAttach(chart, legendOpts);\\n\\t\\t\\t}\\n\\t\\t},\\n\\n\\t\\tbeforeUpdate: function(chart) {\\n\\t\\t\\tvar legendOpts = chart.options.legend;\\n\\t\\t\\tvar legend = chart.legend;\\n\\n\\t\\t\\tif (legendOpts) {\\n\\t\\t\\t\\thelpers.mergeIf(legendOpts, defaults.global.legend);\\n\\n\\t\\t\\t\\tif (legend) {\\n\\t\\t\\t\\t\\tlayout.configure(chart, legend, legendOpts);\\n\\t\\t\\t\\t\\tlegend.options = legendOpts;\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tcreateNewLegendAndAttach(chart, legendOpts);\\n\\t\\t\\t\\t}\\n\\t\\t\\t} else if (legend) {\\n\\t\\t\\t\\tlayout.removeBox(chart, legend);\\n\\t\\t\\t\\tdelete chart.legend;\\n\\t\\t\\t}\\n\\t\\t},\\n\\n\\t\\tafterEvent: function(chart, e) {\\n\\t\\t\\tvar legend = chart.legend;\\n\\t\\t\\tif (legend) {\\n\\t\\t\\t\\tlegend.handleEvent(e);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t};\\n};\\n\\n},{\\\"25\\\":25,\\\"26\\\":26,\\\"45\\\":45}],51:[function(require,module,exports){\\n'use strict';\\n\\nvar defaults = require(25);\\nvar Element = require(26);\\nvar helpers = require(45);\\n\\ndefaults._set('global', {\\n\\ttitle: {\\n\\t\\tdisplay: false,\\n\\t\\tfontStyle: 'bold',\\n\\t\\tfullWidth: true,\\n\\t\\tlineHeight: 1.2,\\n\\t\\tpadding: 10,\\n\\t\\tposition: 'top',\\n\\t\\ttext: '',\\n\\t\\tweight: 2000         // by default greater than legend (1000) to be above\\n\\t}\\n});\\n\\nmodule.exports = function(Chart) {\\n\\n\\tvar layout = Chart.layoutService;\\n\\tvar noop = helpers.noop;\\n\\n\\tChart.Title = Element.extend({\\n\\t\\tinitialize: function(config) {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\thelpers.extend(me, config);\\n\\n\\t\\t\\t// Contains hit boxes for each dataset (in dataset order)\\n\\t\\t\\tme.legendHitBoxes = [];\\n\\t\\t},\\n\\n\\t\\t// These methods are ordered by lifecycle. Utilities then follow.\\n\\n\\t\\tbeforeUpdate: noop,\\n\\t\\tupdate: function(maxWidth, maxHeight, margins) {\\n\\t\\t\\tvar me = this;\\n\\n\\t\\t\\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\\n\\t\\t\\tme.beforeUpdate();\\n\\n\\t\\t\\t// Absorb the master measurements\\n\\t\\t\\tme.maxWidth = maxWidth;\\n\\t\\t\\tme.maxHeight = maxHeight;\\n\\t\\t\\tme.margins = margins;\\n\\n\\t\\t\\t// Dimensions\\n\\t\\t\\tme.beforeSetDimensions();\\n\\t\\t\\tme.setDimensions();\\n\\t\\t\\tme.afterSetDimensions();\\n\\t\\t\\t// Labels\\n\\t\\t\\tme.beforeBuildLabels();\\n\\t\\t\\tme.buildLabels();\\n\\t\\t\\tme.afterBuildLabels();\\n\\n\\t\\t\\t// Fit\\n\\t\\t\\tme.beforeFit();\\n\\t\\t\\tme.fit();\\n\\t\\t\\tme.afterFit();\\n\\t\\t\\t//\\n\\t\\t\\tme.afterUpdate();\\n\\n\\t\\t\\treturn me.minSize;\\n\\n\\t\\t},\\n\\t\\tafterUpdate: noop,\\n\\n\\t\\t//\\n\\n\\t\\tbeforeSetDimensions: noop,\\n\\t\\tsetDimensions: function() {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\t// Set the unconstrained dimension before label rotation\\n\\t\\t\\tif (me.isHorizontal()) {\\n\\t\\t\\t\\t// Reset position before calculating rotation\\n\\t\\t\\t\\tme.width = me.maxWidth;\\n\\t\\t\\t\\tme.left = 0;\\n\\t\\t\\t\\tme.right = me.width;\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tme.height = me.maxHeight;\\n\\n\\t\\t\\t\\t// Reset position before calculating rotation\\n\\t\\t\\t\\tme.top = 0;\\n\\t\\t\\t\\tme.bottom = me.height;\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Reset padding\\n\\t\\t\\tme.paddingLeft = 0;\\n\\t\\t\\tme.paddingTop = 0;\\n\\t\\t\\tme.paddingRight = 0;\\n\\t\\t\\tme.paddingBottom = 0;\\n\\n\\t\\t\\t// Reset minSize\\n\\t\\t\\tme.minSize = {\\n\\t\\t\\t\\twidth: 0,\\n\\t\\t\\t\\theight: 0\\n\\t\\t\\t};\\n\\t\\t},\\n\\t\\tafterSetDimensions: noop,\\n\\n\\t\\t//\\n\\n\\t\\tbeforeBuildLabels: noop,\\n\\t\\tbuildLabels: noop,\\n\\t\\tafterBuildLabels: noop,\\n\\n\\t\\t//\\n\\n\\t\\tbeforeFit: noop,\\n\\t\\tfit: function() {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\tvar valueOrDefault = helpers.valueOrDefault;\\n\\t\\t\\tvar opts = me.options;\\n\\t\\t\\tvar display = opts.display;\\n\\t\\t\\tvar fontSize = valueOrDefault(opts.fontSize, defaults.global.defaultFontSize);\\n\\t\\t\\tvar minSize = me.minSize;\\n\\t\\t\\tvar lineCount = helpers.isArray(opts.text) ? opts.text.length : 1;\\n\\t\\t\\tvar lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\\n\\t\\t\\tvar textSize = display ? (lineCount * lineHeight) + (opts.padding * 2) : 0;\\n\\n\\t\\t\\tif (me.isHorizontal()) {\\n\\t\\t\\t\\tminSize.width = me.maxWidth; // fill all the width\\n\\t\\t\\t\\tminSize.height = textSize;\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tminSize.width = textSize;\\n\\t\\t\\t\\tminSize.height = me.maxHeight; // fill all the height\\n\\t\\t\\t}\\n\\n\\t\\t\\tme.width = minSize.width;\\n\\t\\t\\tme.height = minSize.height;\\n\\n\\t\\t},\\n\\t\\tafterFit: noop,\\n\\n\\t\\t// Shared Methods\\n\\t\\tisHorizontal: function() {\\n\\t\\t\\tvar pos = this.options.position;\\n\\t\\t\\treturn pos === 'top' || pos === 'bottom';\\n\\t\\t},\\n\\n\\t\\t// Actually draw the title block on the canvas\\n\\t\\tdraw: function() {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\tvar ctx = me.ctx;\\n\\t\\t\\tvar valueOrDefault = helpers.valueOrDefault;\\n\\t\\t\\tvar opts = me.options;\\n\\t\\t\\tvar globalDefaults = defaults.global;\\n\\n\\t\\t\\tif (opts.display) {\\n\\t\\t\\t\\tvar fontSize = valueOrDefault(opts.fontSize, globalDefaults.defaultFontSize);\\n\\t\\t\\t\\tvar fontStyle = valueOrDefault(opts.fontStyle, globalDefaults.defaultFontStyle);\\n\\t\\t\\t\\tvar fontFamily = valueOrDefault(opts.fontFamily, globalDefaults.defaultFontFamily);\\n\\t\\t\\t\\tvar titleFont = helpers.fontString(fontSize, fontStyle, fontFamily);\\n\\t\\t\\t\\tvar lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\\n\\t\\t\\t\\tvar offset = lineHeight / 2 + opts.padding;\\n\\t\\t\\t\\tvar rotation = 0;\\n\\t\\t\\t\\tvar top = me.top;\\n\\t\\t\\t\\tvar left = me.left;\\n\\t\\t\\t\\tvar bottom = me.bottom;\\n\\t\\t\\t\\tvar right = me.right;\\n\\t\\t\\t\\tvar maxWidth, titleX, titleY;\\n\\n\\t\\t\\t\\tctx.fillStyle = valueOrDefault(opts.fontColor, globalDefaults.defaultFontColor); // render in correct colour\\n\\t\\t\\t\\tctx.font = titleFont;\\n\\n\\t\\t\\t\\t// Horizontal\\n\\t\\t\\t\\tif (me.isHorizontal()) {\\n\\t\\t\\t\\t\\ttitleX = left + ((right - left) / 2); // midpoint of the width\\n\\t\\t\\t\\t\\ttitleY = top + offset;\\n\\t\\t\\t\\t\\tmaxWidth = right - left;\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\ttitleX = opts.position === 'left' ? left + offset : right - offset;\\n\\t\\t\\t\\t\\ttitleY = top + ((bottom - top) / 2);\\n\\t\\t\\t\\t\\tmaxWidth = bottom - top;\\n\\t\\t\\t\\t\\trotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tctx.save();\\n\\t\\t\\t\\tctx.translate(titleX, titleY);\\n\\t\\t\\t\\tctx.rotate(rotation);\\n\\t\\t\\t\\tctx.textAlign = 'center';\\n\\t\\t\\t\\tctx.textBaseline = 'middle';\\n\\n\\t\\t\\t\\tvar text = opts.text;\\n\\t\\t\\t\\tif (helpers.isArray(text)) {\\n\\t\\t\\t\\t\\tvar y = 0;\\n\\t\\t\\t\\t\\tfor (var i = 0; i < text.length; ++i) {\\n\\t\\t\\t\\t\\t\\tctx.fillText(text[i], 0, y, maxWidth);\\n\\t\\t\\t\\t\\t\\ty += lineHeight;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tctx.fillText(text, 0, 0, maxWidth);\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tctx.restore();\\n\\t\\t\\t}\\n\\t\\t}\\n\\t});\\n\\n\\tfunction createNewTitleBlockAndAttach(chart, titleOpts) {\\n\\t\\tvar title = new Chart.Title({\\n\\t\\t\\tctx: chart.ctx,\\n\\t\\t\\toptions: titleOpts,\\n\\t\\t\\tchart: chart\\n\\t\\t});\\n\\n\\t\\tlayout.configure(chart, title, titleOpts);\\n\\t\\tlayout.addBox(chart, title);\\n\\t\\tchart.titleBlock = title;\\n\\t}\\n\\n\\treturn {\\n\\t\\tid: 'title',\\n\\n\\t\\tbeforeInit: function(chart) {\\n\\t\\t\\tvar titleOpts = chart.options.title;\\n\\n\\t\\t\\tif (titleOpts) {\\n\\t\\t\\t\\tcreateNewTitleBlockAndAttach(chart, titleOpts);\\n\\t\\t\\t}\\n\\t\\t},\\n\\n\\t\\tbeforeUpdate: function(chart) {\\n\\t\\t\\tvar titleOpts = chart.options.title;\\n\\t\\t\\tvar titleBlock = chart.titleBlock;\\n\\n\\t\\t\\tif (titleOpts) {\\n\\t\\t\\t\\thelpers.mergeIf(titleOpts, defaults.global.title);\\n\\n\\t\\t\\t\\tif (titleBlock) {\\n\\t\\t\\t\\t\\tlayout.configure(chart, titleBlock, titleOpts);\\n\\t\\t\\t\\t\\ttitleBlock.options = titleOpts;\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tcreateNewTitleBlockAndAttach(chart, titleOpts);\\n\\t\\t\\t\\t}\\n\\t\\t\\t} else if (titleBlock) {\\n\\t\\t\\t\\tChart.layoutService.removeBox(chart, titleBlock);\\n\\t\\t\\t\\tdelete chart.titleBlock;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t};\\n};\\n\\n},{\\\"25\\\":25,\\\"26\\\":26,\\\"45\\\":45}],52:[function(require,module,exports){\\n'use strict';\\n\\nmodule.exports = function(Chart) {\\n\\n\\t// Default config for a category scale\\n\\tvar defaultConfig = {\\n\\t\\tposition: 'bottom'\\n\\t};\\n\\n\\tvar DatasetScale = Chart.Scale.extend({\\n\\t\\t/**\\n\\t\\t* Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\\n\\t\\t* else fall back to data.labels\\n\\t\\t* @private\\n\\t\\t*/\\n\\t\\tgetLabels: function() {\\n\\t\\t\\tvar data = this.chart.data;\\n\\t\\t\\treturn this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\\n\\t\\t},\\n\\n\\t\\tdetermineDataLimits: function() {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\tvar labels = me.getLabels();\\n\\t\\t\\tme.minIndex = 0;\\n\\t\\t\\tme.maxIndex = labels.length - 1;\\n\\t\\t\\tvar findIndex;\\n\\n\\t\\t\\tif (me.options.ticks.min !== undefined) {\\n\\t\\t\\t\\t// user specified min value\\n\\t\\t\\t\\tfindIndex = labels.indexOf(me.options.ticks.min);\\n\\t\\t\\t\\tme.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (me.options.ticks.max !== undefined) {\\n\\t\\t\\t\\t// user specified max value\\n\\t\\t\\t\\tfindIndex = labels.indexOf(me.options.ticks.max);\\n\\t\\t\\t\\tme.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\\n\\t\\t\\t}\\n\\n\\t\\t\\tme.min = labels[me.minIndex];\\n\\t\\t\\tme.max = labels[me.maxIndex];\\n\\t\\t},\\n\\n\\t\\tbuildTicks: function() {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\tvar labels = me.getLabels();\\n\\t\\t\\t// If we are viewing some subset of labels, slice the original array\\n\\t\\t\\tme.ticks = (me.minIndex === 0 && me.maxIndex === labels.length - 1) ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\\n\\t\\t},\\n\\n\\t\\tgetLabelForIndex: function(index, datasetIndex) {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\tvar data = me.chart.data;\\n\\t\\t\\tvar isHorizontal = me.isHorizontal();\\n\\n\\t\\t\\tif (data.yLabels && !isHorizontal) {\\n\\t\\t\\t\\treturn me.getRightValue(data.datasets[datasetIndex].data[index]);\\n\\t\\t\\t}\\n\\t\\t\\treturn me.ticks[index - me.minIndex];\\n\\t\\t},\\n\\n\\t\\t// Used to get data value locations.  Value can either be an index or a numerical value\\n\\t\\tgetPixelForValue: function(value, index) {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\tvar offset = me.options.offset;\\n\\t\\t\\t// 1 is added because we need the length but we have the indexes\\n\\t\\t\\tvar offsetAmt = Math.max((me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1)), 1);\\n\\n\\t\\t\\t// If value is a data object, then index is the index in the data array,\\n\\t\\t\\t// not the index of the scale. We need to change that.\\n\\t\\t\\tvar valueCategory;\\n\\t\\t\\tif (value !== undefined && value !== null) {\\n\\t\\t\\t\\tvalueCategory = me.isHorizontal() ? value.x : value.y;\\n\\t\\t\\t}\\n\\t\\t\\tif (valueCategory !== undefined || (value !== undefined && isNaN(index))) {\\n\\t\\t\\t\\tvar labels = me.getLabels();\\n\\t\\t\\t\\tvalue = valueCategory || value;\\n\\t\\t\\t\\tvar idx = labels.indexOf(value);\\n\\t\\t\\t\\tindex = idx !== -1 ? idx : index;\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (me.isHorizontal()) {\\n\\t\\t\\t\\tvar valueWidth = me.width / offsetAmt;\\n\\t\\t\\t\\tvar widthOffset = (valueWidth * (index - me.minIndex));\\n\\n\\t\\t\\t\\tif (offset) {\\n\\t\\t\\t\\t\\twidthOffset += (valueWidth / 2);\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\treturn me.left + Math.round(widthOffset);\\n\\t\\t\\t}\\n\\t\\t\\tvar valueHeight = me.height / offsetAmt;\\n\\t\\t\\tvar heightOffset = (valueHeight * (index - me.minIndex));\\n\\n\\t\\t\\tif (offset) {\\n\\t\\t\\t\\theightOffset += (valueHeight / 2);\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn me.top + Math.round(heightOffset);\\n\\t\\t},\\n\\t\\tgetPixelForTick: function(index) {\\n\\t\\t\\treturn this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\\n\\t\\t},\\n\\t\\tgetValueForPixel: function(pixel) {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\tvar offset = me.options.offset;\\n\\t\\t\\tvar value;\\n\\t\\t\\tvar offsetAmt = Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\\n\\t\\t\\tvar horz = me.isHorizontal();\\n\\t\\t\\tvar valueDimension = (horz ? me.width : me.height) / offsetAmt;\\n\\n\\t\\t\\tpixel -= horz ? me.left : me.top;\\n\\n\\t\\t\\tif (offset) {\\n\\t\\t\\t\\tpixel -= (valueDimension / 2);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (pixel <= 0) {\\n\\t\\t\\t\\tvalue = 0;\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tvalue = Math.round(pixel / valueDimension);\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn value + me.minIndex;\\n\\t\\t},\\n\\t\\tgetBasePixel: function() {\\n\\t\\t\\treturn this.bottom;\\n\\t\\t}\\n\\t});\\n\\n\\tChart.scaleService.registerScaleType('category', DatasetScale, defaultConfig);\\n\\n};\\n\\n},{}],53:[function(require,module,exports){\\n'use strict';\\n\\nvar defaults = require(25);\\nvar helpers = require(45);\\nvar Ticks = require(34);\\n\\nmodule.exports = function(Chart) {\\n\\n\\tvar defaultConfig = {\\n\\t\\tposition: 'left',\\n\\t\\tticks: {\\n\\t\\t\\tcallback: Ticks.formatters.linear\\n\\t\\t}\\n\\t};\\n\\n\\tvar LinearScale = Chart.LinearScaleBase.extend({\\n\\n\\t\\tdetermineDataLimits: function() {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\tvar opts = me.options;\\n\\t\\t\\tvar chart = me.chart;\\n\\t\\t\\tvar data = chart.data;\\n\\t\\t\\tvar datasets = data.datasets;\\n\\t\\t\\tvar isHorizontal = me.isHorizontal();\\n\\t\\t\\tvar DEFAULT_MIN = 0;\\n\\t\\t\\tvar DEFAULT_MAX = 1;\\n\\n\\t\\t\\tfunction IDMatches(meta) {\\n\\t\\t\\t\\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\\n\\t\\t\\t}\\n\\n\\t\\t\\t// First Calculate the range\\n\\t\\t\\tme.min = null;\\n\\t\\t\\tme.max = null;\\n\\n\\t\\t\\tvar hasStacks = opts.stacked;\\n\\t\\t\\tif (hasStacks === undefined) {\\n\\t\\t\\t\\thelpers.each(datasets, function(dataset, datasetIndex) {\\n\\t\\t\\t\\t\\tif (hasStacks) {\\n\\t\\t\\t\\t\\t\\treturn;\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tvar meta = chart.getDatasetMeta(datasetIndex);\\n\\t\\t\\t\\t\\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\\n\\t\\t\\t\\t\\t\\tmeta.stack !== undefined) {\\n\\t\\t\\t\\t\\t\\thasStacks = true;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t});\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (opts.stacked || hasStacks) {\\n\\t\\t\\t\\tvar valuesPerStack = {};\\n\\n\\t\\t\\t\\thelpers.each(datasets, function(dataset, datasetIndex) {\\n\\t\\t\\t\\t\\tvar meta = chart.getDatasetMeta(datasetIndex);\\n\\t\\t\\t\\t\\tvar key = [\\n\\t\\t\\t\\t\\t\\tmeta.type,\\n\\t\\t\\t\\t\\t\\t// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\\n\\t\\t\\t\\t\\t\\t((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\\n\\t\\t\\t\\t\\t\\tmeta.stack\\n\\t\\t\\t\\t\\t].join('.');\\n\\n\\t\\t\\t\\t\\tif (valuesPerStack[key] === undefined) {\\n\\t\\t\\t\\t\\t\\tvaluesPerStack[key] = {\\n\\t\\t\\t\\t\\t\\t\\tpositiveValues: [],\\n\\t\\t\\t\\t\\t\\t\\tnegativeValues: []\\n\\t\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t// Store these per type\\n\\t\\t\\t\\t\\tvar positiveValues = valuesPerStack[key].positiveValues;\\n\\t\\t\\t\\t\\tvar negativeValues = valuesPerStack[key].negativeValues;\\n\\n\\t\\t\\t\\t\\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\\n\\t\\t\\t\\t\\t\\thelpers.each(dataset.data, function(rawValue, index) {\\n\\t\\t\\t\\t\\t\\t\\tvar value = +me.getRightValue(rawValue);\\n\\t\\t\\t\\t\\t\\t\\tif (isNaN(value) || meta.data[index].hidden) {\\n\\t\\t\\t\\t\\t\\t\\t\\treturn;\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\tpositiveValues[index] = positiveValues[index] || 0;\\n\\t\\t\\t\\t\\t\\t\\tnegativeValues[index] = negativeValues[index] || 0;\\n\\n\\t\\t\\t\\t\\t\\t\\tif (opts.relativePoints) {\\n\\t\\t\\t\\t\\t\\t\\t\\tpositiveValues[index] = 100;\\n\\t\\t\\t\\t\\t\\t\\t} else if (value < 0) {\\n\\t\\t\\t\\t\\t\\t\\t\\tnegativeValues[index] += value;\\n\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\tpositiveValues[index] += value;\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t});\\n\\n\\t\\t\\t\\thelpers.each(valuesPerStack, function(valuesForType) {\\n\\t\\t\\t\\t\\tvar values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\\n\\t\\t\\t\\t\\tvar minVal = helpers.min(values);\\n\\t\\t\\t\\t\\tvar maxVal = helpers.max(values);\\n\\t\\t\\t\\t\\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\\n\\t\\t\\t\\t\\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\\n\\t\\t\\t\\t});\\n\\n\\t\\t\\t} else {\\n\\t\\t\\t\\thelpers.each(datasets, function(dataset, datasetIndex) {\\n\\t\\t\\t\\t\\tvar meta = chart.getDatasetMeta(datasetIndex);\\n\\t\\t\\t\\t\\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\\n\\t\\t\\t\\t\\t\\thelpers.each(dataset.data, function(rawValue, index) {\\n\\t\\t\\t\\t\\t\\t\\tvar value = +me.getRightValue(rawValue);\\n\\t\\t\\t\\t\\t\\t\\tif (isNaN(value) || meta.data[index].hidden) {\\n\\t\\t\\t\\t\\t\\t\\t\\treturn;\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\tif (me.min === null) {\\n\\t\\t\\t\\t\\t\\t\\t\\tme.min = value;\\n\\t\\t\\t\\t\\t\\t\\t} else if (value < me.min) {\\n\\t\\t\\t\\t\\t\\t\\t\\tme.min = value;\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\tif (me.max === null) {\\n\\t\\t\\t\\t\\t\\t\\t\\tme.max = value;\\n\\t\\t\\t\\t\\t\\t\\t} else if (value > me.max) {\\n\\t\\t\\t\\t\\t\\t\\t\\tme.max = value;\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t});\\n\\t\\t\\t}\\n\\n\\t\\t\\tme.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\\n\\t\\t\\tme.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX;\\n\\n\\t\\t\\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\\n\\t\\t\\tthis.handleTickRangeOptions();\\n\\t\\t},\\n\\t\\tgetTickLimit: function() {\\n\\t\\t\\tvar maxTicks;\\n\\t\\t\\tvar me = this;\\n\\t\\t\\tvar tickOpts = me.options.ticks;\\n\\n\\t\\t\\tif (me.isHorizontal()) {\\n\\t\\t\\t\\tmaxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.width / 50));\\n\\t\\t\\t} else {\\n\\t\\t\\t\\t// The factor of 2 used to scale the font size has been experimentally determined.\\n\\t\\t\\t\\tvar tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, defaults.global.defaultFontSize);\\n\\t\\t\\t\\tmaxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.height / (2 * tickFontSize)));\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn maxTicks;\\n\\t\\t},\\n\\t\\t// Called after the ticks are built. We need\\n\\t\\thandleDirectionalChanges: function() {\\n\\t\\t\\tif (!this.isHorizontal()) {\\n\\t\\t\\t\\t// We are in a vertical orientation. The top value is the highest. So reverse the array\\n\\t\\t\\t\\tthis.ticks.reverse();\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\tgetLabelForIndex: function(index, datasetIndex) {\\n\\t\\t\\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\\n\\t\\t},\\n\\t\\t// Utils\\n\\t\\tgetPixelForValue: function(value) {\\n\\t\\t\\t// This must be called after fit has been run so that\\n\\t\\t\\t// this.left, this.top, this.right, and this.bottom have been defined\\n\\t\\t\\tvar me = this;\\n\\t\\t\\tvar start = me.start;\\n\\n\\t\\t\\tvar rightValue = +me.getRightValue(value);\\n\\t\\t\\tvar pixel;\\n\\t\\t\\tvar range = me.end - start;\\n\\n\\t\\t\\tif (me.isHorizontal()) {\\n\\t\\t\\t\\tpixel = me.left + (me.width / range * (rightValue - start));\\n\\t\\t\\t\\treturn Math.round(pixel);\\n\\t\\t\\t}\\n\\n\\t\\t\\tpixel = me.bottom - (me.height / range * (rightValue - start));\\n\\t\\t\\treturn Math.round(pixel);\\n\\t\\t},\\n\\t\\tgetValueForPixel: function(pixel) {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\tvar isHorizontal = me.isHorizontal();\\n\\t\\t\\tvar innerDimension = isHorizontal ? me.width : me.height;\\n\\t\\t\\tvar offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\\n\\t\\t\\treturn me.start + ((me.end - me.start) * offset);\\n\\t\\t},\\n\\t\\tgetPixelForTick: function(index) {\\n\\t\\t\\treturn this.getPixelForValue(this.ticksAsNumbers[index]);\\n\\t\\t}\\n\\t});\\n\\tChart.scaleService.registerScaleType('linear', LinearScale, defaultConfig);\\n\\n};\\n\\n},{\\\"25\\\":25,\\\"34\\\":34,\\\"45\\\":45}],54:[function(require,module,exports){\\n'use strict';\\n\\nvar helpers = require(45);\\nvar Ticks = require(34);\\n\\nmodule.exports = function(Chart) {\\n\\n\\tvar noop = helpers.noop;\\n\\n\\tChart.LinearScaleBase = Chart.Scale.extend({\\n\\t\\tgetRightValue: function(value) {\\n\\t\\t\\tif (typeof value === 'string') {\\n\\t\\t\\t\\treturn +value;\\n\\t\\t\\t}\\n\\t\\t\\treturn Chart.Scale.prototype.getRightValue.call(this, value);\\n\\t\\t},\\n\\n\\t\\thandleTickRangeOptions: function() {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\tvar opts = me.options;\\n\\t\\t\\tvar tickOpts = opts.ticks;\\n\\n\\t\\t\\t// If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\\n\\t\\t\\t// do nothing since that would make the chart weird. If the user really wants a weird chart\\n\\t\\t\\t// axis, they can manually override it\\n\\t\\t\\tif (tickOpts.beginAtZero) {\\n\\t\\t\\t\\tvar minSign = helpers.sign(me.min);\\n\\t\\t\\t\\tvar maxSign = helpers.sign(me.max);\\n\\n\\t\\t\\t\\tif (minSign < 0 && maxSign < 0) {\\n\\t\\t\\t\\t\\t// move the top up to 0\\n\\t\\t\\t\\t\\tme.max = 0;\\n\\t\\t\\t\\t} else if (minSign > 0 && maxSign > 0) {\\n\\t\\t\\t\\t\\t// move the bottom down to 0\\n\\t\\t\\t\\t\\tme.min = 0;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\\n\\t\\t\\tvar setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\\n\\n\\t\\t\\tif (tickOpts.min !== undefined) {\\n\\t\\t\\t\\tme.min = tickOpts.min;\\n\\t\\t\\t} else if (tickOpts.suggestedMin !== undefined) {\\n\\t\\t\\t\\tif (me.min === null) {\\n\\t\\t\\t\\t\\tme.min = tickOpts.suggestedMin;\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tme.min = Math.min(me.min, tickOpts.suggestedMin);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (tickOpts.max !== undefined) {\\n\\t\\t\\t\\tme.max = tickOpts.max;\\n\\t\\t\\t} else if (tickOpts.suggestedMax !== undefined) {\\n\\t\\t\\t\\tif (me.max === null) {\\n\\t\\t\\t\\t\\tme.max = tickOpts.suggestedMax;\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tme.max = Math.max(me.max, tickOpts.suggestedMax);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (setMin !== setMax) {\\n\\t\\t\\t\\t// We set the min or the max but not both.\\n\\t\\t\\t\\t// So ensure that our range is good\\n\\t\\t\\t\\t// Inverted or 0 length range can happen when\\n\\t\\t\\t\\t// ticks.min is set, and no datasets are visible\\n\\t\\t\\t\\tif (me.min >= me.max) {\\n\\t\\t\\t\\t\\tif (setMin) {\\n\\t\\t\\t\\t\\t\\tme.max = me.min + 1;\\n\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\tme.min = me.max - 1;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (me.min === me.max) {\\n\\t\\t\\t\\tme.max++;\\n\\n\\t\\t\\t\\tif (!tickOpts.beginAtZero) {\\n\\t\\t\\t\\t\\tme.min--;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\tgetTickLimit: noop,\\n\\t\\thandleDirectionalChanges: noop,\\n\\n\\t\\tbuildTicks: function() {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\tvar opts = me.options;\\n\\t\\t\\tvar tickOpts = opts.ticks;\\n\\n\\t\\t\\t// Figure out what the max number of ticks we can support it is based on the size of\\n\\t\\t\\t// the axis area. For now, we say that the minimum tick spacing in pixels must be 50\\n\\t\\t\\t// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\\n\\t\\t\\t// the graph. Make sure we always have at least 2 ticks\\n\\t\\t\\tvar maxTicks = me.getTickLimit();\\n\\t\\t\\tmaxTicks = Math.max(2, maxTicks);\\n\\n\\t\\t\\tvar numericGeneratorOptions = {\\n\\t\\t\\t\\tmaxTicks: maxTicks,\\n\\t\\t\\t\\tmin: tickOpts.min,\\n\\t\\t\\t\\tmax: tickOpts.max,\\n\\t\\t\\t\\tstepSize: helpers.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\\n\\t\\t\\t};\\n\\t\\t\\tvar ticks = me.ticks = Ticks.generators.linear(numericGeneratorOptions, me);\\n\\n\\t\\t\\tme.handleDirectionalChanges();\\n\\n\\t\\t\\t// At this point, we need to update our max and min given the tick values since we have expanded the\\n\\t\\t\\t// range of the scale\\n\\t\\t\\tme.max = helpers.max(ticks);\\n\\t\\t\\tme.min = helpers.min(ticks);\\n\\n\\t\\t\\tif (tickOpts.reverse) {\\n\\t\\t\\t\\tticks.reverse();\\n\\n\\t\\t\\t\\tme.start = me.max;\\n\\t\\t\\t\\tme.end = me.min;\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tme.start = me.min;\\n\\t\\t\\t\\tme.end = me.max;\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\tconvertTicksToLabels: function() {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\tme.ticksAsNumbers = me.ticks.slice();\\n\\t\\t\\tme.zeroLineIndex = me.ticks.indexOf(0);\\n\\n\\t\\t\\tChart.Scale.prototype.convertTicksToLabels.call(me);\\n\\t\\t}\\n\\t});\\n};\\n\\n},{\\\"34\\\":34,\\\"45\\\":45}],55:[function(require,module,exports){\\n'use strict';\\n\\nvar helpers = require(45);\\nvar Ticks = require(34);\\n\\nmodule.exports = function(Chart) {\\n\\n\\tvar defaultConfig = {\\n\\t\\tposition: 'left',\\n\\n\\t\\t// label settings\\n\\t\\tticks: {\\n\\t\\t\\tcallback: Ticks.formatters.logarithmic\\n\\t\\t}\\n\\t};\\n\\n\\tvar LogarithmicScale = Chart.Scale.extend({\\n\\t\\tdetermineDataLimits: function() {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\tvar opts = me.options;\\n\\t\\t\\tvar tickOpts = opts.ticks;\\n\\t\\t\\tvar chart = me.chart;\\n\\t\\t\\tvar data = chart.data;\\n\\t\\t\\tvar datasets = data.datasets;\\n\\t\\t\\tvar valueOrDefault = helpers.valueOrDefault;\\n\\t\\t\\tvar isHorizontal = me.isHorizontal();\\n\\t\\t\\tfunction IDMatches(meta) {\\n\\t\\t\\t\\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Calculate Range\\n\\t\\t\\tme.min = null;\\n\\t\\t\\tme.max = null;\\n\\t\\t\\tme.minNotZero = null;\\n\\n\\t\\t\\tvar hasStacks = opts.stacked;\\n\\t\\t\\tif (hasStacks === undefined) {\\n\\t\\t\\t\\thelpers.each(datasets, function(dataset, datasetIndex) {\\n\\t\\t\\t\\t\\tif (hasStacks) {\\n\\t\\t\\t\\t\\t\\treturn;\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tvar meta = chart.getDatasetMeta(datasetIndex);\\n\\t\\t\\t\\t\\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\\n\\t\\t\\t\\t\\t\\tmeta.stack !== undefined) {\\n\\t\\t\\t\\t\\t\\thasStacks = true;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t});\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (opts.stacked || hasStacks) {\\n\\t\\t\\t\\tvar valuesPerStack = {};\\n\\n\\t\\t\\t\\thelpers.each(datasets, function(dataset, datasetIndex) {\\n\\t\\t\\t\\t\\tvar meta = chart.getDatasetMeta(datasetIndex);\\n\\t\\t\\t\\t\\tvar key = [\\n\\t\\t\\t\\t\\t\\tmeta.type,\\n\\t\\t\\t\\t\\t\\t// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\\n\\t\\t\\t\\t\\t\\t((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\\n\\t\\t\\t\\t\\t\\tmeta.stack\\n\\t\\t\\t\\t\\t].join('.');\\n\\n\\t\\t\\t\\t\\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\\n\\t\\t\\t\\t\\t\\tif (valuesPerStack[key] === undefined) {\\n\\t\\t\\t\\t\\t\\t\\tvaluesPerStack[key] = [];\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\thelpers.each(dataset.data, function(rawValue, index) {\\n\\t\\t\\t\\t\\t\\t\\tvar values = valuesPerStack[key];\\n\\t\\t\\t\\t\\t\\t\\tvar value = +me.getRightValue(rawValue);\\n\\t\\t\\t\\t\\t\\t\\tif (isNaN(value) || meta.data[index].hidden) {\\n\\t\\t\\t\\t\\t\\t\\t\\treturn;\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\tvalues[index] = values[index] || 0;\\n\\n\\t\\t\\t\\t\\t\\t\\tif (opts.relativePoints) {\\n\\t\\t\\t\\t\\t\\t\\t\\tvalues[index] = 100;\\n\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t// Don't need to split positive and negative since the log scale can't handle a 0 crossing\\n\\t\\t\\t\\t\\t\\t\\t\\tvalues[index] += value;\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t});\\n\\n\\t\\t\\t\\thelpers.each(valuesPerStack, function(valuesForType) {\\n\\t\\t\\t\\t\\tvar minVal = helpers.min(valuesForType);\\n\\t\\t\\t\\t\\tvar maxVal = helpers.max(valuesForType);\\n\\t\\t\\t\\t\\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\\n\\t\\t\\t\\t\\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\\n\\t\\t\\t\\t});\\n\\n\\t\\t\\t} else {\\n\\t\\t\\t\\thelpers.each(datasets, function(dataset, datasetIndex) {\\n\\t\\t\\t\\t\\tvar meta = chart.getDatasetMeta(datasetIndex);\\n\\t\\t\\t\\t\\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\\n\\t\\t\\t\\t\\t\\thelpers.each(dataset.data, function(rawValue, index) {\\n\\t\\t\\t\\t\\t\\t\\tvar value = +me.getRightValue(rawValue);\\n\\t\\t\\t\\t\\t\\t\\tif (isNaN(value) || meta.data[index].hidden) {\\n\\t\\t\\t\\t\\t\\t\\t\\treturn;\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\tif (me.min === null) {\\n\\t\\t\\t\\t\\t\\t\\t\\tme.min = value;\\n\\t\\t\\t\\t\\t\\t\\t} else if (value < me.min) {\\n\\t\\t\\t\\t\\t\\t\\t\\tme.min = value;\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\tif (me.max === null) {\\n\\t\\t\\t\\t\\t\\t\\t\\tme.max = value;\\n\\t\\t\\t\\t\\t\\t\\t} else if (value > me.max) {\\n\\t\\t\\t\\t\\t\\t\\t\\tme.max = value;\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\tif (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\\n\\t\\t\\t\\t\\t\\t\\t\\tme.minNotZero = value;\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t});\\n\\t\\t\\t}\\n\\n\\t\\t\\tme.min = valueOrDefault(tickOpts.min, me.min);\\n\\t\\t\\tme.max = valueOrDefault(tickOpts.max, me.max);\\n\\n\\t\\t\\tif (me.min === me.max) {\\n\\t\\t\\t\\tif (me.min !== 0 && me.min !== null) {\\n\\t\\t\\t\\t\\tme.min = Math.pow(10, Math.floor(helpers.log10(me.min)) - 1);\\n\\t\\t\\t\\t\\tme.max = Math.pow(10, Math.floor(helpers.log10(me.max)) + 1);\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tme.min = 1;\\n\\t\\t\\t\\t\\tme.max = 10;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\tbuildTicks: function() {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\tvar opts = me.options;\\n\\t\\t\\tvar tickOpts = opts.ticks;\\n\\n\\t\\t\\tvar generationOptions = {\\n\\t\\t\\t\\tmin: tickOpts.min,\\n\\t\\t\\t\\tmax: tickOpts.max\\n\\t\\t\\t};\\n\\t\\t\\tvar ticks = me.ticks = Ticks.generators.logarithmic(generationOptions, me);\\n\\n\\t\\t\\tif (!me.isHorizontal()) {\\n\\t\\t\\t\\t// We are in a vertical orientation. The top value is the highest. So reverse the array\\n\\t\\t\\t\\tticks.reverse();\\n\\t\\t\\t}\\n\\n\\t\\t\\t// At this point, we need to update our max and min given the tick values since we have expanded the\\n\\t\\t\\t// range of the scale\\n\\t\\t\\tme.max = helpers.max(ticks);\\n\\t\\t\\tme.min = helpers.min(ticks);\\n\\n\\t\\t\\tif (tickOpts.reverse) {\\n\\t\\t\\t\\tticks.reverse();\\n\\n\\t\\t\\t\\tme.start = me.max;\\n\\t\\t\\t\\tme.end = me.min;\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tme.start = me.min;\\n\\t\\t\\t\\tme.end = me.max;\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\tconvertTicksToLabels: function() {\\n\\t\\t\\tthis.tickValues = this.ticks.slice();\\n\\n\\t\\t\\tChart.Scale.prototype.convertTicksToLabels.call(this);\\n\\t\\t},\\n\\t\\t// Get the correct tooltip label\\n\\t\\tgetLabelForIndex: function(index, datasetIndex) {\\n\\t\\t\\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\\n\\t\\t},\\n\\t\\tgetPixelForTick: function(index) {\\n\\t\\t\\treturn this.getPixelForValue(this.tickValues[index]);\\n\\t\\t},\\n\\t\\tgetPixelForValue: function(value) {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\tvar start = me.start;\\n\\t\\t\\tvar newVal = +me.getRightValue(value);\\n\\t\\t\\tvar opts = me.options;\\n\\t\\t\\tvar tickOpts = opts.ticks;\\n\\t\\t\\tvar innerDimension, pixel, range;\\n\\n\\t\\t\\tif (me.isHorizontal()) {\\n\\t\\t\\t\\trange = helpers.log10(me.end) - helpers.log10(start); // todo: if start === 0\\n\\t\\t\\t\\tif (newVal === 0) {\\n\\t\\t\\t\\t\\tpixel = me.left;\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tinnerDimension = me.width;\\n\\t\\t\\t\\t\\tpixel = me.left + (innerDimension / range * (helpers.log10(newVal) - helpers.log10(start)));\\n\\t\\t\\t\\t}\\n\\t\\t\\t} else {\\n\\t\\t\\t\\t// Bottom - top since pixels increase downward on a screen\\n\\t\\t\\t\\tinnerDimension = me.height;\\n\\t\\t\\t\\tif (start === 0 && !tickOpts.reverse) {\\n\\t\\t\\t\\t\\trange = helpers.log10(me.end) - helpers.log10(me.minNotZero);\\n\\t\\t\\t\\t\\tif (newVal === start) {\\n\\t\\t\\t\\t\\t\\tpixel = me.bottom;\\n\\t\\t\\t\\t\\t} else if (newVal === me.minNotZero) {\\n\\t\\t\\t\\t\\t\\tpixel = me.bottom - innerDimension * 0.02;\\n\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\tpixel = me.bottom - innerDimension * 0.02 - (innerDimension * 0.98 / range * (helpers.log10(newVal) - helpers.log10(me.minNotZero)));\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t} else if (me.end === 0 && tickOpts.reverse) {\\n\\t\\t\\t\\t\\trange = helpers.log10(me.start) - helpers.log10(me.minNotZero);\\n\\t\\t\\t\\t\\tif (newVal === me.end) {\\n\\t\\t\\t\\t\\t\\tpixel = me.top;\\n\\t\\t\\t\\t\\t} else if (newVal === me.minNotZero) {\\n\\t\\t\\t\\t\\t\\tpixel = me.top + innerDimension * 0.02;\\n\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\tpixel = me.top + innerDimension * 0.02 + (innerDimension * 0.98 / range * (helpers.log10(newVal) - helpers.log10(me.minNotZero)));\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t} else if (newVal === 0) {\\n\\t\\t\\t\\t\\tpixel = tickOpts.reverse ? me.top : me.bottom;\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\trange = helpers.log10(me.end) - helpers.log10(start);\\n\\t\\t\\t\\t\\tinnerDimension = me.height;\\n\\t\\t\\t\\t\\tpixel = me.bottom - (innerDimension / range * (helpers.log10(newVal) - helpers.log10(start)));\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\treturn pixel;\\n\\t\\t},\\n\\t\\tgetValueForPixel: function(pixel) {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\tvar range = helpers.log10(me.end) - helpers.log10(me.start);\\n\\t\\t\\tvar value, innerDimension;\\n\\n\\t\\t\\tif (me.isHorizontal()) {\\n\\t\\t\\t\\tinnerDimension = me.width;\\n\\t\\t\\t\\tvalue = me.start * Math.pow(10, (pixel - me.left) * range / innerDimension);\\n\\t\\t\\t} else { // todo: if start === 0\\n\\t\\t\\t\\tinnerDimension = me.height;\\n\\t\\t\\t\\tvalue = Math.pow(10, (me.bottom - pixel) * range / innerDimension) / me.start;\\n\\t\\t\\t}\\n\\t\\t\\treturn value;\\n\\t\\t}\\n\\t});\\n\\tChart.scaleService.registerScaleType('logarithmic', LogarithmicScale, defaultConfig);\\n\\n};\\n\\n},{\\\"34\\\":34,\\\"45\\\":45}],56:[function(require,module,exports){\\n'use strict';\\n\\nvar defaults = require(25);\\nvar helpers = require(45);\\nvar Ticks = require(34);\\n\\nmodule.exports = function(Chart) {\\n\\n\\tvar globalDefaults = defaults.global;\\n\\n\\tvar defaultConfig = {\\n\\t\\tdisplay: true,\\n\\n\\t\\t// Boolean - Whether to animate scaling the chart from the centre\\n\\t\\tanimate: true,\\n\\t\\tposition: 'chartArea',\\n\\n\\t\\tangleLines: {\\n\\t\\t\\tdisplay: true,\\n\\t\\t\\tcolor: 'rgba(0, 0, 0, 0.1)',\\n\\t\\t\\tlineWidth: 1\\n\\t\\t},\\n\\n\\t\\tgridLines: {\\n\\t\\t\\tcircular: false\\n\\t\\t},\\n\\n\\t\\t// label settings\\n\\t\\tticks: {\\n\\t\\t\\t// Boolean - Show a backdrop to the scale label\\n\\t\\t\\tshowLabelBackdrop: true,\\n\\n\\t\\t\\t// String - The colour of the label backdrop\\n\\t\\t\\tbackdropColor: 'rgba(255,255,255,0.75)',\\n\\n\\t\\t\\t// Number - The backdrop padding above & below the label in pixels\\n\\t\\t\\tbackdropPaddingY: 2,\\n\\n\\t\\t\\t// Number - The backdrop padding to the side of the label in pixels\\n\\t\\t\\tbackdropPaddingX: 2,\\n\\n\\t\\t\\tcallback: Ticks.formatters.linear\\n\\t\\t},\\n\\n\\t\\tpointLabels: {\\n\\t\\t\\t// Boolean - if true, show point labels\\n\\t\\t\\tdisplay: true,\\n\\n\\t\\t\\t// Number - Point label font size in pixels\\n\\t\\t\\tfontSize: 10,\\n\\n\\t\\t\\t// Function - Used to convert point labels\\n\\t\\t\\tcallback: function(label) {\\n\\t\\t\\t\\treturn label;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t};\\n\\n\\tfunction getValueCount(scale) {\\n\\t\\tvar opts = scale.options;\\n\\t\\treturn opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\\n\\t}\\n\\n\\tfunction getPointLabelFontOptions(scale) {\\n\\t\\tvar pointLabelOptions = scale.options.pointLabels;\\n\\t\\tvar fontSize = helpers.valueOrDefault(pointLabelOptions.fontSize, globalDefaults.defaultFontSize);\\n\\t\\tvar fontStyle = helpers.valueOrDefault(pointLabelOptions.fontStyle, globalDefaults.defaultFontStyle);\\n\\t\\tvar fontFamily = helpers.valueOrDefault(pointLabelOptions.fontFamily, globalDefaults.defaultFontFamily);\\n\\t\\tvar font = helpers.fontString(fontSize, fontStyle, fontFamily);\\n\\n\\t\\treturn {\\n\\t\\t\\tsize: fontSize,\\n\\t\\t\\tstyle: fontStyle,\\n\\t\\t\\tfamily: fontFamily,\\n\\t\\t\\tfont: font\\n\\t\\t};\\n\\t}\\n\\n\\tfunction measureLabelSize(ctx, fontSize, label) {\\n\\t\\tif (helpers.isArray(label)) {\\n\\t\\t\\treturn {\\n\\t\\t\\t\\tw: helpers.longestText(ctx, ctx.font, label),\\n\\t\\t\\t\\th: (label.length * fontSize) + ((label.length - 1) * 1.5 * fontSize)\\n\\t\\t\\t};\\n\\t\\t}\\n\\n\\t\\treturn {\\n\\t\\t\\tw: ctx.measureText(label).width,\\n\\t\\t\\th: fontSize\\n\\t\\t};\\n\\t}\\n\\n\\tfunction determineLimits(angle, pos, size, min, max) {\\n\\t\\tif (angle === min || angle === max) {\\n\\t\\t\\treturn {\\n\\t\\t\\t\\tstart: pos - (size / 2),\\n\\t\\t\\t\\tend: pos + (size / 2)\\n\\t\\t\\t};\\n\\t\\t} else if (angle < min || angle > max) {\\n\\t\\t\\treturn {\\n\\t\\t\\t\\tstart: pos - size - 5,\\n\\t\\t\\t\\tend: pos\\n\\t\\t\\t};\\n\\t\\t}\\n\\n\\t\\treturn {\\n\\t\\t\\tstart: pos,\\n\\t\\t\\tend: pos + size + 5\\n\\t\\t};\\n\\t}\\n\\n\\t/**\\n\\t * Helper function to fit a radial linear scale with point labels\\n\\t */\\n\\tfunction fitWithPointLabels(scale) {\\n\\t\\t/*\\n\\t\\t * Right, this is really confusing and there is a lot of maths going on here\\n\\t\\t * The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\\n\\t\\t *\\n\\t\\t * Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\\n\\t\\t *\\n\\t\\t * Solution:\\n\\t\\t *\\n\\t\\t * We assume the radius of the polygon is half the size of the canvas at first\\n\\t\\t * at each index we check if the text overlaps.\\n\\t\\t *\\n\\t\\t * Where it does, we store that angle and that index.\\n\\t\\t *\\n\\t\\t * After finding the largest index and angle we calculate how much we need to remove\\n\\t\\t * from the shape radius to move the point inwards by that x.\\n\\t\\t *\\n\\t\\t * We average the left and right distances to get the maximum shape radius that can fit in the box\\n\\t\\t * along with labels.\\n\\t\\t *\\n\\t\\t * Once we have that, we can find the centre point for the chart, by taking the x text protrusion\\n\\t\\t * on each side, removing that from the size, halving it and adding the left x protrusion width.\\n\\t\\t *\\n\\t\\t * This will mean we have a shape fitted to the canvas, as large as it can be with the labels\\n\\t\\t * and position it in the most space efficient manner\\n\\t\\t *\\n\\t\\t * https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\\n\\t\\t */\\n\\n\\t\\tvar plFont = getPointLabelFontOptions(scale);\\n\\n\\t\\t// Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\\n\\t\\t// Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\\n\\t\\tvar largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);\\n\\t\\tvar furthestLimits = {\\n\\t\\t\\tr: scale.width,\\n\\t\\t\\tl: 0,\\n\\t\\t\\tt: scale.height,\\n\\t\\t\\tb: 0\\n\\t\\t};\\n\\t\\tvar furthestAngles = {};\\n\\t\\tvar i, textSize, pointPosition;\\n\\n\\t\\tscale.ctx.font = plFont.font;\\n\\t\\tscale._pointLabelSizes = [];\\n\\n\\t\\tvar valueCount = getValueCount(scale);\\n\\t\\tfor (i = 0; i < valueCount; i++) {\\n\\t\\t\\tpointPosition = scale.getPointPosition(i, largestPossibleRadius);\\n\\t\\t\\ttextSize = measureLabelSize(scale.ctx, plFont.size, scale.pointLabels[i] || '');\\n\\t\\t\\tscale._pointLabelSizes[i] = textSize;\\n\\n\\t\\t\\t// Add quarter circle to make degree 0 mean top of circle\\n\\t\\t\\tvar angleRadians = scale.getIndexAngle(i);\\n\\t\\t\\tvar angle = helpers.toDegrees(angleRadians) % 360;\\n\\t\\t\\tvar hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\\n\\t\\t\\tvar vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\\n\\n\\t\\t\\tif (hLimits.start < furthestLimits.l) {\\n\\t\\t\\t\\tfurthestLimits.l = hLimits.start;\\n\\t\\t\\t\\tfurthestAngles.l = angleRadians;\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (hLimits.end > furthestLimits.r) {\\n\\t\\t\\t\\tfurthestLimits.r = hLimits.end;\\n\\t\\t\\t\\tfurthestAngles.r = angleRadians;\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (vLimits.start < furthestLimits.t) {\\n\\t\\t\\t\\tfurthestLimits.t = vLimits.start;\\n\\t\\t\\t\\tfurthestAngles.t = angleRadians;\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (vLimits.end > furthestLimits.b) {\\n\\t\\t\\t\\tfurthestLimits.b = vLimits.end;\\n\\t\\t\\t\\tfurthestAngles.b = angleRadians;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tscale.setReductions(largestPossibleRadius, furthestLimits, furthestAngles);\\n\\t}\\n\\n\\t/**\\n\\t * Helper function to fit a radial linear scale with no point labels\\n\\t */\\n\\tfunction fit(scale) {\\n\\t\\tvar largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);\\n\\t\\tscale.drawingArea = Math.round(largestPossibleRadius);\\n\\t\\tscale.setCenterPoint(0, 0, 0, 0);\\n\\t}\\n\\n\\tfunction getTextAlignForAngle(angle) {\\n\\t\\tif (angle === 0 || angle === 180) {\\n\\t\\t\\treturn 'center';\\n\\t\\t} else if (angle < 180) {\\n\\t\\t\\treturn 'left';\\n\\t\\t}\\n\\n\\t\\treturn 'right';\\n\\t}\\n\\n\\tfunction fillText(ctx, text, position, fontSize) {\\n\\t\\tif (helpers.isArray(text)) {\\n\\t\\t\\tvar y = position.y;\\n\\t\\t\\tvar spacing = 1.5 * fontSize;\\n\\n\\t\\t\\tfor (var i = 0; i < text.length; ++i) {\\n\\t\\t\\t\\tctx.fillText(text[i], position.x, y);\\n\\t\\t\\t\\ty += spacing;\\n\\t\\t\\t}\\n\\t\\t} else {\\n\\t\\t\\tctx.fillText(text, position.x, position.y);\\n\\t\\t}\\n\\t}\\n\\n\\tfunction adjustPointPositionForLabelHeight(angle, textSize, position) {\\n\\t\\tif (angle === 90 || angle === 270) {\\n\\t\\t\\tposition.y -= (textSize.h / 2);\\n\\t\\t} else if (angle > 270 || angle < 90) {\\n\\t\\t\\tposition.y -= textSize.h;\\n\\t\\t}\\n\\t}\\n\\n\\tfunction drawPointLabels(scale) {\\n\\t\\tvar ctx = scale.ctx;\\n\\t\\tvar valueOrDefault = helpers.valueOrDefault;\\n\\t\\tvar opts = scale.options;\\n\\t\\tvar angleLineOpts = opts.angleLines;\\n\\t\\tvar pointLabelOpts = opts.pointLabels;\\n\\n\\t\\tctx.lineWidth = angleLineOpts.lineWidth;\\n\\t\\tctx.strokeStyle = angleLineOpts.color;\\n\\n\\t\\tvar outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\\n\\n\\t\\t// Point Label Font\\n\\t\\tvar plFont = getPointLabelFontOptions(scale);\\n\\n\\t\\tctx.textBaseline = 'top';\\n\\n\\t\\tfor (var i = getValueCount(scale) - 1; i >= 0; i--) {\\n\\t\\t\\tif (angleLineOpts.display) {\\n\\t\\t\\t\\tvar outerPosition = scale.getPointPosition(i, outerDistance);\\n\\t\\t\\t\\tctx.beginPath();\\n\\t\\t\\t\\tctx.moveTo(scale.xCenter, scale.yCenter);\\n\\t\\t\\t\\tctx.lineTo(outerPosition.x, outerPosition.y);\\n\\t\\t\\t\\tctx.stroke();\\n\\t\\t\\t\\tctx.closePath();\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (pointLabelOpts.display) {\\n\\t\\t\\t\\t// Extra 3px out for some label spacing\\n\\t\\t\\t\\tvar pointLabelPosition = scale.getPointPosition(i, outerDistance + 5);\\n\\n\\t\\t\\t\\t// Keep this in loop since we may support array properties here\\n\\t\\t\\t\\tvar pointLabelFontColor = valueOrDefault(pointLabelOpts.fontColor, globalDefaults.defaultFontColor);\\n\\t\\t\\t\\tctx.font = plFont.font;\\n\\t\\t\\t\\tctx.fillStyle = pointLabelFontColor;\\n\\n\\t\\t\\t\\tvar angleRadians = scale.getIndexAngle(i);\\n\\t\\t\\t\\tvar angle = helpers.toDegrees(angleRadians);\\n\\t\\t\\t\\tctx.textAlign = getTextAlignForAngle(angle);\\n\\t\\t\\t\\tadjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\\n\\t\\t\\t\\tfillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.size);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\tfunction drawRadiusLine(scale, gridLineOpts, radius, index) {\\n\\t\\tvar ctx = scale.ctx;\\n\\t\\tctx.strokeStyle = helpers.valueAtIndexOrDefault(gridLineOpts.color, index - 1);\\n\\t\\tctx.lineWidth = helpers.valueAtIndexOrDefault(gridLineOpts.lineWidth, index - 1);\\n\\n\\t\\tif (scale.options.gridLines.circular) {\\n\\t\\t\\t// Draw circular arcs between the points\\n\\t\\t\\tctx.beginPath();\\n\\t\\t\\tctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\\n\\t\\t\\tctx.closePath();\\n\\t\\t\\tctx.stroke();\\n\\t\\t} else {\\n\\t\\t\\t// Draw straight lines connecting each index\\n\\t\\t\\tvar valueCount = getValueCount(scale);\\n\\n\\t\\t\\tif (valueCount === 0) {\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\n\\t\\t\\tctx.beginPath();\\n\\t\\t\\tvar pointPosition = scale.getPointPosition(0, radius);\\n\\t\\t\\tctx.moveTo(pointPosition.x, pointPosition.y);\\n\\n\\t\\t\\tfor (var i = 1; i < valueCount; i++) {\\n\\t\\t\\t\\tpointPosition = scale.getPointPosition(i, radius);\\n\\t\\t\\t\\tctx.lineTo(pointPosition.x, pointPosition.y);\\n\\t\\t\\t}\\n\\n\\t\\t\\tctx.closePath();\\n\\t\\t\\tctx.stroke();\\n\\t\\t}\\n\\t}\\n\\n\\tfunction numberOrZero(param) {\\n\\t\\treturn helpers.isNumber(param) ? param : 0;\\n\\t}\\n\\n\\tvar LinearRadialScale = Chart.LinearScaleBase.extend({\\n\\t\\tsetDimensions: function() {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\tvar opts = me.options;\\n\\t\\t\\tvar tickOpts = opts.ticks;\\n\\t\\t\\t// Set the unconstrained dimension before label rotation\\n\\t\\t\\tme.width = me.maxWidth;\\n\\t\\t\\tme.height = me.maxHeight;\\n\\t\\t\\tme.xCenter = Math.round(me.width / 2);\\n\\t\\t\\tme.yCenter = Math.round(me.height / 2);\\n\\n\\t\\t\\tvar minSize = helpers.min([me.height, me.width]);\\n\\t\\t\\tvar tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\\n\\t\\t\\tme.drawingArea = opts.display ? (minSize / 2) - (tickFontSize / 2 + tickOpts.backdropPaddingY) : (minSize / 2);\\n\\t\\t},\\n\\t\\tdetermineDataLimits: function() {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\tvar chart = me.chart;\\n\\t\\t\\tvar min = Number.POSITIVE_INFINITY;\\n\\t\\t\\tvar max = Number.NEGATIVE_INFINITY;\\n\\n\\t\\t\\thelpers.each(chart.data.datasets, function(dataset, datasetIndex) {\\n\\t\\t\\t\\tif (chart.isDatasetVisible(datasetIndex)) {\\n\\t\\t\\t\\t\\tvar meta = chart.getDatasetMeta(datasetIndex);\\n\\n\\t\\t\\t\\t\\thelpers.each(dataset.data, function(rawValue, index) {\\n\\t\\t\\t\\t\\t\\tvar value = +me.getRightValue(rawValue);\\n\\t\\t\\t\\t\\t\\tif (isNaN(value) || meta.data[index].hidden) {\\n\\t\\t\\t\\t\\t\\t\\treturn;\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\tmin = Math.min(value, min);\\n\\t\\t\\t\\t\\t\\tmax = Math.max(value, max);\\n\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t}\\n\\t\\t\\t});\\n\\n\\t\\t\\tme.min = (min === Number.POSITIVE_INFINITY ? 0 : min);\\n\\t\\t\\tme.max = (max === Number.NEGATIVE_INFINITY ? 0 : max);\\n\\n\\t\\t\\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\\n\\t\\t\\tme.handleTickRangeOptions();\\n\\t\\t},\\n\\t\\tgetTickLimit: function() {\\n\\t\\t\\tvar tickOpts = this.options.ticks;\\n\\t\\t\\tvar tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\\n\\t\\t\\treturn Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(this.drawingArea / (1.5 * tickFontSize)));\\n\\t\\t},\\n\\t\\tconvertTicksToLabels: function() {\\n\\t\\t\\tvar me = this;\\n\\n\\t\\t\\tChart.LinearScaleBase.prototype.convertTicksToLabels.call(me);\\n\\n\\t\\t\\t// Point labels\\n\\t\\t\\tme.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\\n\\t\\t},\\n\\t\\tgetLabelForIndex: function(index, datasetIndex) {\\n\\t\\t\\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\\n\\t\\t},\\n\\t\\tfit: function() {\\n\\t\\t\\tif (this.options.pointLabels.display) {\\n\\t\\t\\t\\tfitWithPointLabels(this);\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tfit(this);\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\t/**\\n\\t\\t * Set radius reductions and determine new radius and center point\\n\\t\\t * @private\\n\\t\\t */\\n\\t\\tsetReductions: function(largestPossibleRadius, furthestLimits, furthestAngles) {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\tvar radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\\n\\t\\t\\tvar radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\\n\\t\\t\\tvar radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\\n\\t\\t\\tvar radiusReductionBottom = -Math.max(furthestLimits.b - me.height, 0) / Math.cos(furthestAngles.b);\\n\\n\\t\\t\\tradiusReductionLeft = numberOrZero(radiusReductionLeft);\\n\\t\\t\\tradiusReductionRight = numberOrZero(radiusReductionRight);\\n\\t\\t\\tradiusReductionTop = numberOrZero(radiusReductionTop);\\n\\t\\t\\tradiusReductionBottom = numberOrZero(radiusReductionBottom);\\n\\n\\t\\t\\tme.drawingArea = Math.min(\\n\\t\\t\\t\\tMath.round(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\\n\\t\\t\\t\\tMath.round(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\\n\\t\\t\\tme.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\\n\\t\\t},\\n\\t\\tsetCenterPoint: function(leftMovement, rightMovement, topMovement, bottomMovement) {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\tvar maxRight = me.width - rightMovement - me.drawingArea;\\n\\t\\t\\tvar maxLeft = leftMovement + me.drawingArea;\\n\\t\\t\\tvar maxTop = topMovement + me.drawingArea;\\n\\t\\t\\tvar maxBottom = me.height - bottomMovement - me.drawingArea;\\n\\n\\t\\t\\tme.xCenter = Math.round(((maxLeft + maxRight) / 2) + me.left);\\n\\t\\t\\tme.yCenter = Math.round(((maxTop + maxBottom) / 2) + me.top);\\n\\t\\t},\\n\\n\\t\\tgetIndexAngle: function(index) {\\n\\t\\t\\tvar angleMultiplier = (Math.PI * 2) / getValueCount(this);\\n\\t\\t\\tvar startAngle = this.chart.options && this.chart.options.startAngle ?\\n\\t\\t\\t\\tthis.chart.options.startAngle :\\n\\t\\t\\t\\t0;\\n\\n\\t\\t\\tvar startAngleRadians = startAngle * Math.PI * 2 / 360;\\n\\n\\t\\t\\t// Start from the top instead of right, so remove a quarter of the circle\\n\\t\\t\\treturn index * angleMultiplier + startAngleRadians;\\n\\t\\t},\\n\\t\\tgetDistanceFromCenterForValue: function(value) {\\n\\t\\t\\tvar me = this;\\n\\n\\t\\t\\tif (value === null) {\\n\\t\\t\\t\\treturn 0; // null always in center\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Take into account half font size + the yPadding of the top value\\n\\t\\t\\tvar scalingFactor = me.drawingArea / (me.max - me.min);\\n\\t\\t\\tif (me.options.ticks.reverse) {\\n\\t\\t\\t\\treturn (me.max - value) * scalingFactor;\\n\\t\\t\\t}\\n\\t\\t\\treturn (value - me.min) * scalingFactor;\\n\\t\\t},\\n\\t\\tgetPointPosition: function(index, distanceFromCenter) {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\tvar thisAngle = me.getIndexAngle(index) - (Math.PI / 2);\\n\\t\\t\\treturn {\\n\\t\\t\\t\\tx: Math.round(Math.cos(thisAngle) * distanceFromCenter) + me.xCenter,\\n\\t\\t\\t\\ty: Math.round(Math.sin(thisAngle) * distanceFromCenter) + me.yCenter\\n\\t\\t\\t};\\n\\t\\t},\\n\\t\\tgetPointPositionForValue: function(index, value) {\\n\\t\\t\\treturn this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\\n\\t\\t},\\n\\n\\t\\tgetBasePosition: function() {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\tvar min = me.min;\\n\\t\\t\\tvar max = me.max;\\n\\n\\t\\t\\treturn me.getPointPositionForValue(0,\\n\\t\\t\\t\\tme.beginAtZero ? 0 :\\n\\t\\t\\t\\tmin < 0 && max < 0 ? max :\\n\\t\\t\\t\\tmin > 0 && max > 0 ? min :\\n\\t\\t\\t\\t0);\\n\\t\\t},\\n\\n\\t\\tdraw: function() {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\tvar opts = me.options;\\n\\t\\t\\tvar gridLineOpts = opts.gridLines;\\n\\t\\t\\tvar tickOpts = opts.ticks;\\n\\t\\t\\tvar valueOrDefault = helpers.valueOrDefault;\\n\\n\\t\\t\\tif (opts.display) {\\n\\t\\t\\t\\tvar ctx = me.ctx;\\n\\t\\t\\t\\tvar startAngle = this.getIndexAngle(0);\\n\\n\\t\\t\\t\\t// Tick Font\\n\\t\\t\\t\\tvar tickFontSize = valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\\n\\t\\t\\t\\tvar tickFontStyle = valueOrDefault(tickOpts.fontStyle, globalDefaults.defaultFontStyle);\\n\\t\\t\\t\\tvar tickFontFamily = valueOrDefault(tickOpts.fontFamily, globalDefaults.defaultFontFamily);\\n\\t\\t\\t\\tvar tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);\\n\\n\\t\\t\\t\\thelpers.each(me.ticks, function(label, index) {\\n\\t\\t\\t\\t\\t// Don't draw a centre value (if it is minimum)\\n\\t\\t\\t\\t\\tif (index > 0 || tickOpts.reverse) {\\n\\t\\t\\t\\t\\t\\tvar yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]);\\n\\n\\t\\t\\t\\t\\t\\t// Draw circular lines around the scale\\n\\t\\t\\t\\t\\t\\tif (gridLineOpts.display && index !== 0) {\\n\\t\\t\\t\\t\\t\\t\\tdrawRadiusLine(me, gridLineOpts, yCenterOffset, index);\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\tif (tickOpts.display) {\\n\\t\\t\\t\\t\\t\\t\\tvar tickFontColor = valueOrDefault(tickOpts.fontColor, globalDefaults.defaultFontColor);\\n\\t\\t\\t\\t\\t\\t\\tctx.font = tickLabelFont;\\n\\n\\t\\t\\t\\t\\t\\t\\tctx.save();\\n\\t\\t\\t\\t\\t\\t\\tctx.translate(me.xCenter, me.yCenter);\\n\\t\\t\\t\\t\\t\\t\\tctx.rotate(startAngle);\\n\\n\\t\\t\\t\\t\\t\\t\\tif (tickOpts.showLabelBackdrop) {\\n\\t\\t\\t\\t\\t\\t\\t\\tvar labelWidth = ctx.measureText(label).width;\\n\\t\\t\\t\\t\\t\\t\\t\\tctx.fillStyle = tickOpts.backdropColor;\\n\\t\\t\\t\\t\\t\\t\\t\\tctx.fillRect(\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t-labelWidth / 2 - tickOpts.backdropPaddingX,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t-yCenterOffset - tickFontSize / 2 - tickOpts.backdropPaddingY,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tlabelWidth + tickOpts.backdropPaddingX * 2,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\ttickFontSize + tickOpts.backdropPaddingY * 2\\n\\t\\t\\t\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\tctx.textAlign = 'center';\\n\\t\\t\\t\\t\\t\\t\\tctx.textBaseline = 'middle';\\n\\t\\t\\t\\t\\t\\t\\tctx.fillStyle = tickFontColor;\\n\\t\\t\\t\\t\\t\\t\\tctx.fillText(label, 0, -yCenterOffset);\\n\\t\\t\\t\\t\\t\\t\\tctx.restore();\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t});\\n\\n\\t\\t\\t\\tif (opts.angleLines.display || opts.pointLabels.display) {\\n\\t\\t\\t\\t\\tdrawPointLabels(me);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t});\\n\\tChart.scaleService.registerScaleType('radialLinear', LinearRadialScale, defaultConfig);\\n\\n};\\n\\n},{\\\"25\\\":25,\\\"34\\\":34,\\\"45\\\":45}],57:[function(require,module,exports){\\n/* global window: false */\\n'use strict';\\n\\nvar moment = require(6);\\nmoment = typeof moment === 'function' ? moment : window.moment;\\n\\nvar defaults = require(25);\\nvar helpers = require(45);\\n\\n// Integer constants are from the ES6 spec.\\nvar MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\\nvar MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\\n\\nvar INTERVALS = {\\n\\tmillisecond: {\\n\\t\\tmajor: true,\\n\\t\\tsize: 1,\\n\\t\\tsteps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\\n\\t},\\n\\tsecond: {\\n\\t\\tmajor: true,\\n\\t\\tsize: 1000,\\n\\t\\tsteps: [1, 2, 5, 10, 30]\\n\\t},\\n\\tminute: {\\n\\t\\tmajor: true,\\n\\t\\tsize: 60000,\\n\\t\\tsteps: [1, 2, 5, 10, 30]\\n\\t},\\n\\thour: {\\n\\t\\tmajor: true,\\n\\t\\tsize: 3600000,\\n\\t\\tsteps: [1, 2, 3, 6, 12]\\n\\t},\\n\\tday: {\\n\\t\\tmajor: true,\\n\\t\\tsize: 86400000,\\n\\t\\tsteps: [1, 2, 5]\\n\\t},\\n\\tweek: {\\n\\t\\tmajor: false,\\n\\t\\tsize: 604800000,\\n\\t\\tsteps: [1, 2, 3, 4]\\n\\t},\\n\\tmonth: {\\n\\t\\tmajor: true,\\n\\t\\tsize: 2.628e9,\\n\\t\\tsteps: [1, 2, 3]\\n\\t},\\n\\tquarter: {\\n\\t\\tmajor: false,\\n\\t\\tsize: 7.884e9,\\n\\t\\tsteps: [1, 2, 3, 4]\\n\\t},\\n\\tyear: {\\n\\t\\tmajor: true,\\n\\t\\tsize: 3.154e10\\n\\t}\\n};\\n\\nvar UNITS = Object.keys(INTERVALS);\\n\\nfunction sorter(a, b) {\\n\\treturn a - b;\\n}\\n\\nfunction arrayUnique(items) {\\n\\tvar hash = {};\\n\\tvar out = [];\\n\\tvar i, ilen, item;\\n\\n\\tfor (i = 0, ilen = items.length; i < ilen; ++i) {\\n\\t\\titem = items[i];\\n\\t\\tif (!hash[item]) {\\n\\t\\t\\thash[item] = true;\\n\\t\\t\\tout.push(item);\\n\\t\\t}\\n\\t}\\n\\n\\treturn out;\\n}\\n\\n/**\\n * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\\n * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\\n * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\\n * extremity (left + width or top + height). Note that it would be more optimized to directly\\n * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\\n * to create the lookup table. The table ALWAYS contains at least two items: min and max.\\n *\\n * @param {Number[]} timestamps - timestamps sorted from lowest to highest.\\n * @param {String} distribution - If 'linear', timestamps will be spread linearly along the min\\n * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\\n * If 'series', timestamps will be positioned at the same distance from each other. In this\\n * case, only timestamps that break the time linearity are registered, meaning that in the\\n * best case, all timestamps are linear, the table contains only min and max.\\n */\\nfunction buildLookupTable(timestamps, min, max, distribution) {\\n\\tif (distribution === 'linear' || !timestamps.length) {\\n\\t\\treturn [\\n\\t\\t\\t{time: min, pos: 0},\\n\\t\\t\\t{time: max, pos: 1}\\n\\t\\t];\\n\\t}\\n\\n\\tvar table = [];\\n\\tvar items = [min];\\n\\tvar i, ilen, prev, curr, next;\\n\\n\\tfor (i = 0, ilen = timestamps.length; i < ilen; ++i) {\\n\\t\\tcurr = timestamps[i];\\n\\t\\tif (curr > min && curr < max) {\\n\\t\\t\\titems.push(curr);\\n\\t\\t}\\n\\t}\\n\\n\\titems.push(max);\\n\\n\\tfor (i = 0, ilen = items.length; i < ilen; ++i) {\\n\\t\\tnext = items[i + 1];\\n\\t\\tprev = items[i - 1];\\n\\t\\tcurr = items[i];\\n\\n\\t\\t// only add points that breaks the scale linearity\\n\\t\\tif (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\\n\\t\\t\\ttable.push({time: curr, pos: i / (ilen - 1)});\\n\\t\\t}\\n\\t}\\n\\n\\treturn table;\\n}\\n\\n// @see adapted from http://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\\nfunction lookup(table, key, value) {\\n\\tvar lo = 0;\\n\\tvar hi = table.length - 1;\\n\\tvar mid, i0, i1;\\n\\n\\twhile (lo >= 0 && lo <= hi) {\\n\\t\\tmid = (lo + hi) >> 1;\\n\\t\\ti0 = table[mid - 1] || null;\\n\\t\\ti1 = table[mid];\\n\\n\\t\\tif (!i0) {\\n\\t\\t\\t// given value is outside table (before first item)\\n\\t\\t\\treturn {lo: null, hi: i1};\\n\\t\\t} else if (i1[key] < value) {\\n\\t\\t\\tlo = mid + 1;\\n\\t\\t} else if (i0[key] > value) {\\n\\t\\t\\thi = mid - 1;\\n\\t\\t} else {\\n\\t\\t\\treturn {lo: i0, hi: i1};\\n\\t\\t}\\n\\t}\\n\\n\\t// given value is outside table (after last item)\\n\\treturn {lo: i1, hi: null};\\n}\\n\\n/**\\n * Linearly interpolates the given source `value` using the table items `skey` values and\\n * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\\n * returns the position for a timestamp equal to 42. If value is out of bounds, values at\\n * index [0, 1] or [n - 1, n] are used for the interpolation.\\n */\\nfunction interpolate(table, skey, sval, tkey) {\\n\\tvar range = lookup(table, skey, sval);\\n\\n\\t// Note: the lookup table ALWAYS contains at least 2 items (min and max)\\n\\tvar prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\\n\\tvar next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\\n\\n\\tvar span = next[skey] - prev[skey];\\n\\tvar ratio = span ? (sval - prev[skey]) / span : 0;\\n\\tvar offset = (next[tkey] - prev[tkey]) * ratio;\\n\\n\\treturn prev[tkey] + offset;\\n}\\n\\n/**\\n * Convert the given value to a moment object using the given time options.\\n * @see http://momentjs.com/docs/#/parsing/\\n */\\nfunction momentify(value, options) {\\n\\tvar parser = options.parser;\\n\\tvar format = options.parser || options.format;\\n\\n\\tif (typeof parser === 'function') {\\n\\t\\treturn parser(value);\\n\\t}\\n\\n\\tif (typeof value === 'string' && typeof format === 'string') {\\n\\t\\treturn moment(value, format);\\n\\t}\\n\\n\\tif (!(value instanceof moment)) {\\n\\t\\tvalue = moment(value);\\n\\t}\\n\\n\\tif (value.isValid()) {\\n\\t\\treturn value;\\n\\t}\\n\\n\\t// Labels are in an incompatible moment format and no `parser` has been provided.\\n\\t// The user might still use the deprecated `format` option to convert his inputs.\\n\\tif (typeof format === 'function') {\\n\\t\\treturn format(value);\\n\\t}\\n\\n\\treturn value;\\n}\\n\\nfunction parse(input, scale) {\\n\\tif (helpers.isNullOrUndef(input)) {\\n\\t\\treturn null;\\n\\t}\\n\\n\\tvar options = scale.options.time;\\n\\tvar value = momentify(scale.getRightValue(input), options);\\n\\tif (!value.isValid()) {\\n\\t\\treturn null;\\n\\t}\\n\\n\\tif (options.round) {\\n\\t\\tvalue.startOf(options.round);\\n\\t}\\n\\n\\treturn value.valueOf();\\n}\\n\\n/**\\n * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\\n * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\\n */\\nfunction determineStepSize(min, max, unit, capacity) {\\n\\tvar range = max - min;\\n\\tvar interval = INTERVALS[unit];\\n\\tvar milliseconds = interval.size;\\n\\tvar steps = interval.steps;\\n\\tvar i, ilen, factor;\\n\\n\\tif (!steps) {\\n\\t\\treturn Math.ceil(range / ((capacity || 1) * milliseconds));\\n\\t}\\n\\n\\tfor (i = 0, ilen = steps.length; i < ilen; ++i) {\\n\\t\\tfactor = steps[i];\\n\\t\\tif (Math.ceil(range / (milliseconds * factor)) <= capacity) {\\n\\t\\t\\tbreak;\\n\\t\\t}\\n\\t}\\n\\n\\treturn factor;\\n}\\n\\nfunction determineUnit(minUnit, min, max, capacity) {\\n\\tvar ilen = UNITS.length;\\n\\tvar i, interval, factor;\\n\\n\\tfor (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\\n\\t\\tinterval = INTERVALS[UNITS[i]];\\n\\t\\tfactor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\\n\\n\\t\\tif (Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\\n\\t\\t\\treturn UNITS[i];\\n\\t\\t}\\n\\t}\\n\\n\\treturn UNITS[ilen - 1];\\n}\\n\\nfunction determineMajorUnit(unit) {\\n\\tfor (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\\n\\t\\tif (INTERVALS[UNITS[i]].major) {\\n\\t\\t\\treturn UNITS[i];\\n\\t\\t}\\n\\t}\\n}\\n\\n/**\\n * Generates a maximum of `capacity` timestamps between min and max, rounded to the\\n * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\\n * Important: this method can return ticks outside the min and max range, it's the\\n * responsibility of the calling code to clamp values if needed.\\n */\\nfunction generate(min, max, minor, major, capacity, options) {\\n\\tvar timeOpts = options.time;\\n\\tvar stepSize = helpers.valueOrDefault(timeOpts.stepSize, timeOpts.unitStepSize);\\n\\tvar weekday = minor === 'week' ? timeOpts.isoWeekday : false;\\n\\tvar majorTicksEnabled = options.ticks.major.enabled;\\n\\tvar interval = INTERVALS[minor];\\n\\tvar first = moment(min);\\n\\tvar last = moment(max);\\n\\tvar ticks = [];\\n\\tvar time;\\n\\n\\tif (!stepSize) {\\n\\t\\tstepSize = determineStepSize(min, max, minor, capacity);\\n\\t}\\n\\n\\t// For 'week' unit, handle the first day of week option\\n\\tif (weekday) {\\n\\t\\tfirst = first.isoWeekday(weekday);\\n\\t\\tlast = last.isoWeekday(weekday);\\n\\t}\\n\\n\\t// Align first/last ticks on unit\\n\\tfirst = first.startOf(weekday ? 'day' : minor);\\n\\tlast = last.startOf(weekday ? 'day' : minor);\\n\\n\\t// Make sure that the last tick include max\\n\\tif (last < max) {\\n\\t\\tlast.add(1, minor);\\n\\t}\\n\\n\\ttime = moment(first);\\n\\n\\tif (majorTicksEnabled && major && !weekday && !timeOpts.round) {\\n\\t\\t// Align the first tick on the previous `minor` unit aligned on the `major` unit:\\n\\t\\t// we first aligned time on the previous `major` unit then add the number of full\\n\\t\\t// stepSize there is between first and the previous major time.\\n\\t\\ttime.startOf(major);\\n\\t\\ttime.add(~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\\n\\t}\\n\\n\\tfor (; time < last; time.add(stepSize, minor)) {\\n\\t\\tticks.push(+time);\\n\\t}\\n\\n\\tticks.push(+time);\\n\\n\\treturn ticks;\\n}\\n\\n/**\\n * Returns the right and left offsets from edges in the form of {left, right}.\\n * Offsets are added when the `offset` option is true.\\n */\\nfunction computeOffsets(table, ticks, min, max, options) {\\n\\tvar left = 0;\\n\\tvar right = 0;\\n\\tvar upper, lower;\\n\\n\\tif (options.offset && ticks.length) {\\n\\t\\tif (!options.time.min) {\\n\\t\\t\\tupper = ticks.length > 1 ? ticks[1] : max;\\n\\t\\t\\tlower = ticks[0];\\n\\t\\t\\tleft = (\\n\\t\\t\\t\\tinterpolate(table, 'time', upper, 'pos') -\\n\\t\\t\\t\\tinterpolate(table, 'time', lower, 'pos')\\n\\t\\t\\t) / 2;\\n\\t\\t}\\n\\t\\tif (!options.time.max) {\\n\\t\\t\\tupper = ticks[ticks.length - 1];\\n\\t\\t\\tlower = ticks.length > 1 ? ticks[ticks.length - 2] : min;\\n\\t\\t\\tright = (\\n\\t\\t\\t\\tinterpolate(table, 'time', upper, 'pos') -\\n\\t\\t\\t\\tinterpolate(table, 'time', lower, 'pos')\\n\\t\\t\\t) / 2;\\n\\t\\t}\\n\\t}\\n\\n\\treturn {left: left, right: right};\\n}\\n\\nfunction ticksFromTimestamps(values, majorUnit) {\\n\\tvar ticks = [];\\n\\tvar i, ilen, value, major;\\n\\n\\tfor (i = 0, ilen = values.length; i < ilen; ++i) {\\n\\t\\tvalue = values[i];\\n\\t\\tmajor = majorUnit ? value === +moment(value).startOf(majorUnit) : false;\\n\\n\\t\\tticks.push({\\n\\t\\t\\tvalue: value,\\n\\t\\t\\tmajor: major\\n\\t\\t});\\n\\t}\\n\\n\\treturn ticks;\\n}\\n\\nmodule.exports = function(Chart) {\\n\\n\\tvar defaultConfig = {\\n\\t\\tposition: 'bottom',\\n\\n\\t\\t/**\\n\\t\\t * Data distribution along the scale:\\n\\t\\t * - 'linear': data are spread according to their time (distances can vary),\\n\\t\\t * - 'series': data are spread at the same distance from each other.\\n\\t\\t * @see https://github.com/chartjs/Chart.js/pull/4507\\n\\t\\t * @since 2.7.0\\n\\t\\t */\\n\\t\\tdistribution: 'linear',\\n\\n\\t\\t/**\\n\\t\\t * Scale boundary strategy (bypassed by min/max time options)\\n\\t\\t * - `data`: make sure data are fully visible, ticks outside are removed\\n\\t\\t * - `ticks`: make sure ticks are fully visible, data outside are truncated\\n\\t\\t * @see https://github.com/chartjs/Chart.js/pull/4556\\n\\t\\t * @since 2.7.0\\n\\t\\t */\\n\\t\\tbounds: 'data',\\n\\n\\t\\ttime: {\\n\\t\\t\\tparser: false, // false == a pattern string from http://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\\n\\t\\t\\tformat: false, // DEPRECATED false == date objects, moment object, callback or a pattern string from http://momentjs.com/docs/#/parsing/string-format/\\n\\t\\t\\tunit: false, // false == automatic or override with week, month, year, etc.\\n\\t\\t\\tround: false, // none, or override with week, month, year, etc.\\n\\t\\t\\tdisplayFormat: false, // DEPRECATED\\n\\t\\t\\tisoWeekday: false, // override week start day - see http://momentjs.com/docs/#/get-set/iso-weekday/\\n\\t\\t\\tminUnit: 'millisecond',\\n\\n\\t\\t\\t// defaults to unit's corresponding unitFormat below or override using pattern string from http://momentjs.com/docs/#/displaying/format/\\n\\t\\t\\tdisplayFormats: {\\n\\t\\t\\t\\tmillisecond: 'h:mm:ss.SSS a', // 11:20:01.123 AM,\\n\\t\\t\\t\\tsecond: 'h:mm:ss a', // 11:20:01 AM\\n\\t\\t\\t\\tminute: 'h:mm a', // 11:20 AM\\n\\t\\t\\t\\thour: 'hA', // 5PM\\n\\t\\t\\t\\tday: 'MMM D', // Sep 4\\n\\t\\t\\t\\tweek: 'll', // Week 46, or maybe \\\"[W]WW - YYYY\\\" ?\\n\\t\\t\\t\\tmonth: 'MMM YYYY', // Sept 2015\\n\\t\\t\\t\\tquarter: '[Q]Q - YYYY', // Q3\\n\\t\\t\\t\\tyear: 'YYYY' // 2015\\n\\t\\t\\t},\\n\\t\\t},\\n\\t\\tticks: {\\n\\t\\t\\tautoSkip: false,\\n\\n\\t\\t\\t/**\\n\\t\\t\\t * Ticks generation input values:\\n\\t\\t\\t * - 'auto': generates \\\"optimal\\\" ticks based on scale size and time options.\\n\\t\\t\\t * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\\n\\t\\t\\t * - 'labels': generates ticks from user given `data.labels` values ONLY.\\n\\t\\t\\t * @see https://github.com/chartjs/Chart.js/pull/4507\\n\\t\\t\\t * @since 2.7.0\\n\\t\\t\\t */\\n\\t\\t\\tsource: 'auto',\\n\\n\\t\\t\\tmajor: {\\n\\t\\t\\t\\tenabled: false\\n\\t\\t\\t}\\n\\t\\t}\\n\\t};\\n\\n\\tvar TimeScale = Chart.Scale.extend({\\n\\t\\tinitialize: function() {\\n\\t\\t\\tif (!moment) {\\n\\t\\t\\t\\tthrow new Error('Chart.js - Moment.js could not be found! You must include it before Chart.js to use the time scale. Download at https://momentjs.com');\\n\\t\\t\\t}\\n\\n\\t\\t\\tthis.mergeTicksOptions();\\n\\n\\t\\t\\tChart.Scale.prototype.initialize.call(this);\\n\\t\\t},\\n\\n\\t\\tupdate: function() {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\tvar options = me.options;\\n\\n\\t\\t\\t// DEPRECATIONS: output a message only one time per update\\n\\t\\t\\tif (options.time && options.time.format) {\\n\\t\\t\\t\\tconsole.warn('options.time.format is deprecated and replaced by options.time.parser.');\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn Chart.Scale.prototype.update.apply(me, arguments);\\n\\t\\t},\\n\\n\\t\\t/**\\n\\t\\t * Allows data to be referenced via 't' attribute\\n\\t\\t */\\n\\t\\tgetRightValue: function(rawValue) {\\n\\t\\t\\tif (rawValue && rawValue.t !== undefined) {\\n\\t\\t\\t\\trawValue = rawValue.t;\\n\\t\\t\\t}\\n\\t\\t\\treturn Chart.Scale.prototype.getRightValue.call(this, rawValue);\\n\\t\\t},\\n\\n\\t\\tdetermineDataLimits: function() {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\tvar chart = me.chart;\\n\\t\\t\\tvar timeOpts = me.options.time;\\n\\t\\t\\tvar min = parse(timeOpts.min, me) || MAX_INTEGER;\\n\\t\\t\\tvar max = parse(timeOpts.max, me) || MIN_INTEGER;\\n\\t\\t\\tvar timestamps = [];\\n\\t\\t\\tvar datasets = [];\\n\\t\\t\\tvar labels = [];\\n\\t\\t\\tvar i, j, ilen, jlen, data, timestamp;\\n\\n\\t\\t\\t// Convert labels to timestamps\\n\\t\\t\\tfor (i = 0, ilen = chart.data.labels.length; i < ilen; ++i) {\\n\\t\\t\\t\\tlabels.push(parse(chart.data.labels[i], me));\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Convert data to timestamps\\n\\t\\t\\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\\n\\t\\t\\t\\tif (chart.isDatasetVisible(i)) {\\n\\t\\t\\t\\t\\tdata = chart.data.datasets[i].data;\\n\\n\\t\\t\\t\\t\\t// Let's consider that all data have the same format.\\n\\t\\t\\t\\t\\tif (helpers.isObject(data[0])) {\\n\\t\\t\\t\\t\\t\\tdatasets[i] = [];\\n\\n\\t\\t\\t\\t\\t\\tfor (j = 0, jlen = data.length; j < jlen; ++j) {\\n\\t\\t\\t\\t\\t\\t\\ttimestamp = parse(data[j], me);\\n\\t\\t\\t\\t\\t\\t\\ttimestamps.push(timestamp);\\n\\t\\t\\t\\t\\t\\t\\tdatasets[i][j] = timestamp;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\ttimestamps.push.apply(timestamps, labels);\\n\\t\\t\\t\\t\\t\\tdatasets[i] = labels.slice(0);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tdatasets[i] = [];\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (labels.length) {\\n\\t\\t\\t\\t// Sort labels **after** data have been converted\\n\\t\\t\\t\\tlabels = arrayUnique(labels).sort(sorter);\\n\\t\\t\\t\\tmin = Math.min(min, labels[0]);\\n\\t\\t\\t\\tmax = Math.max(max, labels[labels.length - 1]);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (timestamps.length) {\\n\\t\\t\\t\\ttimestamps = arrayUnique(timestamps).sort(sorter);\\n\\t\\t\\t\\tmin = Math.min(min, timestamps[0]);\\n\\t\\t\\t\\tmax = Math.max(max, timestamps[timestamps.length - 1]);\\n\\t\\t\\t}\\n\\n\\t\\t\\t// In case there is no valid min/max, let's use today limits\\n\\t\\t\\tmin = min === MAX_INTEGER ? +moment().startOf('day') : min;\\n\\t\\t\\tmax = max === MIN_INTEGER ? +moment().endOf('day') + 1 : max;\\n\\n\\t\\t\\t// Make sure that max is strictly higher than min (required by the lookup table)\\n\\t\\t\\tme.min = Math.min(min, max);\\n\\t\\t\\tme.max = Math.max(min + 1, max);\\n\\n\\t\\t\\t// PRIVATE\\n\\t\\t\\tme._horizontal = me.isHorizontal();\\n\\t\\t\\tme._table = [];\\n\\t\\t\\tme._timestamps = {\\n\\t\\t\\t\\tdata: timestamps,\\n\\t\\t\\t\\tdatasets: datasets,\\n\\t\\t\\t\\tlabels: labels\\n\\t\\t\\t};\\n\\t\\t},\\n\\n\\t\\tbuildTicks: function() {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\tvar min = me.min;\\n\\t\\t\\tvar max = me.max;\\n\\t\\t\\tvar options = me.options;\\n\\t\\t\\tvar timeOpts = options.time;\\n\\t\\t\\tvar formats = timeOpts.displayFormats;\\n\\t\\t\\tvar capacity = me.getLabelCapacity(min);\\n\\t\\t\\tvar unit = timeOpts.unit || determineUnit(timeOpts.minUnit, min, max, capacity);\\n\\t\\t\\tvar majorUnit = determineMajorUnit(unit);\\n\\t\\t\\tvar timestamps = [];\\n\\t\\t\\tvar ticks = [];\\n\\t\\t\\tvar i, ilen, timestamp;\\n\\n\\t\\t\\tswitch (options.ticks.source) {\\n\\t\\t\\tcase 'data':\\n\\t\\t\\t\\ttimestamps = me._timestamps.data;\\n\\t\\t\\t\\tbreak;\\n\\t\\t\\tcase 'labels':\\n\\t\\t\\t\\ttimestamps = me._timestamps.labels;\\n\\t\\t\\t\\tbreak;\\n\\t\\t\\tcase 'auto':\\n\\t\\t\\tdefault:\\n\\t\\t\\t\\ttimestamps = generate(min, max, unit, majorUnit, capacity, options);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (options.bounds === 'ticks' && timestamps.length) {\\n\\t\\t\\t\\tmin = timestamps[0];\\n\\t\\t\\t\\tmax = timestamps[timestamps.length - 1];\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Enforce limits with user min/max options\\n\\t\\t\\tmin = parse(timeOpts.min, me) || min;\\n\\t\\t\\tmax = parse(timeOpts.max, me) || max;\\n\\n\\t\\t\\t// Remove ticks outside the min/max range\\n\\t\\t\\tfor (i = 0, ilen = timestamps.length; i < ilen; ++i) {\\n\\t\\t\\t\\ttimestamp = timestamps[i];\\n\\t\\t\\t\\tif (timestamp >= min && timestamp <= max) {\\n\\t\\t\\t\\t\\tticks.push(timestamp);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\tme.min = min;\\n\\t\\t\\tme.max = max;\\n\\n\\t\\t\\t// PRIVATE\\n\\t\\t\\tme._unit = unit;\\n\\t\\t\\tme._majorUnit = majorUnit;\\n\\t\\t\\tme._minorFormat = formats[unit];\\n\\t\\t\\tme._majorFormat = formats[majorUnit];\\n\\t\\t\\tme._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\\n\\t\\t\\tme._offsets = computeOffsets(me._table, ticks, min, max, options);\\n\\n\\t\\t\\treturn ticksFromTimestamps(ticks, majorUnit);\\n\\t\\t},\\n\\n\\t\\tgetLabelForIndex: function(index, datasetIndex) {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\tvar data = me.chart.data;\\n\\t\\t\\tvar timeOpts = me.options.time;\\n\\t\\t\\tvar label = data.labels && index < data.labels.length ? data.labels[index] : '';\\n\\t\\t\\tvar value = data.datasets[datasetIndex].data[index];\\n\\n\\t\\t\\tif (helpers.isObject(value)) {\\n\\t\\t\\t\\tlabel = me.getRightValue(value);\\n\\t\\t\\t}\\n\\t\\t\\tif (timeOpts.tooltipFormat) {\\n\\t\\t\\t\\tlabel = momentify(label, timeOpts).format(timeOpts.tooltipFormat);\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn label;\\n\\t\\t},\\n\\n\\t\\t/**\\n\\t\\t * Function to format an individual tick mark\\n\\t\\t * @private\\n\\t\\t */\\n\\t\\ttickFormatFunction: function(tick, index, ticks) {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\tvar options = me.options;\\n\\t\\t\\tvar time = tick.valueOf();\\n\\t\\t\\tvar majorUnit = me._majorUnit;\\n\\t\\t\\tvar majorFormat = me._majorFormat;\\n\\t\\t\\tvar majorTime = tick.clone().startOf(me._majorUnit).valueOf();\\n\\t\\t\\tvar majorTickOpts = options.ticks.major;\\n\\t\\t\\tvar major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\\n\\t\\t\\tvar label = tick.format(major ? majorFormat : me._minorFormat);\\n\\t\\t\\tvar tickOpts = major ? majorTickOpts : options.ticks.minor;\\n\\t\\t\\tvar formatter = helpers.valueOrDefault(tickOpts.callback, tickOpts.userCallback);\\n\\n\\t\\t\\treturn formatter ? formatter(label, index, ticks) : label;\\n\\t\\t},\\n\\n\\t\\tconvertTicksToLabels: function(ticks) {\\n\\t\\t\\tvar labels = [];\\n\\t\\t\\tvar i, ilen;\\n\\n\\t\\t\\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\\n\\t\\t\\t\\tlabels.push(this.tickFormatFunction(moment(ticks[i].value), i, ticks));\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn labels;\\n\\t\\t},\\n\\n\\t\\t/**\\n\\t\\t * @private\\n\\t\\t */\\n\\t\\tgetPixelForOffset: function(time) {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\tvar size = me._horizontal ? me.width : me.height;\\n\\t\\t\\tvar start = me._horizontal ? me.left : me.top;\\n\\t\\t\\tvar pos = interpolate(me._table, 'time', time, 'pos');\\n\\n\\t\\t\\treturn start + size * (me._offsets.left + pos) / (me._offsets.left + 1 + me._offsets.right);\\n\\t\\t},\\n\\n\\t\\tgetPixelForValue: function(value, index, datasetIndex) {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\tvar time = null;\\n\\n\\t\\t\\tif (index !== undefined && datasetIndex !== undefined) {\\n\\t\\t\\t\\ttime = me._timestamps.datasets[datasetIndex][index];\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (time === null) {\\n\\t\\t\\t\\ttime = parse(value, me);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (time !== null) {\\n\\t\\t\\t\\treturn me.getPixelForOffset(time);\\n\\t\\t\\t}\\n\\t\\t},\\n\\n\\t\\tgetPixelForTick: function(index) {\\n\\t\\t\\tvar ticks = this.getTicks();\\n\\t\\t\\treturn index >= 0 && index < ticks.length ?\\n\\t\\t\\t\\tthis.getPixelForOffset(ticks[index].value) :\\n\\t\\t\\t\\tnull;\\n\\t\\t},\\n\\n\\t\\tgetValueForPixel: function(pixel) {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\tvar size = me._horizontal ? me.width : me.height;\\n\\t\\t\\tvar start = me._horizontal ? me.left : me.top;\\n\\t\\t\\tvar pos = (size ? (pixel - start) / size : 0) * (me._offsets.left + 1 + me._offsets.left) - me._offsets.right;\\n\\t\\t\\tvar time = interpolate(me._table, 'pos', pos, 'time');\\n\\n\\t\\t\\treturn moment(time);\\n\\t\\t},\\n\\n\\t\\t/**\\n\\t\\t * Crude approximation of what the label width might be\\n\\t\\t * @private\\n\\t\\t */\\n\\t\\tgetLabelWidth: function(label) {\\n\\t\\t\\tvar me = this;\\n\\t\\t\\tvar ticksOpts = me.options.ticks;\\n\\t\\t\\tvar tickLabelWidth = me.ctx.measureText(label).width;\\n\\t\\t\\tvar angle = helpers.toRadians(ticksOpts.maxRotation);\\n\\t\\t\\tvar cosRotation = Math.cos(angle);\\n\\t\\t\\tvar sinRotation = Math.sin(angle);\\n\\t\\t\\tvar tickFontSize = helpers.valueOrDefault(ticksOpts.fontSize, defaults.global.defaultFontSize);\\n\\n\\t\\t\\treturn (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation);\\n\\t\\t},\\n\\n\\t\\t/**\\n\\t\\t * @private\\n\\t\\t */\\n\\t\\tgetLabelCapacity: function(exampleTime) {\\n\\t\\t\\tvar me = this;\\n\\n\\t\\t\\tme._minorFormat = me.options.time.displayFormats.millisecond;\\t// Pick the longest format for guestimation\\n\\n\\t\\t\\tvar exampleLabel = me.tickFormatFunction(moment(exampleTime), 0, []);\\n\\t\\t\\tvar tickLabelWidth = me.getLabelWidth(exampleLabel);\\n\\t\\t\\tvar innerWidth = me.isHorizontal() ? me.width : me.height;\\n\\n\\t\\t\\treturn Math.floor(innerWidth / tickLabelWidth);\\n\\t\\t}\\n\\t});\\n\\n\\tChart.scaleService.registerScaleType('time', TimeScale, defaultConfig);\\n};\\n\\n},{\\\"25\\\":25,\\\"45\\\":45,\\\"6\\\":6}]},{},[7])(7)\\n});\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/josephpallamidessi/com-mmxlabs-lngdataserver-web-navigator/~/raw-loader!/Users/josephpallamidessi/com-mmxlabs-lngdataserver-web-navigator/~/chart.js/dist/Chart.bundle.js\n// module id = ../../../../raw-loader/index.js!../../../../chart.js/dist/Chart.bundle.js\n// module chunks = 3","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\nmodule.exports = function(src) {\n\tfunction log(error) {\n\t\t(typeof console !== \"undefined\")\n\t\t&& (console.error || console.log)(\"[Script Loader]\", error);\n\t}\n\n\t// Check for IE =< 8\n\tfunction isIE() {\n\t\treturn typeof attachEvent !== \"undefined\" && typeof addEventListener === \"undefined\";\n\t}\n\n\ttry {\n\t\tif (typeof execScript !== \"undefined\" && isIE()) {\n\t\t\texecScript(src);\n\t\t} else if (typeof eval !== \"undefined\") {\n\t\t\teval.call(null, src);\n\t\t} else {\n\t\t\tlog(\"EvalError: No eval function available\");\n\t\t}\n\t} catch (error) {\n\t\tlog(error);\n\t}\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/josephpallamidessi/com-mmxlabs-lngdataserver-web-navigator/~/script-loader/addScript.js\n// module id = ../../../../script-loader/addScript.js\n// module chunks = 3","require(\"!!/Users/josephpallamidessi/com-mmxlabs-lngdataserver-web-navigator/node_modules/script-loader/addScript.js\")(require(\"!!/Users/josephpallamidessi/com-mmxlabs-lngdataserver-web-navigator/node_modules/raw-loader/index.js!/Users/josephpallamidessi/com-mmxlabs-lngdataserver-web-navigator/node_modules/chart.js/dist/Chart.bundle.js\"))\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/josephpallamidessi/com-mmxlabs-lngdataserver-web-navigator/~/script-loader!/Users/josephpallamidessi/com-mmxlabs-lngdataserver-web-navigator/~/chart.js/dist/Chart.bundle.js\n// module id = ../../../../script-loader/index.js!../../../../chart.js/dist/Chart.bundle.js\n// module chunks = 3"],"sourceRoot":"webpack:///"}
<%
	// MMXCore type adjustment hack, part 1 (see also fixtypes1.javajetinc for part 2, which should be being invoked below)
	// The process here is as follows:
	// 1. go through the features on this eClass
	// 2. for any reference type feature, look at the eClass it is pointing to
	// 3. if that eClass has an annotation changing its name, _actually change the name_ of the eClass in memory temporarily
	//    and store the old name on the eClass
	
	{
	final String MMXCORE_ANNOTATION = "http://www.mmxlabs.com/mmxcore/1/MMXCore";
	final String MMXCORE_GENERATED_TYPE = "generatedType";
	final String MMXCORE_ORIGINAL_TYPE = "originalType";
	
	for (GenFeature genFeature : (isImplementation ? genClass.getImplementedGenFeatures() : genClass.getDeclaredGenFeatures())) {
		if (genFeature.isReferenceType()) {
			final EAnnotation annotation = ((EReference)genFeature.getEcoreFeature()).getEReferenceType().getEAnnotation(MMXCORE_ANNOTATION);
			if (annotation != null && annotation.getDetails().containsKey(MMXCORE_GENERATED_TYPE)) {
				// find new class name
				final String[] parts = annotation.getDetails().get(MMXCORE_GENERATED_TYPE).split("\\.");
				final EClass referenceClass = ((EReference)genFeature.getEcoreFeature()).getEReferenceType();
				// store old class name
				annotation.getDetails().put(MMXCORE_ORIGINAL_TYPE, referenceClass.getName());
				// change class' name temporarily
				referenceClass.setName(parts[parts.length-1]);
			}
		}
	}
	}
%>
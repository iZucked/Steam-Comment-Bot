/**
 * Copyright (C) Minimax Labs Ltd., 2010 - 2015
 * All rights reserved.
 */
package com.mmxlabs.scheduler.optimiser.providers;

import com.mmxlabs.optimiser.core.ISequenceElement;
import com.mmxlabs.optimiser.core.scenario.IDataComponentProvider;
import com.mmxlabs.scheduler.optimiser.components.IGeneratedCharterOutVesselEventPortSlot;
import com.mmxlabs.scheduler.optimiser.components.IPortSlot;
import com.mmxlabs.scheduler.optimiser.components.IVesselEventPortSlot;

/**
 * {@link IDataComponentProvider} interface to provide {@link IPortSlot} or {@link ISequenceElement} information for the given sequence elements or slots. Slots and sequence elements have been generated by existing sequence events.
 * 
 * @author achurchill
 */
public interface IGeneratedCharterOutSlotProvider extends IDataComponentProvider {

	/**
	 * Returns the {@link IVesselEventPortSlot} for the given element.
	 * 
	 * @param element
	 * @return
	 */
	IGeneratedCharterOutVesselEventPortSlot getPortSlot(ISequenceElement element);

	/**
	 * Returns the sequence element for the given {@link IVesselEventPortSlot}.
	 * 
	 * @param portSlot
	 * @return
	 */
	ISequenceElement getSequenceElement(IGeneratedCharterOutVesselEventPortSlot portSlot);

	/**
	 * Returns the {@link IVesselEventPortSlot} for the element used to generate this slot.
	 * 
	 * @param element
	 * @return
	 */
	IGeneratedCharterOutVesselEventPortSlot getPortSlotGeneratedByElement(ISequenceElement element);

	/**
	 * Returns the sequence element that was used to generate the given {@link IVesselEventPortSlot}.
	 * 
	 * @param portSlot
	 * @return
	 */
	ISequenceElement getSequenceElementFromGeneratedPortSlot(IGeneratedCharterOutVesselEventPortSlot portSlot);
	
	/**
	 * Returns the {@link IVesselEventPortSlot} for the IPortSlot used to generate this slot.
	 * 
	 * @param element
	 * @return
	 */
	IGeneratedCharterOutVesselEventPortSlot getPortSlotGeneratedByPortSlot(IPortSlot existingPortSlot);

}
